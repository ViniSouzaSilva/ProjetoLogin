<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Genome.Core</name>
    </assembly>
    <members>
        <member name="T:Genome.AppManagerExtensions">
            <summary>
            Extensions for <see cref="T:Genome.AppManagement.IAppManager"/>
            </summary>
        </member>
        <member name="M:Genome.AppManagerExtensions.InitializeApp(Genome.AppManagement.IAppManager,Genome.AppManagement.AppComponentInitParams[])">
            <summary>
            Initializes an application
            </summary>
            <param name="initParams">application components init arguments</param>
            <returns>rollback object </returns>
        </member>
        <member name="M:Genome.AppManagerExtensions.InvokeApp(Genome.AppManagement.IAppManager,System.Action,Genome.AppManagement.AppComponentInitParams[])">
            <summary>
            Invokes application. 
            </summary>
            <param name="mainMethod">main application method</param>
            <param name="initParams">application components init arguments</param>
        </member>
        <member name="M:Genome.AppManagerExtensions.InvokeApp(Genome.AppManagement.IAppManager,Genome.AppManagement.AppComponentInitParams[])">
            <summary>
            Invokes application. 
            </summary>
            <param name="initParams">application components init arguments</param>
        </member>
        <member name="T:Genome.AssemblyControllerExtensions">
            <summary>
            Extensions method set for <see cref="T:Genome.AppManagement.IAssembliesController"/>
            </summary>
        </member>
        <member name="M:Genome.AssemblyControllerExtensions.UnregisterAllAssemblies(Genome.AppManagement.IAssembliesController)">
            <summary>
            Unregisters all registered assemblies in specified controller
            </summary>
        </member>
        <member name="T:Genome.AppManagement.ComponentFacadeAttribute">
            <summary>
            Sets component context for workflow when it call method of marked interface
            </summary>
        </member>
        <member name="T:Genome.SetConstantContextAttribute">
            <summary>
            Sets context for marked method
            </summary>
        </member>
        <member name="T:Genome.Meta.Aspect.FactoryAspectAttribute">
            <summary>
            Represent an aspect attribute with factory method
            </summary>
        </member>
        <member name="T:Genome.Meta.Aspect.AspectAttribute">
            <summary>
            Represent an aspect attribute
            </summary>
        </member>
        <member name="T:Genome.Meta.MetaMemberAttribute">
            <summary>
            Provides framework supported restricts and validations for member attributes
            </summary>
        </member>
        <member name="T:Genome.IValidator`1">
            <summary>
            Defines a validator
            </summary>
            <typeparam name="TArg">object for validation</typeparam>
        </member>
        <member name="T:Genome.IValidator`2">
            <summary>
            Defaines a validatior
            </summary>
            <typeparam name="TArg">object for validation</typeparam>
            <typeparam name="TRes">validation result type</typeparam>
        </member>
        <member name="M:Genome.IValidator`2.Validate(`0)">
            <summary>
            Validatas an object
            </summary>
        </member>
        <member name="M:Genome.Meta.MetaMemberAttribute.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Meta.MetaMemberAttribute"/>
            </summary>
            <param name="isStatic">static or instance member restriction</param>
        </member>
        <member name="M:Genome.Meta.Aspect.AspectAttribute.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Meta.Aspect.AspectAttribute"/>
            </summary>
        </member>
        <member name="M:Genome.Meta.Aspect.AspectAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Meta.Aspect.AspectAttribute"/>
            </summary>
            <param name="handlerType">type of aspect handler</param>
            <exception cref="T:System.ArgumentNullException">handler type is null</exception>
        </member>
        <member name="M:Genome.Meta.Aspect.AspectAttribute.#ctor(Genome.IInstanceFactory{Genome.Meta.Aspect.AspectHandler})">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Meta.Aspect.AspectAttribute"/>
            </summary>
            <param name="handlerFactory">aspect handler factory</param>
            <exception cref="T:System.ArgumentNullException">handler factory is null</exception>
        </member>
        <member name="M:Genome.Meta.Aspect.AspectAttribute.GetAspectHandlerFactory">
            <summary>
            Gets an aspect handler factory
            </summary>
        </member>
        <member name="P:Genome.Meta.Aspect.AspectAttribute.HandlerFactory">
            <summary>
            Aspect handler factory
            </summary>
        </member>
        <member name="P:Genome.Meta.Aspect.AspectAttribute.Priority">
            <summary>
            Gets or sets processing priority level 
            </summary>
        </member>
        <member name="M:Genome.Meta.Aspect.FactoryAspectAttribute.#ctor">
            <summary>
            Initializes a new instnace of <see cref="T:Genome.Meta.Aspect.FactoryAspectAttribute"/>
            </summary>
        </member>
        <member name="M:Genome.Meta.Aspect.FactoryAspectAttribute.CreateAspectHandler">
            <summary>
            Creates an aspect handler instance
            </summary>
        </member>
        <member name="M:Genome.SetConstantContextAttribute.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of<see cref="T:Genome.SetConstantContextAttribute"/>
            </summary>
            <param name="ctxId">context identifier</param>
            <param name="ctxValue">new context value</param>
        </member>
        <member name="M:Genome.SetConstantContextAttribute.CreateAspectHandler">
            <summary>
            Creates aspect handler which contains an aspect logic
            </summary>
        </member>
        <member name="M:Genome.SetConstantContextAttribute.CreateAspectHandler(Genome.ContextId,System.Object)">
            <summary>
            Override to create custom handler
            </summary>
        </member>
        <member name="P:Genome.SetConstantContextAttribute.CtxValue">
            <summary>
            Context value
            </summary>
        </member>
        <member name="M:Genome.AppManagement.ComponentFacadeAttribute.#ctor(System.String)">
            <summary>
            Initializes an instance of <see cref="T:Genome.AppManagement.ComponentFacadeAttribute"/>
            </summary>
            <param name="componentId">component identifier</param>
        </member>
        <member name="T:Genome.AppManagement.ComponentCtx">
            <summary>
            Sets or gets operation context
            </summary>
        </member>
        <member name="T:Genome.SimpleSingletones.ContextBase`2">
            <summary>
            Base class for contexts
            </summary>
            <typeparam name="TValue">context value type</typeparam>
            <typeparam name="TCtx">context type</typeparam>
        </member>
        <member name="T:Genome.SimpleSingletones.IContext">
            <summary>
            Represent context
            </summary>
        </member>
        <member name="M:Genome.SimpleSingletones.ContextBase`2.#ctor(`0)">
            <summary>
            Initializes a new instnace of <see cref="T:Genome.SimpleSingletones.ContextBase`2"/>
            </summary>
            <param name="value">context value</param>
        </member>
        <member name="M:Genome.SimpleSingletones.ContextBase`2.GetValue">
            <summary>
            Gets context value by context type
            </summary>
            <typeparam name="T">context tyep</typeparam>
            <returns>context value</returns>
        </member>
        <member name="M:Genome.AppManagement.ComponentCtx.#ctor(Genome.AppManagement.ComponentId)">
            <summary>
            initiaslizes a new instance of <see cref="T:Genome.AppManagement.ComponentCtx"/>
            </summary>
        </member>
        <member name="T:Genome.AppManagement.ApplicationClassId">
            <summary>
            <see cref="F:Genome.AppManagement.ApplicationClassId.Description"/>
            </summary>
            <remarks>Namespace: '<see cref="F:Genome.AppManagement.ApplicationClassId.IdNamespace"/>'</remarks>
        </member>
        <member name="T:Genome.ObjectId">
            <summary>
            <see cref="F:Genome.ObjectId.Description"/>
            </summary>
            <remarks>Namespace (is not restriction): '<see cref="F:Genome.ObjectId.IdNamespace"/>'</remarks>
        </member>
        <member name="T:Genome.Identifier">
            <summary>
            Represent an identifier
            </summary>
        </member>
        <member name="F:Genome.Identifier.InheritanceNamespaceSeparator">
            <summary>
            Constains inheritance namespace separator
            </summary>
        </member>
        <member name="F:Genome.Identifier.IdPrefix">
            <summary>
            Identifier prefix
            </summary>
        </member>
        <member name="M:Genome.Identifier.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Identifier"/>
            </summary>
        </member>
        <member name="M:Genome.Identifier.Init(System.String)">
            <summary>
            Initializes an identifier
            </summary>
        </member>
        <member name="M:Genome.Identifier.ValidateIdentifier(System.String,System.String)">
            <summary>
            identifier validation
            </summary>
        </member>
        <member name="M:Genome.Identifier.ParseIdentifier(System.String,System.String)">
            <summary>
            identifier validation
            </summary>
        </member>
        <member name="M:Genome.Identifier.CreateIdString(System.String,System.String)">
            <summary>
            Creates string identifier based on specified namespace and name
            </summary>
        </member>
        <member name="M:Genome.Identifier.Create(System.String)">
            <summary>
            Creates <see cref="T:Genome.Identifier"/> based on name
            </summary>
        </member>
        <member name="M:Genome.Identifier.Validate(System.String)">
            <summary>
            Validates identifier
            </summary>
        </member>
        <member name="M:Genome.Identifier.GetNamespace">
            <summary>
            Gets identifier namespace
            </summary>
        </member>
        <member name="M:Genome.Identifier.ValidateInheritorIdNamespace(System.String,System.String,System.Type,System.Type)">
            <summary>
            Validates inheritor id namespace for base class
            </summary>
        </member>
        <member name="P:Genome.Identifier.Namespace">
            <summary>
            Gets identifier namespace
            </summary>
        </member>
        <member name="P:Genome.Identifier.Name">
            <summary>
            Gets identifier name
            </summary>
        </member>
        <member name="P:Genome.Identifier.Value">
            <summary>
            Gets identifier value
            </summary>
        </member>
        <member name="P:Genome.Identifier.CategorySegments">
            <summary>
            Gets category segments in identifier
            </summary>
        </member>
        <member name="P:Genome.Identifier.NameSegments">
            <summary>
            Gets segments in identifier name
            </summary>
        </member>
        <member name="T:Genome.Identifier.ParseIdentifierResult">
            <summary>
            Contains results of identifier parsing
            </summary>
        </member>
        <member name="P:Genome.Identifier.ParseIdentifierResult.Result">
            <summary>
            Parsing result
            </summary>
        </member>
        <member name="F:Genome.ObjectId.IdNamespace">
            <summary>
            Input namespace restriction
            </summary>
        </member>
        <member name="M:Genome.ObjectId.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.ObjectId"/>
            </summary>
        </member>
        <member name="M:Genome.ObjectId.op_Implicit(System.String)~Genome.ObjectId">
            <summary>
            Converts a <see cref="T:System.String"/> to <see cref="T:Genome.ObjectId"/>
            </summary>
        </member>
        <member name="M:Genome.ObjectId.Create(System.String)">
            <summary>
            Creates <see cref="T:Genome.ObjectId"/> based on name
            </summary>
        </member>
        <member name="M:Genome.ObjectId.Validate(System.String)">
            <summary>
            Validates identifier
            </summary>
        </member>
        <member name="M:Genome.ObjectId.ValidateIdentifier(System.String,System.String)">
            <summary>
            identifier validation
            </summary>
        </member>
        <member name="M:Genome.ObjectId.ParseIdentifier(System.String,System.String)">
            <summary>
            identifier validation
            </summary>
        </member>
        <member name="M:Genome.ObjectId.Register``1(System.String)">
            <summary>
            Registers identifier for factoring by namespace
            </summary>
        </member>
        <member name="M:Genome.ObjectId.CreateIdByNamespace(System.String)">
            <summary>
            Creates identifier by specified namespace
            </summary>
        </member>
        <member name="F:Genome.AppManagement.ApplicationClassId.IdNamespace">
            <summary>
            Input namespace restriction
            </summary>
        </member>
        <member name="F:Genome.AppManagement.ApplicationClassId.Default">
            <summary>
            Default application class id
            </summary>
        </member>
        <member name="M:Genome.AppManagement.ApplicationClassId.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.AppManagement.ApplicationClassId"/>
            </summary>
        </member>
        <member name="M:Genome.AppManagement.ApplicationClassId.#ctor">
            <summary>
            Serialization constructor
            </summary>
        </member>
        <member name="M:Genome.AppManagement.ApplicationClassId.op_Implicit(System.String)~Genome.AppManagement.ApplicationClassId">
            <summary>
            Converts a <see cref="T:System.String"/> to <see cref="T:Genome.AppManagement.ApplicationClassId"/>
            </summary>
        </member>
        <member name="M:Genome.AppManagement.ApplicationClassId.Create(System.String)">
            <summary>
            Creates <see cref="T:Genome.AppManagement.ApplicationClassId"/> based on name
            </summary>
        </member>
        <member name="M:Genome.AppManagement.ApplicationClassId.Validate(System.String)">
            <summary>
            Validates identifier
            </summary>
        </member>
        <member name="T:Genome.AppManagement.ApplicationId">
            <summary>
            <see cref="F:Genome.AppManagement.ApplicationId.Description"/>
            </summary>
            <remarks>Namespace: '<see cref="F:Genome.AppManagement.ApplicationId.IdNamespace"/>'</remarks>
        </member>
        <member name="F:Genome.AppManagement.ApplicationId.IdNamespace">
            <summary>
            Input namespace restriction
            </summary>
        </member>
        <member name="F:Genome.AppManagement.ApplicationId.Default">
            <summary>
            Default application id
            </summary>
        </member>
        <member name="M:Genome.AppManagement.ApplicationId.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.AppManagement.ApplicationId"/>
            </summary>
        </member>
        <member name="M:Genome.AppManagement.ApplicationId.#ctor">
            <summary>
            Serialization constructor
            </summary>
        </member>
        <member name="M:Genome.AppManagement.ApplicationId.op_Implicit(System.String)~Genome.AppManagement.ApplicationId">
            <summary>
            Converts a <see cref="T:System.String"/> to <see cref="T:Genome.AppManagement.ApplicationId"/>
            </summary>
        </member>
        <member name="M:Genome.AppManagement.ApplicationId.Create(System.String)">
            <summary>
            Creates <see cref="T:Genome.AppManagement.ApplicationId"/> based on name
            </summary>
        </member>
        <member name="M:Genome.AppManagement.ApplicationId.Validate(System.String)">
            <summary>
            Validates identifier
            </summary>
        </member>
        <member name="T:Genome.AppManagement.ComponentId">
            <summary>
            <see cref="F:Genome.AppManagement.ComponentId.Description"/>
            </summary>
            <remarks>Namespace: '<see cref="F:Genome.AppManagement.ComponentId.IdNamespace"/>'</remarks>
        </member>
        <member name="F:Genome.AppManagement.ComponentId.IdNamespace">
            <summary>
            Input namespace restriction
            </summary>
        </member>
        <member name="M:Genome.AppManagement.ComponentId.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.AppManagement.ComponentId"/>
            </summary>
        </member>
        <member name="M:Genome.AppManagement.ComponentId.#ctor">
            <summary>
            Serialization constructor
            </summary>
        </member>
        <member name="M:Genome.AppManagement.ComponentId.op_Implicit(System.String)~Genome.AppManagement.ComponentId">
            <summary>
            Converts a <see cref="T:System.String"/> to <see cref="T:Genome.AppManagement.ComponentId"/>
            </summary>
        </member>
        <member name="M:Genome.AppManagement.ComponentId.Create(System.String)">
            <summary>
            Creates <see cref="T:Genome.AppManagement.ComponentId"/> based on name
            </summary>
        </member>
        <member name="M:Genome.AppManagement.ComponentId.Validate(System.String)">
            <summary>
            Validates identifier
            </summary>
        </member>
        <member name="T:Genome.AppManagement.IAppManager">
            <summary>
            Defines manager that manage application structure and processes
            </summary>
        </member>
        <member name="M:Genome.AppManagement.IAppManager.InitializeApp(System.Action,Genome.AppManagement.AppComponentInitParams[])">
            <summary>
            Initializes an application
            </summary>
            <param name="afterCoreInitialization">a delegate that will has been invoked after core initialization</param>
            <param name="initParams">application components init arguments</param>
            <returns>rollback object </returns>
        </member>
        <member name="M:Genome.AppManagement.IAppManager.ReleaseApp">
            <summary>
            Releases application resources
            </summary>
        </member>
        <member name="M:Genome.AppManagement.IAppManager.InvokeApp(System.Action,System.Action,Genome.AppManagement.AppComponentInitParams[])">
            <summary>
            Invokes application. 
            </summary>
            <param name="mainMethod">main application method</param>
            <param name="afterCoreInitialization">a delegate that will has been invoked after core initialization</param>
            <param name="initParams">application components init arguments</param>
        </member>
        <member name="E:Genome.AppManagement.IAppManager.AppLoaded">
            <summary>
            Occures when application has started
            </summary>
        </member>
        <member name="E:Genome.AppManagement.IAppManager.AppClosing">
            <summary>
            Occures when application going to closing
            </summary>
        </member>
        <member name="P:Genome.AppManagement.IAppManager.ApplicationId">
            <summary>
            Deployed application identifier
            </summary>
        </member>
        <member name="P:Genome.AppManagement.IAppManager.ApplicationClassId">
            <summary>
            Application class Id
            </summary>
        </member>
        <member name="P:Genome.AppManagement.IAppManager.ApplicationFriendlyName">
            <summary>
            Application friendly name
            </summary>
        </member>
        <member name="P:Genome.AppManagement.IAppManager.ApplicationInstanceId">
            <summary>
            Application instance identifier
            </summary>
        </member>
        <member name="P:Genome.AppManagement.IAppManager.AssembliesController">
            <summary>
            Gets an assemblies controller
            </summary>
        </member>
        <member name="P:Genome.AppManagement.IAppManager.InitializationState">
            <summary>
            Gets application initialization state
            </summary>
        </member>
        <member name="T:Genome.AppManagement.AppInitializationState">
            <summary>
            State of application initialization
            </summary>
        </member>
        <member name="F:Genome.AppManagement.AppInitializationState.None">
            <summary>
            Initial value
            </summary>
        </member>
        <member name="F:Genome.AppManagement.AppInitializationState.Initializing">
            <summary>
            Processing of rest initialization
            </summary>
        </member>
        <member name="F:Genome.AppManagement.AppInitializationState.CoreInitializing">
            <summary>
            Processing of Core initialization
            </summary>
        </member>
        <member name="F:Genome.AppManagement.AppInitializationState.Initialized">
            <summary>
            An application is fully initialized
            </summary>
        </member>
        <member name="F:Genome.AppManagement.AppInitializationState.Releasing">
            <summary>
            Processing of application releasing
            </summary>
        </member>
        <member name="F:Genome.AppManagement.AppInitializationState.CoreRealeasing">
            <summary>
            Processing of Core releasing
            </summary>
        </member>
        <member name="F:Genome.AppManagement.AppInitializationState.Released">
            <summary>
            Application fully released
            </summary>
        </member>
        <member name="F:Genome.AppManagement.AppInitializationState.Fault">
            <summary>
            An error has occured when application was initializing or disposing
            </summary>
        </member>
        <member name="T:Genome.AppManagement.IAssembliesController">
            <summary>
            Controls application assemblies set
            </summary>
        </member>
        <member name="M:Genome.AppManagement.IAssembliesController.RegisterAssembly(System.Reflection.Assembly)">
            <summary>
            Registers an assembly
            </summary>
        </member>
        <member name="M:Genome.AppManagement.IAssembliesController.UnregisterAssembly(System.Reflection.Assembly)">
            <summary>
            Unregisters an assembly
            </summary>
        </member>
        <member name="M:Genome.AppManagement.IAssembliesController.IsRegistered(System.Reflection.Assembly)">
            <summary>
            Returns a registery assembly factor
            </summary>
        </member>
        <member name="P:Genome.AppManagement.IAssembliesController.PreloadAssemblyCollection">
            <summary>
            Contains names of assemblies that should be loaded right after Genome.Core assembly
            </summary>
        </member>
        <member name="P:Genome.AppManagement.IAssembliesController.Assemblies">
            <summary>
            Registered assemblies
            </summary>
        </member>
        <member name="T:Genome.AppManagement.PreloadAssemblyCollection">
            <summary>
            Contains names of assemblies that should be loaded right after Genome.Core assembly
            </summary>
        </member>
        <member name="T:Genome.AppManagement.AssemblyInfo">
            <summary>
            Contains information about assembly
            </summary>
        </member>
        <member name="M:Genome.AppManagement.AssemblyInfo.#ctor(System.Reflection.Assembly,System.Object)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.AppManagement.AssemblyInfo"/>
            </summary>
        </member>
        <member name="P:Genome.AppManagement.AssemblyInfo.Assembly">
            <summary>
            Target assembly
            </summary>
        </member>
        <member name="P:Genome.AppManagement.AssemblyInfo.Controller">
            <summary>
            Controller of target assembly
            </summary>
        </member>
        <member name="T:Ids.Application.Contexts.Component">
            <summary>
            <see cref="F:Ids.Application.Contexts.Component.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Application.Contexts.Component.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Application.Contexts.Component.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Genome.AppManagement.AppInitParams">
            <summary>
            Contains application initialze parameters
            </summary>
        </member>
        <member name="M:Genome.AppManagement.AppInitParams.#ctor(System.Collections.Generic.IDictionary{Genome.Configuration.ConstantId,System.Object})">
            <summary>
            Initializes a new instance of <see cref="T:Genome.AppManagement.AppInitParams"/>
            </summary>
            <param name="parameters">init oarameters dictonary</param>
            <exception cref="T:System.ArgumentNullException">paramteters dictionary is null</exception>
        </member>
        <member name="T:Genome.AppManagement.AppInitParameterAttribute">
            <summary>
            Specifies an apllication init parameter
            </summary>
        </member>
        <member name="T:Genome.Meta.AssemblyMetaAttribute">
            <summary>
            The base class for assembly meta attributes. Supported by framework.
            </summary>
        </member>
        <member name="M:Genome.Meta.AssemblyMetaAttribute.Process(System.Reflection.Assembly)">
            <summary>
            Processe an assebmbly
            </summary>
            <param name="assembly">marked assembly</param>
        </member>
        <member name="P:Genome.Meta.AssemblyMetaAttribute.ApplyAfterCoreInitialization">
            <summary>
            Determines that attribute mast be used after core initialization
            </summary>
        </member>
        <member name="M:Genome.AppManagement.AppInitParameterAttribute.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.AppManagement.AppInitParameterAttribute"/>
            </summary>
        </member>
        <member name="M:Genome.AppManagement.AppInitParameterAttribute.#ctor(Genome.Configuration.ConstantId,System.Object)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.AppManagement.AppInitParameterAttribute"/>
            </summary>
        </member>
        <member name="P:Genome.AppManagement.AppInitParameterAttribute.ContatntId">
            <summary>
            Parameter identifier
            </summary>
        </member>
        <member name="P:Genome.AppManagement.AppInitParameterAttribute.Value">
            <summary>
            Paramtere value 
            </summary>
        </member>
        <member name="T:Genome.AppManagement.InitParamAttribute">
            <summary>
            Specifies a componentinit param property
            </summary>
        </member>
        <member name="M:Genome.AppManagement.InitParamAttribute.#ctor(System.String)">
            <summary>
            Initialize a new instance of <see cref="T:Genome.AppManagement.InitParamAttribute"/>
            </summary>
        </member>
        <member name="P:Genome.AppManagement.InitParamAttribute.ConstantId">
            <summary>
            Constnat identifier
            </summary>
        </member>
        <member name="P:Genome.AppManagement.InitParamAttribute.DefaultValue">
            <summary>
            If parameter contains DefaultValue then it considered as default and will not apply
            </summary>
        </member>
        <member name="T:Genome.IInitiable">
            <summary>
            Defines object which mast be initialed after creation
            </summary>
        </member>
        <member name="M:Genome.IInitiable.Initialize">
            <summary>
            Initializes the object
            </summary>
            <remarks>Calls by platform automatically </remarks>
        </member>
        <member name="T:Ids.LayerSystem.Contexts.Layer">
            <summary>
            <see cref="F:Ids.LayerSystem.Contexts.Layer.Description"/>
            </summary>
        </member>
        <member name="F:Ids.LayerSystem.Contexts.Layer.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.LayerSystem.Contexts.Layer.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Genome.Commands.CommandPerformerId">
            <summary>
            <see cref="F:Genome.Commands.CommandPerformerId.Description"/>
            </summary>
            <remarks>Namespace: '<see cref="F:Genome.Commands.CommandPerformerId.IdNamespace"/>'</remarks>
        </member>
        <member name="F:Genome.Commands.CommandPerformerId.IdNamespace">
            <summary>
            Input namespace restriction
            </summary>
        </member>
        <member name="M:Genome.Commands.CommandPerformerId.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Commands.CommandPerformerId"/>
            </summary>
        </member>
        <member name="M:Genome.Commands.CommandPerformerId.#ctor">
            <summary>
            Serialization constructor
            </summary>
        </member>
        <member name="M:Genome.Commands.CommandPerformerId.op_Implicit(System.String)~Genome.Commands.CommandPerformerId">
            <summary>
            Converts a <see cref="T:System.String"/> to <see cref="T:Genome.Commands.CommandPerformerId"/>
            </summary>
        </member>
        <member name="M:Genome.Commands.CommandPerformerId.Create(System.String)">
            <summary>
            Creates <see cref="T:Genome.Commands.CommandPerformerId"/> based on name
            </summary>
        </member>
        <member name="M:Genome.Commands.CommandPerformerId.Validate(System.String)">
            <summary>
            Validates identifier
            </summary>
        </member>
        <member name="T:Genome.Commands.CommandAttribute">
            <summary>
            Specifies a command type
            </summary>
        </member>
        <member name="T:Genome.MetaTyping.BindMetaTypeAttribute">
            <summary>
            Binds meta type for marked instace type
            </summary>
        </member>
        <member name="T:Genome.Meta.MetaAttribute">
            <summary>
            represent a base attribute for meta block type's attributes
            </summary>
        </member>
        <member name="M:Genome.Meta.MetaAttribute.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Meta.MetaAttribute"/>
            </summary>
        </member>
        <member name="M:Genome.Meta.MetaAttribute.RegisterMemberAttributes(Genome.Meta.IMemberAttributeRegistrar)">
            <summary>
            Registers a used member attributes
            </summary>
        </member>
        <member name="M:Genome.Meta.MetaAttribute.Process(Genome.Meta.MetaAttributeProcessingContext)">
            <summary>
            Calls when assembly scanning
            </summary>
        </member>
        <member name="P:Genome.Meta.MetaAttribute.InstanceRequired">
            <summary>
            Intdicates that instance of marked type is required
            </summary>
        </member>
        <member name="M:Genome.MetaTyping.BindMetaTypeAttribute.#ctor(System.String,System.Type,System.Type)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.MetaTyping.BindMetaTypeAttribute"/>
            </summary>
        </member>
        <member name="M:Genome.MetaTyping.BindMetaTypeAttribute.OnTypeInitialization(Genome.MetaTyping.MetaType)">
            <summary>
            Override to additional initialize a meta type
            </summary>
        </member>
        <member name="P:Genome.MetaTyping.BindMetaTypeAttribute.KindId">
            <summary>
            Metatype kind id
            </summary>
        </member>
        <member name="P:Genome.MetaTyping.BindMetaTypeAttribute.Name">
            <summary>
            Meta type name
            </summary>
        </member>
        <member name="P:Genome.MetaTyping.BindMetaTypeAttribute.Id">
            <summary>
            Meta type identifier
            </summary>
        </member>
        <member name="M:Genome.Commands.CommandAttribute.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Commands.CommandAttribute"/>
            </summary>
        </member>
        <member name="T:Genome.Commands.Command">
            <summary>
            Contains logic for preforming
            </summary>
        </member>
        <member name="T:Genome.MetaTyping.MetaInstance`1">
            <summary>
            Meta instance base type
            </summary>
            <typeparam name="TType">meta-type type</typeparam>
        </member>
        <member name="M:Genome.MetaTyping.MetaInstance`1.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Genome.MetaTyping.MetaInstance`1"/>
            </summary>
        </member>
        <member name="P:Genome.MetaTyping.MetaInstance`1.Id">
            <summary>
            Instance identifier
            </summary>
        </member>
        <member name="P:Genome.MetaTyping.MetaInstance`1.Type">
            <summary>
            instance meta-type
            </summary>
        </member>
        <member name="T:Genome.IValidatable">
            <summary>
            Defines a validatable object
            </summary>
        </member>
        <member name="T:Genome.IValidatable`1">
            <summary>
            Defines a validatable object
            </summary>
        </member>
        <member name="M:Genome.IValidatable`1.Validate">
            <summary>
            Validates current object. 
            </summary>
        </member>
        <member name="T:Genome.Commands.CommandContext">
            <summary>
            Contains command working around things
            </summary>
        </member>
        <member name="M:Genome.Commands.CommandContext.#ctor(Genome.ProcessingModel.Progress,Genome.ProcessingModel.ReportFormer)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Commands.CommandContext"/>
            </summary>
        </member>
        <member name="P:Genome.Commands.CommandContext.Progress">
            <summary>
            Progress
            </summary>
        </member>
        <member name="P:Genome.Commands.CommandContext.ReportFormer">
            <summary>
            Form a command report
            </summary>
        </member>
        <member name="T:Genome.CommandExtensions">
            <summary>
            Extension methods for <see cref="T:Genome.Commands.Command"/>
            </summary>
        </member>
        <member name="M:Genome.CommandExtensions.Perform(Genome.Commands.Command)">
            <summary>
            Perform a command through default command performer
            </summary>
            <param name="command">command for performing</param>
        </member>
        <member name="M:Genome.CommandExtensions.Perform(Genome.Commands.Command,Genome.Commands.CommandPerformerId)">
            <summary>
            Perform a command through specified performer
            </summary>
            <param name="command">command for performing</param>
            <param name="performerId">specified performer id</param>
        </member>
        <member name="M:Genome.CommandExtensions.Perform(Genome.Commands.Command,Genome.Commands.ICommandPerformer)">
            <summary>
            Performs a command using performer
            </summary>
        </member>
        <member name="M:Genome.CommandExtensions.Revert(Genome.Commands.Command,Genome.Commands.ICommandPerformer)">
            <summary>
            Reverts a command using performer
            </summary>
        </member>
        <member name="M:Genome.CommandExtensions.Revert(Genome.Commands.Command)">
            <summary>
            Perform a command through default command performer
            </summary>
            <param name="command">command for performing</param>
        </member>
        <member name="M:Genome.CommandExtensions.Revert(Genome.Commands.Command,Genome.Commands.CommandPerformerId)">
            <summary>
            Perform a command through specified performer
            </summary>
            <param name="command">command for performing</param>
            <param name="performerId">specified performer id</param>
        </member>
        <member name="T:Genome.Commands.CommandIterationMode">
            <summary>
            Specifies how performer must perform a command
            </summary>
        </member>
        <member name="F:Genome.Commands.CommandIterationMode.None">
            <summary>
            Not repeated
            </summary>
        </member>
        <member name="F:Genome.Commands.CommandIterationMode.Cyclic">
            <summary>
            Cyclic command
            </summary>
        </member>
        <member name="T:Genome.Commands.CommandIterationCollisionResolveMode">
            <summary>
            Iteration collision mode. When command still performing but it time to next iteration
            </summary>
        </member>
        <member name="F:Genome.Commands.CommandIterationCollisionResolveMode.Skip">
            <summary>
            Skip next iteration if previous iteration syill performing
            </summary>
        </member>
        <member name="F:Genome.Commands.CommandIterationCollisionResolveMode.Waiting">
            <summary>
            Next iteration wait for previous iteration
            </summary>
        </member>
        <member name="T:Genome.Commands.DelegateCommand">
            <summary>
            Uses delegate for performance, reverse and validation
            </summary>
        </member>
        <member name="M:Genome.Commands.DelegateCommand.#ctor(System.Action,System.Func{Genome.ValidationResult},System.Action)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Commands.DelegateCommand"/>
            </summary>
        </member>
        <member name="T:Genome.Commands.CommandTypeId">
            <summary>
            <see cref="F:Genome.Commands.CommandTypeId.Description"/>
            </summary>
            <remarks>Namespace: '<see cref="F:Genome.Commands.CommandTypeId.IdNamespace"/>'</remarks>
        </member>
        <member name="F:Genome.Commands.CommandTypeId.IdNamespace">
            <summary>
            Input namespace restriction
            </summary>
        </member>
        <member name="F:Genome.Commands.CommandTypeId.Default">
            <summary>
            Default CommandTypeId
            </summary>
        </member>
        <member name="M:Genome.Commands.CommandTypeId.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Commands.CommandTypeId"/>
            </summary>
        </member>
        <member name="M:Genome.Commands.CommandTypeId.#ctor">
            <summary>
            Serialization constructor
            </summary>
        </member>
        <member name="M:Genome.Commands.CommandTypeId.op_Implicit(System.String)~Genome.Commands.CommandTypeId">
            <summary>
            Converts a <see cref="T:System.String"/> to <see cref="T:Genome.Commands.CommandTypeId"/>
            </summary>
        </member>
        <member name="M:Genome.Commands.CommandTypeId.Create(System.String)">
            <summary>
            Creates <see cref="T:Genome.Commands.CommandTypeId"/> based on name
            </summary>
        </member>
        <member name="M:Genome.Commands.CommandTypeId.Validate(System.String)">
            <summary>
            Validates identifier
            </summary>
        </member>
        <member name="T:Genome.Infrastructure.ComponentInitializer">
            <summary>
            Specifies a object than initializes a concrate component
            </summary>
        </member>
        <member name="M:Genome.Infrastructure.ComponentInitializer.PostInitialize">
            <summary>
            Calls when assembly post initialize
            </summary>
        </member>
        <member name="T:Genome.Commands.CommandType">
            <summary>
            Implementation type of commands
            </summary>
        </member>
        <member name="T:Genome.MetaTyping.MetaType">
            <summary>
            Meta instance type
            </summary>
        </member>
        <member name="M:Genome.MetaTyping.MetaType.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Genome.MetaTyping.MetaType"/>
            </summary>
        </member>
        <member name="M:Genome.MetaTyping.MetaType.CreateInstance``1(Genome.ObjectId,System.Object[])">
            <summary>
            Creates meta instance
            </summary>
        </member>
        <member name="P:Genome.MetaTyping.MetaType.Id">
            <summary>
            Meta type identifier
            </summary>
        </member>
        <member name="P:Genome.MetaTyping.MetaType.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:Genome.MetaTyping.MetaType.KindId">
            <summary>
            Type class identifier
            </summary>
        </member>
        <member name="P:Genome.MetaTyping.MetaType.InstanceType">
            <summary>
            Instance type
            </summary>
        </member>
        <member name="M:Genome.Commands.CommandType.Create(Genome.ObjectId,System.Object[])">
            <summary>
            Create command instance
            </summary>
        </member>
        <member name="M:Genome.Commands.CommandType.Create(System.Object[])">
            <summary>
            Create command instance
            </summary>
        </member>
        <member name="T:Genome.Commands.EventCommandBinder">
            <summary>
            Binds command to object events
            </summary>
        </member>
        <member name="M:Genome.Commands.EventCommandBinder.#ctor(Genome.Commands.Command,System.Object,System.String)">
            <summary>
            Initialize a new instance of <see cref="T:Genome.Commands.EventCommandBinder"/>
            </summary>
            <param name="command">command to perform</param>
            <param name="owner">event owner</param>
            <param name="eventName">event name</param>
            <exception cref="T:System.ArgumentNullException">Throw if one of pargument is null</exception>
        </member>
        <member name="P:Genome.Commands.EventCommandBinder.Command">
            <summary>
            Command to perform
            </summary>
        </member>
        <member name="P:Genome.Commands.EventCommandBinder.Owner">
            <summary>
            Event owner
            </summary>
        </member>
        <member name="P:Genome.Commands.EventCommandBinder.EventName">
            <summary>
            Event name
            </summary>
        </member>
        <member name="T:Genome.Commands.ICommandManager">
            <summary>
            Specified a command manager.
            </summary>
            <remarks>Command manager provides methods for working with commands</remarks>
        </member>
        <member name="M:Genome.Commands.ICommandManager.CreateCommand``1(Genome.Commands.CommandTypeId,System.Object[])">
            <summary>
            Create command uses specified parameters
            </summary>
            <param name="commandTypeId">command type identifier</param>
            <param name="parameters">parameters for command construction</param>
            <returns>crated command</returns>
        </member>
        <member name="M:Genome.Commands.ICommandManager.PerformCommand(Genome.Commands.CommandTypeId,System.Object[])">
            <summary>
            Perform the command 
            </summary>
        </member>
        <member name="T:Genome.Commands.ICommandPerformer">
            <summary>
            Defines a command performer
            </summary>
        </member>
        <member name="M:Genome.Commands.ICommandPerformer.PerformCommand(Genome.Commands.Command,Genome.Commands.CommandContext)">
            <summary>
            Defines a method which perform a command logic
            </summary>
            <param name="cmd">command for performing</param>
            <param name="ctx">command performing context</param>
        </member>
        <member name="M:Genome.Commands.ICommandPerformer.RevertCommand(Genome.Commands.Command,Genome.Commands.CommandContext)">
            <summary>
            Defines a method which perform a revert command logic
            </summary>
            <param name="cmd">command for reverting</param>
            <param name="ctx">command reverting context</param>
        </member>
        <member name="T:Ids.Commands.Manager">
            <summary>
            <see cref="F:Ids.Commands.Manager.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Commands.Manager.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Commands.Manager.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Commands.DefaultCommandPerformer">
            <summary>
            <see cref="F:Ids.Commands.DefaultCommandPerformer.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Commands.DefaultCommandPerformer.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Commands.DefaultCommandPerformer.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Commands.CurrentCommandPerformer">
            <summary>
            <see cref="F:Ids.Commands.CurrentCommandPerformer.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Commands.CurrentCommandPerformer.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Commands.CurrentCommandPerformer.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Commands.ContentCategories.CommandPerformers">
            <summary>
            <see cref="F:Ids.Commands.ContentCategories.CommandPerformers.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Commands.ContentCategories.CommandPerformers.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Commands.ContentCategories.CommandPerformers.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Commands.ContentCategories.CommandValidators">
            <summary>
            <see cref="F:Ids.Commands.ContentCategories.CommandValidators.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Commands.ContentCategories.CommandValidators.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Commands.ContentCategories.CommandValidators.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Commands.ContentCategories.CommandInitializers">
            <summary>
            <see cref="F:Ids.Commands.ContentCategories.CommandInitializers.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Commands.ContentCategories.CommandInitializers.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Commands.ContentCategories.CommandInitializers.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Commands.ImplKinds.Command">
            <summary>
            <see cref="F:Ids.Commands.ImplKinds.Command.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Commands.ImplKinds.Command.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Commands.ImplKinds.Command.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Genome.Configuration.ConfigHandlerId">
            <summary>
            <see cref="F:Genome.Configuration.ConfigHandlerId.Description"/>
            </summary>
            <remarks>Namespace: '<see cref="F:Genome.Configuration.ConfigHandlerId.IdNamespace"/>'</remarks>
        </member>
        <member name="F:Genome.Configuration.ConfigHandlerId.IdNamespace">
            <summary>
            Input namespace restriction
            </summary>
        </member>
        <member name="M:Genome.Configuration.ConfigHandlerId.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Configuration.ConfigHandlerId"/>
            </summary>
        </member>
        <member name="M:Genome.Configuration.ConfigHandlerId.#ctor">
            <summary>
            Serialization constructor
            </summary>
        </member>
        <member name="M:Genome.Configuration.ConfigHandlerId.op_Implicit(System.String)~Genome.Configuration.ConfigHandlerId">
            <summary>
            Converts a <see cref="T:System.String"/> to <see cref="T:Genome.Configuration.ConfigHandlerId"/>
            </summary>
        </member>
        <member name="M:Genome.Configuration.ConfigHandlerId.Create(System.String)">
            <summary>
            Creates <see cref="T:Genome.Configuration.ConfigHandlerId"/> based on name
            </summary>
        </member>
        <member name="M:Genome.Configuration.ConfigHandlerId.Validate(System.String)">
            <summary>
            Validates identifier
            </summary>
        </member>
        <member name="T:Genome.Configuration.ConfigProcessing.ConfigValueModifier">
            <summary>
            Provides value for injection into config
            </summary>
        </member>
        <member name="M:Genome.Configuration.ConfigProcessing.ConfigValueModifier.GetValue">
            <summary>
            Gets value for injecting into config
            </summary>
        </member>
        <member name="M:Genome.Configuration.ConfigProcessing.ConfigValueModifier.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Configuration.ConfigProcessing.ConfigValueModifier"/>
            </summary>
        </member>
        <member name="M:Genome.Configuration.ConfigProcessing.ConfigValueModifier.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Configuration.ConfigProcessing.ConfigValueModifier"/>
            </summary>
        </member>
        <member name="P:Genome.Configuration.ConfigProcessing.ConfigValueModifier.Name">
            <summary>
            Name which uses in config
            </summary>
        </member>
        <member name="T:Genome.Configuration.ConfigProcessing.ConfigValueModifierAttribute">
            <summary>
            Defines a config value modifier
            </summary>
        </member>
        <member name="T:Genome.Meta.Attributes.RegisterInstanceAttribute">
            <summary>
            Specifies registration parameters for instance registration
            </summary>
        </member>
        <member name="M:Genome.Meta.Attributes.RegisterInstanceAttribute.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="categoryId">content category identifier</param>
            <param name="id">instance registration identifier</param>
        </member>
        <member name="M:Genome.Meta.Attributes.RegisterInstanceAttribute.#ctor(Genome.ObjectId,Genome.Registry.CategoryId)">
            <summary>
            Constructor
            </summary>
            <param name="categoryId">content category identifier</param>
            <param name="id">instance registration identifier</param>
        </member>
        <member name="P:Genome.Meta.Attributes.RegisterInstanceAttribute.CategoryId">
            <summary>
            Content category identifier
            </summary>
        </member>
        <member name="P:Genome.Meta.Attributes.RegisterInstanceAttribute.Id">
            <summary>
            Instance registration identifier
            </summary>
        </member>
        <member name="M:Genome.Configuration.ConfigProcessing.ConfigValueModifierAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Configuration.ConfigProcessing.ConfigValueModifierAttribute"/>
            </summary>
        </member>
        <member name="T:Genome.CoreRegistry.Category">
            <summary>
            CCore registry category
            </summary>
        </member>
        <member name="T:Genome.Registry.Category`1">
            <summary>
            Represent a registry category. Provides ways to controlling the registry cells.
            </summary>
        </member>
        <member name="M:Genome.Registry.Category`1.#ctor(Genome.Registry.CategoryId)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Registry.Category`1"/>
            </summary>
            <param name="id">category identifier</param>
        </member>
        <member name="M:Genome.Registry.Category`1.Cell(Genome.ObjectId)">
            <summary>
            Gets contained or created cell
            </summary>
            <param name="id">cell identifier</param>
        </member>
        <member name="M:Genome.Registry.Category`1.Set(Genome.ObjectId,`0)">
            <summary>
            Sets cell value
            </summary>
            <param name="id">cell identifier</param>
            <param name="value">new cell value</param>
        </member>
        <member name="M:Genome.Registry.Category`1.Clear">
            <summary>
            Removes all cells from category
            </summary>
        </member>
        <member name="M:Genome.Registry.Category`1.Remove(Genome.ObjectId)">
            <summary>
            Removes value from identifier
            </summary>
        </member>
        <member name="P:Genome.Registry.Category`1.Id">
            <summary>
            Category identifier
            </summary>
        </member>
        <member name="P:Genome.Registry.Category`1.Items">
            <summary>
            Category Items
            </summary>
        </member>
        <member name="P:Genome.Registry.Category`1.Cells">
            <summary>
            Category cells
            </summary>
        </member>
        <member name="E:Genome.Registry.Category`1.RegEventFired">
            <summary>
            Occures when register event fired in one of cells
            </summary>
        </member>
        <member name="M:Genome.CoreRegistry.Category.#ctor(Genome.Registry.CategoryId)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.CoreRegistry.Category"/>
            </summary>
        </member>
        <member name="T:Genome.Factoring.FactoryCategoryId">
            <summary>
            <see cref="F:Genome.Factoring.FactoryCategoryId.Description"/>
            </summary>
            <remarks>Namespace: '<see cref="F:Genome.Factoring.FactoryCategoryId.IdNamespace"/>'</remarks>
        </member>
        <member name="T:Genome.Registry.CategoryId">
            <summary>
            <see cref="F:Genome.Registry.CategoryId.Description"/>
            </summary>
            <remarks>Namespace: '<see cref="F:Genome.Registry.CategoryId.IdNamespace"/>'</remarks>
        </member>
        <member name="F:Genome.Registry.CategoryId.InheritorNamespaceStart">
            <summary>
            First namespace part for inheritors
            </summary>
        </member>
        <member name="F:Genome.Registry.CategoryId.IdNamespace">
            <summary>
            Input namespace restriction
            </summary>
        </member>
        <member name="M:Genome.Registry.CategoryId.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Registry.CategoryId"/>
            </summary>
        </member>
        <member name="M:Genome.Registry.CategoryId.#ctor">
            <summary>
            Serialization constructor
            </summary>
        </member>
        <member name="M:Genome.Registry.CategoryId.op_Implicit(System.String)~Genome.Registry.CategoryId">
            <summary>
            Converts a <see cref="T:System.String"/> to <see cref="T:Genome.Registry.CategoryId"/>
            </summary>
        </member>
        <member name="M:Genome.Registry.CategoryId.Create(System.String)">
            <summary>
            Creates <see cref="T:Genome.Registry.CategoryId"/> based on name
            </summary>
        </member>
        <member name="M:Genome.Registry.CategoryId.Validate(System.String)">
            <summary>
            Validates identifier
            </summary>
        </member>
        <member name="F:Genome.Factoring.FactoryCategoryId.IdNamespace">
            <summary>
            Input namespace restriction
            </summary>
        </member>
        <member name="M:Genome.Factoring.FactoryCategoryId.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Factoring.FactoryCategoryId"/>
            </summary>
        </member>
        <member name="M:Genome.Factoring.FactoryCategoryId.#ctor">
            <summary>
            Serialization constructor
            </summary>
        </member>
        <member name="M:Genome.Factoring.FactoryCategoryId.op_Implicit(System.String)~Genome.Factoring.FactoryCategoryId">
            <summary>
            Converts a <see cref="T:System.String"/> to <see cref="T:Genome.Factoring.FactoryCategoryId"/>
            </summary>
        </member>
        <member name="M:Genome.Factoring.FactoryCategoryId.Create(System.String)">
            <summary>
            Creates <see cref="T:Genome.Factoring.FactoryCategoryId"/> based on name
            </summary>
        </member>
        <member name="M:Genome.Factoring.FactoryCategoryId.Validate(System.String)">
            <summary>
            Validates identifier
            </summary>
        </member>
        <member name="T:Genome.Factoring.IFactoryConveyorReleaser">
            <summary>
            Factory conveyor object releaser
            </summary>
        </member>
        <member name="T:Genome.Factoring.IFactoryConveyorItem">
            <summary>
            Represent factory conveyor item
            </summary>
        </member>
        <member name="M:Genome.Factoring.IFactoryConveyorReleaser.Release(System.Object)">
            <summary>
            Releases an object
            </summary>
        </member>
        <member name="T:Genome.Factoring.IFactoryConveyorInitializer">
            <summary>
            Dactory conveyor object initializer
            </summary>
        </member>
        <member name="M:Genome.Factoring.IFactoryConveyorInitializer.Initialize(System.Object)">
            <summary>
            Initializes an object
            </summary>
        </member>
        <member name="T:Genome.Logging.LogWriterAttribute">
            <summary>
            Specifies a log writer type
            </summary>
        </member>
        <member name="M:Genome.Logging.LogWriterAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Logging.LogWriterAttribute"/>
            </summary>
        </member>
        <member name="M:Genome.Logging.LogWriterAttribute.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Logging.LogWriterAttribute"/>
            </summary>
        </member>
        <member name="P:Genome.Logging.LogWriterAttribute.ConnectionStringRegex">
            <summary>
            Regex for storate connection string checking
            </summary>
        </member>
        <member name="P:Genome.Logging.LogWriterAttribute.IsSynchronous">
            <summary>
            Flag of synchronicity
            </summary>
        </member>
        <member name="P:Genome.Logging.LogWriterAttribute.IsConnectionStringRequired">
            <summary>
            Flag of requiring the storage connection string
            </summary>
        </member>
        <member name="T:Genome.Logging.ErrCodeId">
            <summary>
            <see cref="F:Genome.Logging.ErrCodeId.Description"/>
            </summary>
            <remarks>Namespace: '<see cref="F:Genome.Logging.ErrCodeId.IdNamespace"/>'</remarks>
        </member>
        <member name="F:Genome.Logging.ErrCodeId.IdNamespace">
            <summary>
            Input namespace restriction
            </summary>
        </member>
        <member name="F:Genome.Logging.ErrCodeId.Default">
            <summary>
            Default ErrCodeId
            </summary>
        </member>
        <member name="M:Genome.Logging.ErrCodeId.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Logging.ErrCodeId"/>
            </summary>
        </member>
        <member name="M:Genome.Logging.ErrCodeId.#ctor">
            <summary>
            Serialization constructor
            </summary>
        </member>
        <member name="M:Genome.Logging.ErrCodeId.op_Implicit(System.String)~Genome.Logging.ErrCodeId">
            <summary>
            Converts a <see cref="T:System.String"/> to <see cref="T:Genome.Logging.ErrCodeId"/>
            </summary>
        </member>
        <member name="M:Genome.Logging.ErrCodeId.Create(System.String)">
            <summary>
            Creates <see cref="T:Genome.Logging.ErrCodeId"/> based on name
            </summary>
        </member>
        <member name="M:Genome.Logging.ErrCodeId.Validate(System.String)">
            <summary>
            Validates identifier
            </summary>
        </member>
        <member name="T:Genome.Logging.LogMessageBase">
            <summary>
            The base for log messages
            </summary>
        </member>
        <member name="P:Genome.Logging.LogMessageBase.Id">
            <summary>
            Messge identifier
            </summary>
        </member>
        <member name="P:Genome.Logging.LogMessageBase.Content">
            <summary>
            Message content
            </summary>
        </member>
        <member name="P:Genome.Logging.LogMessageBase.Level">
            <summary>
            Log message level
            </summary>
        </member>
        <member name="P:Genome.Logging.LogMessageBase.Sender">
            <summary>
            Sender identifier
            </summary>
        </member>
        <member name="P:Genome.Logging.LogMessageBase.Time">
            <summary>
            Occurred time
            </summary>
        </member>
        <member name="P:Genome.Logging.LogMessageBase.SubMessages">
            <summary>
            Collection of sub messages
            </summary>
        </member>
        <member name="P:Genome.Logging.LogMessageBase.Additional">
            <summary>
            Contains additional information about log message
            </summary>
        </member>
        <member name="T:Genome.Logging.LogAspectHandler">
            <summary>
            Handles a log aaspect
            </summary>
        </member>
        <member name="T:Genome.Meta.Aspect.AspectHandler">
            <summary>
            Represent aspect handler
            </summary>
        </member>
        <member name="M:Genome.Meta.Aspect.AspectHandler.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Meta.Aspect.AspectHandler"/>
            </summary>
        </member>
        <member name="M:Genome.Meta.Aspect.AspectHandler.Enter(Genome.Meta.Aspect.EnterAspectInvocation)">
            <summary>
            Handels whent enter to method
            </summary>
            <param name="invocation">handling context</param>
            <returns>method parameters overriding</returns>
        </member>
        <member name="M:Genome.Meta.Aspect.AspectHandler.Exit(Genome.Meta.Aspect.ExitAspectInvocation)">
            <summary>
            Exit out of method
            </summary>
            <param name="invocation">handling context</param>
            <returns>method result overriding</returns>
        </member>
        <member name="M:Genome.Meta.Aspect.AspectHandler.Err(Genome.Meta.Aspect.ErrorAspectInvocation)">
            <summary>
            Method error
            </summary>
            <param name="invocation">handling context</param>
            <returns>exception overriding</returns>
        </member>
        <member name="M:Genome.Meta.Aspect.AspectHandler.PreviewEnter(Genome.Meta.Aspect.EnterAspectInvocation)">
            <summary>
            Handels whent enter to method preview
            </summary>
            <param name="invocation">handling context</param>
            <returns>method parameters overriding</returns>
        </member>
        <member name="M:Genome.Meta.Aspect.AspectHandler.PreviewExit(Genome.Meta.Aspect.ExitAspectInvocation)">
            <summary>
            Exit out of method preview
            </summary>
            <param name="invocation">handling context</param>
            <returns>method result overriding</returns>
        </member>
        <member name="M:Genome.Meta.Aspect.AspectHandler.PreviewErr(Genome.Meta.Aspect.ErrorAspectInvocation)">
            <summary>
            Method error preview
            </summary>
            <param name="invocation">handling context</param>
            <returns>exception overriding</returns>
        </member>
        <member name="M:Genome.Meta.Aspect.AspectHandler.PostEnter(Genome.Meta.Aspect.EnterAspectInvocation)">
            <summary>
            Handels after enter to method
            </summary>
            <param name="invocation">handling context</param>
            <returns>method parameters overriding</returns>
        </member>
        <member name="M:Genome.Meta.Aspect.AspectHandler.PostExit(Genome.Meta.Aspect.ExitAspectInvocation)">
            <summary>
            Post exit out of method
            </summary>
            <param name="invocation">handling context</param>
            <returns>method result overriding</returns>
        </member>
        <member name="M:Genome.Meta.Aspect.AspectHandler.PostErr(Genome.Meta.Aspect.ErrorAspectInvocation)">
            <summary>
            Post method error
            </summary>
            <param name="invocation">handling context</param>
            <returns>exception overriding</returns>
        </member>
        <member name="M:Genome.Logging.LogAspectHandler.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Logging.LogAspectHandler"/>
            </summary>
            <param name="errorOnly">log errors only</param>
        </member>
        <member name="M:Genome.Logging.LogAspectHandler.Exit(Genome.Meta.Aspect.ExitAspectInvocation)">
            <summary>
            Succesful exit(without exceptions)
            </summary>
        </member>
        <member name="T:Genome.Logging.LogAttribute">
            <summary>
            Determines that method invocation will be logged
            </summary>
        </member>
        <member name="M:Genome.Logging.LogAttribute.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Logging.LogAttribute"/>
            </summary>
        </member>
        <member name="T:Genome.Logging.LogErrorsAttribute">
            <summary>
            Defines that method exception will be logged
            </summary>
        </member>
        <member name="M:Genome.Logging.LogErrorsAttribute.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Logging.LogErrorsAttribute"/>
            </summary>
        </member>
        <member name="T:Ids.Logging.Strings.MethodLog.InputParameters">
            <summary>
            <see cref="F:Ids.Logging.Strings.MethodLog.InputParameters.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Logging.Strings.MethodLog.InputParameters.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Logging.Strings.MethodLog.InputParameters.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Logging.Strings.MethodLog.EnterMethodPattern">
            <summary>
            <see cref="F:Ids.Logging.Strings.MethodLog.EnterMethodPattern.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Logging.Strings.MethodLog.EnterMethodPattern.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Logging.Strings.MethodLog.EnterMethodPattern.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Logging.Strings.MethodLog.MethodResult">
            <summary>
            <see cref="F:Ids.Logging.Strings.MethodLog.MethodResult.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Logging.Strings.MethodLog.MethodResult.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Logging.Strings.MethodLog.MethodResult.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Logging.Strings.MethodLog.ExitMethodPattern">
            <summary>
            <see cref="F:Ids.Logging.Strings.MethodLog.ExitMethodPattern.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Logging.Strings.MethodLog.ExitMethodPattern.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Logging.Strings.MethodLog.ExitMethodPattern.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Logging.Strings.MethodLog.MethodExceptionPattern">
            <summary>
            <see cref="F:Ids.Logging.Strings.MethodLog.MethodExceptionPattern.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Logging.Strings.MethodLog.MethodExceptionPattern.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Logging.Strings.MethodLog.MethodExceptionPattern.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Genome.Logging.DescriptionAttribute">
            <summary>
            Determines string description for marked method
            </summary>
        </member>
        <member name="M:Genome.Logging.DescriptionAttribute.#ctor(System.String)">
            <summary>
            Initializes a new isntance of <see cref="T:Genome.Logging.DescriptionAttribute"/>
            </summary>
            <param name="description">string description or translation identifier of description</param>
        </member>
        <member name="T:Genome.Logging.IgnoreLogAttribute">
            <summary>
            Pints to object properties and method parameters that will be ignored by logging
            </summary>
        </member>
        <member name="T:Genome.ObjectToStringSerializer.IgnoreAttribute">
            <summary>
            Pints to properties that will be ignored by <see cref="T:Genome.ObjectToStringSerializer"/>
            </summary>
        </member>
        <member name="T:Genome.ObjectToStringSerializer">
            <summary>
            Serializes an object to string for 
            </summary>
        </member>
        <member name="M:Genome.ObjectToStringSerializer.#ctor(System.Object)">
            <summary>
            Initializes a new instance <see cref="T:Genome.ObjectToStringSerializer"/>
            </summary>
            <param name="target"></param>
        </member>
        <member name="M:Genome.ObjectToStringSerializer.Serialize">
            <summary>
            Serializes an object to string
            </summary>
            <returns></returns>
        </member>
        <member name="P:Genome.ObjectToStringSerializer.MaxDeep">
            <summary>
            Maximum object graph deep 
            </summary>
        </member>
        <member name="P:Genome.ObjectToStringSerializer.MaxStringLenght">
            <summary>
            Max serializable string lenght
            </summary>
        </member>
        <member name="P:Genome.ObjectToStringSerializer.MaxCollectionElementNumber">
            <summary>
            Maximum serialized elements in collections
            </summary>
        </member>
        <member name="T:Genome.ObjectToStringSerializer.IgnoreAttribute">
            <summary>
            Pints to properties that will be ignored by <see cref="T:Genome.ObjectToStringSerializer"/>
            </summary>
        </member>
        <member name="T:Ids.Logging.Strings.StackTrace">
            <summary>
            <see cref="F:Ids.Logging.Strings.StackTrace.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Logging.Strings.StackTrace.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Logging.Strings.StackTrace.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Logging.Strings.BecauseOfExceptionPattern">
            <summary>
            <see cref="F:Ids.Logging.Strings.BecauseOfExceptionPattern.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Logging.Strings.BecauseOfExceptionPattern.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Logging.Strings.BecauseOfExceptionPattern.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Logging.Strings.UnknownLogLevel">
            <summary>
            <see cref="F:Ids.Logging.Strings.UnknownLogLevel.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Logging.Strings.UnknownLogLevel.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Logging.Strings.UnknownLogLevel.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Logging.Strings.Submessages">
            <summary>
            <see cref="F:Ids.Logging.Strings.Submessages.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Logging.Strings.Submessages.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Logging.Strings.Submessages.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Logging.Strings.MessageKeys.MsgId">
            <summary>
            <see cref="F:Ids.Logging.Strings.MessageKeys.MsgId.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Logging.Strings.MessageKeys.MsgId.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Logging.Strings.MessageKeys.MsgId.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Logging.Strings.MessageKeys.Sender">
            <summary>
            <see cref="F:Ids.Logging.Strings.MessageKeys.Sender.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Logging.Strings.MessageKeys.Sender.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Logging.Strings.MessageKeys.Sender.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Logging.Strings.MessageKeys.Context">
            <summary>
            <see cref="F:Ids.Logging.Strings.MessageKeys.Context.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Logging.Strings.MessageKeys.Context.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Logging.Strings.MessageKeys.Context.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Logging.Strings.MessageKeys.Thread">
            <summary>
            <see cref="F:Ids.Logging.Strings.MessageKeys.Thread.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Logging.Strings.MessageKeys.Thread.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Logging.Strings.MessageKeys.Thread.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Logging.Strings.MessageKeys.When">
            <summary>
            <see cref="F:Ids.Logging.Strings.MessageKeys.When.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Logging.Strings.MessageKeys.When.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Logging.Strings.MessageKeys.When.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Logging.Strings.MessageKeys.Facts">
            <summary>
            <see cref="F:Ids.Logging.Strings.MessageKeys.Facts.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Logging.Strings.MessageKeys.Facts.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Logging.Strings.MessageKeys.Facts.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Logging.Strings.MessageKeys.Reasons">
            <summary>
            <see cref="F:Ids.Logging.Strings.MessageKeys.Reasons.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Logging.Strings.MessageKeys.Reasons.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Logging.Strings.MessageKeys.Reasons.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Genome.Logging.LogWriterId">
            <summary>
            <see cref="F:Genome.Logging.LogWriterId.Description"/>
            </summary>
            <remarks>Namespace: '<see cref="F:Genome.Logging.LogWriterId.IdNamespace"/>'</remarks>
        </member>
        <member name="F:Genome.Logging.LogWriterId.IdNamespace">
            <summary>
            Input namespace restriction
            </summary>
        </member>
        <member name="F:Genome.Logging.LogWriterId.Default">
            <summary>
            Default LogWriterId
            </summary>
        </member>
        <member name="M:Genome.Logging.LogWriterId.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Logging.LogWriterId"/>
            </summary>
        </member>
        <member name="M:Genome.Logging.LogWriterId.#ctor">
            <summary>
            Serialization constructor
            </summary>
        </member>
        <member name="M:Genome.Logging.LogWriterId.op_Implicit(System.String)~Genome.Logging.LogWriterId">
            <summary>
            Converts a <see cref="T:System.String"/> to <see cref="T:Genome.Logging.LogWriterId"/>
            </summary>
        </member>
        <member name="M:Genome.Logging.LogWriterId.Create(System.String)">
            <summary>
            Creates <see cref="T:Genome.Logging.LogWriterId"/> based on name
            </summary>
        </member>
        <member name="M:Genome.Logging.LogWriterId.Validate(System.String)">
            <summary>
            Validates identifier
            </summary>
        </member>
        <member name="T:Genome.Logging.Writers.ConsoleLogWriter">
            <summary>
            Log writer that writes a messages through <see cref="T:System.Console"/>
            </summary>
        </member>
        <member name="T:Genome.Logging.Writers.TextWriteLogWriter">
            <summary>
            Base text write log writer
            </summary>
        </member>
        <member name="T:Genome.Logging.Writers.LogWriter">
            <summary>
            The base implementation for Log writer
            </summary>
        </member>
        <member name="M:Genome.Logging.Writers.LogWriter.WriteHistory(System.Collections.Generic.IEnumerable{Genome.Logging.LogMessageBase})">
            <summary>
            Writes message history in to controller
            </summary>
            <param name="history">log message history</param>
            <remarks>uses to let to log controller know what messages where before it registered</remarks>
        </member>
        <member name="M:Genome.Logging.Writers.LogWriter.WriteMessage(Genome.Logging.LogMessageBase)">
            <summary>
            Writes a new  log message
            </summary>
            <param name="message">new log message</param>
        </member>
        <member name="M:Genome.Logging.Writers.LogWriter.Flush">
            <summary>
            Course all buffered messages to target storage
            </summary>
        </member>
        <member name="P:Genome.Logging.Writers.LogWriter.ConnectionString">
            <summary>
            Gets connection string or NULL if not required
            </summary>
        </member>
        <member name="F:Genome.Logging.Writers.FileStorageRegexHolder.Regex">
            <summary>
            Supported formats:
            C:\blalbla\bla.bla
            ..\blabla\bla.bla
            .\blabla\bla.bla
            ..\bla.bla
            .\bla.bla
            bla.bla
            </summary>
        </member>
        <member name="T:Genome.MetaTyping.MetaTypeContentCategoryAttribute">
            <summary>
            Defines content category for meta type
            </summary>
        </member>
        <member name="T:Genome.Meta.Attributes.ContentCategoryAttribute">
            <summary>
            Defines identifier of category where marked type instances are contains
            </summary>
        </member>
        <member name="M:Genome.Meta.Attributes.ContentCategoryAttribute.#ctor(System.String)">
            <summary>
            Initialize a new instance of ContentCategoryAttribute
            </summary>
            <param name="catid">specified content category identifier</param>
        </member>
        <member name="M:Genome.Meta.Attributes.ContentCategoryAttribute.#ctor(Genome.Registry.CategoryId)">
            <summary>
            Initialize a new instance of ContentCategoryAttribute
            </summary>
            <param name="catid">specified content category identifier</param>
        </member>
        <member name="P:Genome.Meta.Attributes.ContentCategoryAttribute.ContentCategoryId">
            <summary>
            Content category identifier
            </summary>
        </member>
        <member name="M:Genome.MetaTyping.MetaTypeContentCategoryAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.MetaTyping.MetaTypeContentCategoryAttribute"/>
            </summary>
        </member>
        <member name="T:Genome.MetaTyping.MetaTypeKindId">
            <summary>
            <see cref="F:Genome.MetaTyping.MetaTypeKindId.Description"/>
            </summary>
            <remarks>Namespace: '<see cref="F:Genome.MetaTyping.MetaTypeKindId.IdNamespace"/>'</remarks>
        </member>
        <member name="F:Genome.MetaTyping.MetaTypeKindId.IdNamespace">
            <summary>
            Input namespace restriction
            </summary>
        </member>
        <member name="F:Genome.MetaTyping.MetaTypeKindId.Default">
            <summary>
            Default MetaTypeClassId
            </summary>
        </member>
        <member name="M:Genome.MetaTyping.MetaTypeKindId.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.MetaTyping.MetaTypeKindId"/>
            </summary>
        </member>
        <member name="M:Genome.MetaTyping.MetaTypeKindId.#ctor">
            <summary>
            Serialization constructor
            </summary>
        </member>
        <member name="M:Genome.MetaTyping.MetaTypeKindId.ToCategoryId">
            <summary>
            Converts <see cref="T:Genome.MetaTyping.MetaTypeId"/> to <see cref="T:Genome.Registry.CategoryId"/>
            </summary>
        </member>
        <member name="M:Genome.MetaTyping.MetaTypeKindId.op_Implicit(System.String)~Genome.MetaTyping.MetaTypeKindId">
            <summary>
            Converts a <see cref="T:System.String"/> to <see cref="T:Genome.MetaTyping.MetaTypeKindId"/>
            </summary>
        </member>
        <member name="M:Genome.MetaTyping.MetaTypeKindId.Create(System.String)">
            <summary>
            Creates <see cref="T:Genome.MetaTyping.MetaTypeKindId"/> based on name
            </summary>
        </member>
        <member name="M:Genome.MetaTyping.MetaTypeKindId.Validate(System.String)">
            <summary>
            Validates identifier
            </summary>
        </member>
        <member name="T:Genome.MetaTyping.MetaTypeId">
            <summary>
            <see cref="F:Genome.MetaTyping.MetaTypeId.Description"/>
            </summary>
            <remarks>Namespace: '[any]'</remarks>
        </member>
        <member name="F:Genome.MetaTyping.MetaTypeId.Default">
            <summary>
            Default MetaTypeId
            </summary>
        </member>
        <member name="M:Genome.MetaTyping.MetaTypeId.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.MetaTyping.MetaTypeId"/>
            </summary>
        </member>
        <member name="M:Genome.MetaTyping.MetaTypeId.#ctor">
            <summary>
            Serialization constructor
            </summary>
        </member>
        <member name="M:Genome.MetaTyping.MetaTypeId.op_Implicit(System.String)~Genome.MetaTyping.MetaTypeId">
            <summary>
            Converts a <see cref="T:System.String"/> to <see cref="T:Genome.MetaTyping.MetaTypeId"/>
            </summary>
        </member>
        <member name="M:Genome.MetaTyping.MetaTypeId.Create(System.String)">
            <summary>
            Creates <see cref="T:Genome.MetaTyping.MetaTypeId"/> based on name
            </summary>
        </member>
        <member name="T:Genome.Meta.Aspect.AspectHandlerFactory">
            <summary>
            Creates an aspect handler
            </summary>
        </member>
        <member name="T:Genome.IInstanceFactory`1">
            <summary>
            Generic instance factory interface
            </summary>
        </member>
        <member name="T:Genome.IInstanceFactory">
            <summary>
            Generic instance factory interface
            </summary>
        </member>
        <member name="M:Genome.IInstanceFactory.Create">
            <summary>
            Create object
            </summary>
            <returns>result object</returns>
        </member>
        <member name="M:Genome.IInstanceFactory`1.Create">
            <summary>
            Create object
            </summary>
            <typeparam name="T">type to reduce</typeparam>
            <returns>result object</returns>
        </member>
        <member name="M:Genome.Meta.Aspect.AspectHandlerFactory.#ctor(Genome.IInstanceFactory{Genome.Meta.Aspect.AspectHandler})">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Meta.Aspect.AspectHandlerFactory"/>
            </summary>
        </member>
        <member name="T:Genome.Meta.AssemblyHandlerId">
            <summary>
            <see cref="F:Genome.Meta.AssemblyHandlerId.Description"/>
            </summary>
            <remarks>Namespace: '<see cref="F:Genome.Meta.AssemblyHandlerId.IdNamespace"/>'</remarks>
        </member>
        <member name="F:Genome.Meta.AssemblyHandlerId.IdNamespace">
            <summary>
            Input namespace restriction
            </summary>
        </member>
        <member name="M:Genome.Meta.AssemblyHandlerId.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Meta.AssemblyHandlerId"/>
            </summary>
        </member>
        <member name="M:Genome.Meta.AssemblyHandlerId.#ctor">
            <summary>
            Serialization constructor
            </summary>
        </member>
        <member name="M:Genome.Meta.AssemblyHandlerId.op_Implicit(System.String)~Genome.Meta.AssemblyHandlerId">
            <summary>
            Converts a <see cref="T:System.String"/> to <see cref="T:Genome.Meta.AssemblyHandlerId"/>
            </summary>
        </member>
        <member name="M:Genome.Meta.AssemblyHandlerId.Create(System.String)">
            <summary>
            Creates <see cref="T:Genome.Meta.AssemblyHandlerId"/> based on name
            </summary>
        </member>
        <member name="M:Genome.Meta.AssemblyHandlerId.Validate(System.String)">
            <summary>
            Validates identifier
            </summary>
        </member>
        <member name="T:Genome.Meta.AttributeHandlerId">
            <summary>
            <see cref="F:Genome.Meta.AttributeHandlerId.Description"/>
            </summary>
            <remarks>Namespace: '<see cref="F:Genome.Meta.AttributeHandlerId.IdNamespace"/>'</remarks>
        </member>
        <member name="F:Genome.Meta.AttributeHandlerId.IdNamespace">
            <summary>
            Input namespace restriction
            </summary>
        </member>
        <member name="M:Genome.Meta.AttributeHandlerId.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Meta.AttributeHandlerId"/>
            </summary>
        </member>
        <member name="M:Genome.Meta.AttributeHandlerId.#ctor">
            <summary>
            Serialization constructor
            </summary>
        </member>
        <member name="M:Genome.Meta.AttributeHandlerId.op_Implicit(System.String)~Genome.Meta.AttributeHandlerId">
            <summary>
            Converts a <see cref="T:System.String"/> to <see cref="T:Genome.Meta.AttributeHandlerId"/>
            </summary>
        </member>
        <member name="M:Genome.Meta.AttributeHandlerId.Create(System.String)">
            <summary>
            Creates <see cref="T:Genome.Meta.AttributeHandlerId"/> based on name
            </summary>
        </member>
        <member name="M:Genome.Meta.AttributeHandlerId.Validate(System.String)">
            <summary>
            Validates identifier
            </summary>
        </member>
        <member name="T:Genome.Meta.TypeHandlerId">
            <summary>
            <see cref="F:Genome.Meta.TypeHandlerId.Description"/>
            </summary>
            <remarks>Namespace: '<see cref="F:Genome.Meta.TypeHandlerId.IdNamespace"/>'</remarks>
        </member>
        <member name="F:Genome.Meta.TypeHandlerId.IdNamespace">
            <summary>
            Input namespace restriction
            </summary>
        </member>
        <member name="M:Genome.Meta.TypeHandlerId.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Meta.TypeHandlerId"/>
            </summary>
        </member>
        <member name="M:Genome.Meta.TypeHandlerId.#ctor">
            <summary>
            Serialization constructor
            </summary>
        </member>
        <member name="M:Genome.Meta.TypeHandlerId.op_Implicit(System.String)~Genome.Meta.TypeHandlerId">
            <summary>
            Converts a <see cref="T:System.String"/> to <see cref="T:Genome.Meta.TypeHandlerId"/>
            </summary>
        </member>
        <member name="M:Genome.Meta.TypeHandlerId.Create(System.String)">
            <summary>
            Creates <see cref="T:Genome.Meta.TypeHandlerId"/> based on name
            </summary>
        </member>
        <member name="M:Genome.Meta.TypeHandlerId.Validate(System.String)">
            <summary>
            Validates identifier
            </summary>
        </member>
        <member name="T:Genome.Conversion.ConverterId">
            <summary>
            <see cref="F:Genome.Conversion.ConverterId.Description"/>
            </summary>
            <remarks>Namespace: '<see cref="F:Genome.Conversion.ConverterId.IdNamespace"/>'</remarks>
        </member>
        <member name="F:Genome.Conversion.ConverterId.IdNamespace">
            <summary>
            Input namespace restriction
            </summary>
        </member>
        <member name="M:Genome.Conversion.ConverterId.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Conversion.ConverterId"/>
            </summary>
        </member>
        <member name="M:Genome.Conversion.ConverterId.#ctor">
            <summary>
            Serialization constructor
            </summary>
        </member>
        <member name="M:Genome.Conversion.ConverterId.op_Implicit(System.String)~Genome.Conversion.ConverterId">
            <summary>
            Converts a <see cref="T:System.String"/> to <see cref="T:Genome.Conversion.ConverterId"/>
            </summary>
        </member>
        <member name="M:Genome.Conversion.ConverterId.Create(System.String)">
            <summary>
            Creates <see cref="T:Genome.Conversion.ConverterId"/> based on name
            </summary>
        </member>
        <member name="M:Genome.Conversion.ConverterId.Validate(System.String)">
            <summary>
            Validates identifier
            </summary>
        </member>
        <member name="T:Genome.Meta.TestUtils">
            <summary>
            Provides test utils for Meta block
            </summary>
        </member>
        <member name="M:Genome.Meta.TestUtils.CheckAssemblyForMetaAttributeUsages(System.Reflection.Assembly)">
            <summary>
            Checks an assembly for right meta-attribute usages
            </summary>
        </member>
        <member name="T:Genome.Repo.SetDefaultRepositoryAttribute">
            <summary>
            Sets default repository for domain object
            </summary>
        </member>
        <member name="M:Genome.Repo.SetDefaultRepositoryAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Repo.SetDefaultRepositoryAttribute"/>
            </summary>
        </member>
        <member name="T:Genome.Configuration.ConfigHandler`1">
            <summary>
            Default base configuration handler. Includes some help methods.
            </summary>
            <typeparamref name="T">programming model of configuration data</typeparamref>
        </member>
        <member name="T:Genome.Configuration.IConfigHandler">
            <summary>
            Specifies a handler of configuration data. Uses for handle the configuration elements that marked by special tag.
            </summary>
        </member>
        <member name="M:Genome.Configuration.IConfigHandler.Handle(System.Xml.Linq.XElement,Genome.Configuration.ConfigProcessing.ConfigLoadingContext)">
            <summary>
            Handles a configuration element
            </summary>
            <param name="configElement">configuration element</param>
            <param name="loadingContext">config loading context</param>
        </member>
        <member name="T:Genome.Repo.SetupRepoConfigData">
            <summary>
            Contains repository settings from config
            </summary>
        </member>
        <member name="P:Genome.Repo.SetupRepoConfigData.RepoId">
            <summary>
            Repository identifier. Uses repository type id if empty
            </summary>
        </member>
        <member name="P:Genome.Repo.SetupRepoConfigData.ConnectionString">
            <summary>
            Connection string
            </summary>
        </member>
        <member name="T:Genome.Repo.ConnectionStringId">
            <summary>
            <see cref="F:Genome.Repo.ConnectionStringId.Description"/>
            </summary>
            <remarks>Namespace: '<see cref="F:Genome.Repo.ConnectionStringId.IdNamespace"/>'</remarks>
        </member>
        <member name="F:Genome.Repo.ConnectionStringId.IdNamespace">
            <summary>
            Input namespace restriction
            </summary>
        </member>
        <member name="F:Genome.Repo.ConnectionStringId.Default">
            <summary>
            Default ConnectionStringId
            </summary>
        </member>
        <member name="M:Genome.Repo.ConnectionStringId.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Repo.ConnectionStringId"/>
            </summary>
        </member>
        <member name="M:Genome.Repo.ConnectionStringId.#ctor">
            <summary>
            Serialization constructor
            </summary>
        </member>
        <member name="M:Genome.Repo.ConnectionStringId.op_Implicit(System.String)~Genome.Repo.ConnectionStringId">
            <summary>
            Converts a <see cref="T:System.String"/> to <see cref="T:Genome.Repo.ConnectionStringId"/>
            </summary>
        </member>
        <member name="M:Genome.Repo.ConnectionStringId.Create(System.String)">
            <summary>
            Creates <see cref="T:Genome.Repo.ConnectionStringId"/> based on name
            </summary>
        </member>
        <member name="M:Genome.Repo.ConnectionStringId.Validate(System.String)">
            <summary>
            Validates identifier
            </summary>
        </member>
        <member name="T:Genome.Repo.Repository">
            <summary>
            Provides short methods for repository providing
            </summary>
        </member>
        <member name="M:Genome.Repo.Repository.ForRead``1(Genome.Repo.RepositoryId)">
            <summary>
            Gets repository for read
            </summary>
        </member>
        <member name="M:Genome.Repo.Repository.ForWrite``1(Genome.Repo.RepositoryId)">
            <summary>
            Gets repository for write
            </summary>
        </member>
        <member name="T:Genome.RepositoryExtensions">
            <summary>
            Extensions for <see cref="T:Genome.Repo.Repository`1"/>
            </summary>
        </member>
        <member name="M:Genome.RepositoryExtensions.Get``1(Genome.Repo.Repository{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Gets queryable
            </summary>
        </member>
        <member name="M:Genome.RepositoryExtensions.Get``2(Genome.Repo.Repository{``0},``1)">
            <summary>
            Gets queryable
            </summary>
        </member>
        <member name="M:Genome.RepositoryExtensions.Remove``2(Genome.Repo.WritableRepository{``0},``1)">
            <summary>
            Removes item by identifier
            </summary>
        </member>
        <member name="M:Genome.RepositoryExtensions.Update``2(Genome.Repo.WritableRepository{``0},``1,System.Linq.Expressions.Expression{System.Func{``0,``0}})">
            <summary>
            Removes item by identifier
            </summary>
        </member>
        <member name="M:Genome.RepositoryExtensions.Clear``1(Genome.Repo.WritableRepository{``0})">
            <summary>
            Gets queryable
            </summary>
        </member>
        <member name="T:Genome.Repo.RegRepoConfigData">
            <summary>
            Contains repository settings from config
            </summary>
        </member>
        <member name="P:Genome.Repo.RegRepoConfigData.RepoId">
            <summary>
            Repository identifier. Uses repository type id if empty
            </summary>
        </member>
        <member name="P:Genome.Repo.RegRepoConfigData.RepoTypeId">
            <summary>
            Repository type identifier
            </summary>
        </member>
        <member name="P:Genome.Repo.RegRepoConfigData.ConnectionString">
            <summary>
            Connection string
            </summary>
        </member>
        <member name="T:Genome.Repo.RepoConfiguration">
            <summary>
            Contains repository configuration
            </summary>
        </member>
        <member name="P:Genome.Repo.RepoConfiguration.ConnectionStringId">
            <summary>
            Connection Id, which point to connection string into app.config
            </summary>
        </member>
        <member name="P:Genome.Repo.RepoConfiguration.ConnectionString">
            <summary>
            Connection string
            </summary>
        </member>
        <member name="T:Genome.Repo.RepositoryId">
            <summary>
            <see cref="F:Genome.Repo.RepositoryId.Description"/>
            </summary>
            <remarks>Namespace: '<see cref="F:Genome.Repo.RepositoryId.IdNamespace"/>'</remarks>
        </member>
        <member name="F:Genome.Repo.RepositoryId.IdNamespace">
            <summary>
            Input namespace restriction
            </summary>
        </member>
        <member name="M:Genome.Repo.RepositoryId.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Repo.RepositoryId"/>
            </summary>
        </member>
        <member name="M:Genome.Repo.RepositoryId.#ctor">
            <summary>
            Serialization constructor
            </summary>
        </member>
        <member name="M:Genome.Repo.RepositoryId.op_Implicit(System.String)~Genome.Repo.RepositoryId">
            <summary>
            Converts a <see cref="T:System.String"/> to <see cref="T:Genome.Repo.RepositoryId"/>
            </summary>
        </member>
        <member name="M:Genome.Repo.RepositoryId.Create(System.String)">
            <summary>
            Creates <see cref="T:Genome.Repo.RepositoryId"/> based on name
            </summary>
        </member>
        <member name="M:Genome.Repo.RepositoryId.Validate(System.String)">
            <summary>
            Validates identifier
            </summary>
        </member>
        <member name="T:Genome.Repo.RepositoryTypeId">
            <summary>
            <see cref="F:Genome.Repo.RepositoryTypeId.Description"/>
            </summary>
            <remarks>Namespace: '<see cref="F:Genome.Repo.RepositoryTypeId.IdNamespace"/>'</remarks>
        </member>
        <member name="F:Genome.Repo.RepositoryTypeId.IdNamespace">
            <summary>
            Input namespace restriction
            </summary>
        </member>
        <member name="F:Genome.Repo.RepositoryTypeId.Default">
            <summary>
            Default RepositoryType
            </summary>
        </member>
        <member name="M:Genome.Repo.RepositoryTypeId.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Repo.RepositoryTypeId"/>
            </summary>
        </member>
        <member name="M:Genome.Repo.RepositoryTypeId.#ctor">
            <summary>
            Serialization constructor
            </summary>
        </member>
        <member name="M:Genome.Repo.RepositoryTypeId.op_Implicit(System.String)~Genome.Repo.RepositoryTypeId">
            <summary>
            Converts a <see cref="T:System.String"/> to <see cref="T:Genome.Repo.RepositoryTypeId"/>
            </summary>
        </member>
        <member name="M:Genome.Repo.RepositoryTypeId.Create(System.String)">
            <summary>
            Creates <see cref="T:Genome.Repo.RepositoryTypeId"/> based on name
            </summary>
        </member>
        <member name="M:Genome.Repo.RepositoryTypeId.Validate(System.String)">
            <summary>
            Validates identifier
            </summary>
        </member>
        <member name="T:Genome.Repo.TransactionId">
            <summary>
            <see cref="F:Genome.Repo.TransactionId.Description"/>
            </summary>
            <remarks>Namespace: '<see cref="F:Genome.Repo.TransactionId.IdNamespace"/>'</remarks>
        </member>
        <member name="F:Genome.Repo.TransactionId.IdNamespace">
            <summary>
            Input namespace restriction
            </summary>
        </member>
        <member name="F:Genome.Repo.TransactionId.Default">
            <summary>
            Default TransactionId
            </summary>
        </member>
        <member name="M:Genome.Repo.TransactionId.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Repo.TransactionId"/>
            </summary>
        </member>
        <member name="M:Genome.Repo.TransactionId.#ctor">
            <summary>
            Serialization constructor
            </summary>
        </member>
        <member name="M:Genome.Repo.TransactionId.op_Implicit(System.String)~Genome.Repo.TransactionId">
            <summary>
            Converts a <see cref="T:System.String"/> to <see cref="T:Genome.Repo.TransactionId"/>
            </summary>
        </member>
        <member name="M:Genome.Repo.TransactionId.Create(System.String)">
            <summary>
            Creates <see cref="T:Genome.Repo.TransactionId"/> based on name
            </summary>
        </member>
        <member name="M:Genome.Repo.TransactionId.Validate(System.String)">
            <summary>
            Validates identifier
            </summary>
        </member>
        <member name="T:Genome.Repo.RepositoryContent`1">
            <summary>
            Represent repository content
            </summary>
            <typeparam name="T">item type</typeparam>
        </member>
        <member name="M:Genome.Repo.RepositoryContent`1.#ctor(System.Linq.IQueryable{`0},System.IDisposable)">
            <summary>
            Initializes a new isntance of <see cref="T:Genome.Repo.RepositoryContent`1"/>
            </summary>
        </member>
        <member name="T:Genome.Repo.RepositoryContent">
            <summary>
            Represent repository content
            </summary>
        </member>
        <member name="M:Genome.Repo.RepositoryContent.#ctor(System.Linq.IQueryable{System.Object},System.IDisposable)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Repo.RepositoryContent"/>
            </summary>
        </member>
        <member name="T:Genome.Repo.WritableRepository`1">
            <summary>
            Writable repository
            </summary>
            <typeparam name="T">item type</typeparam>
        </member>
        <member name="T:Genome.Repo.Repository`1">
            <summary>
            The base implementation of <see cref="T:Genome.Repo.Repository`1"/>
            </summary>
            <typeparam name="T">item type</typeparam>
        </member>
        <member name="T:Genome.Repo.IRepository">
            <summary>
            Represent a repository
            </summary>
        </member>
        <member name="M:Genome.Repo.IRepository.Configure(Genome.Repo.RepoConfiguration)">
            <summary>
            Configures repository
            </summary>
            <param name="settings">repo settings</param>
        </member>
        <member name="M:Genome.Repo.IRepository.Get">
            <summary>
            Gets item by identifier
            </summary>
        </member>
        <member name="M:Genome.Repo.Repository`1.Get">
            <summary>
            Gets repository content
            </summary>
        </member>
        <member name="E:Genome.Repo.Repository`1.Changed">
            <summary>
            Occures when repository has changed
            </summary>
        </member>
        <member name="P:Genome.Repo.Repository`1.Configuration">
            <summary>
            Repository configuration
            </summary>
        </member>
        <member name="M:Genome.Repo.WritableRepository`1.Add(`0)">
            <summary>
            Adds item to repository
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Genome.Repo.WritableRepository`1.Remove(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Remove all items which satisfy the specified predicate
            </summary>
        </member>
        <member name="M:Genome.Repo.WritableRepository`1.Update(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,`0}})">
            <summary>
            Updates items which satisfy the specified predicate
            </summary>
        </member>
        <member name="T:Genome.Resources.ResourceId">
            <summary>
            <see cref="F:Genome.Resources.ResourceId.Description"/>
            </summary>
            <remarks>Namespace: '<see cref="F:Genome.Resources.ResourceId.IdNamespace"/>'</remarks>
        </member>
        <member name="F:Genome.Resources.ResourceId.IdNamespace">
            <summary>
            Input namespace restriction
            </summary>
        </member>
        <member name="M:Genome.Resources.ResourceId.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Resources.ResourceId"/>
            </summary>
        </member>
        <member name="M:Genome.Resources.ResourceId.#ctor">
            <summary>
            Serialization constructor
            </summary>
        </member>
        <member name="M:Genome.Resources.ResourceId.op_Implicit(System.String)~Genome.Resources.ResourceId">
            <summary>
            Converts a <see cref="T:System.String"/> to <see cref="T:Genome.Resources.ResourceId"/>
            </summary>
        </member>
        <member name="M:Genome.Resources.ResourceId.Create(System.String)">
            <summary>
            Creates <see cref="T:Genome.Resources.ResourceId"/> based on name
            </summary>
        </member>
        <member name="M:Genome.Resources.ResourceId.Validate(System.String)">
            <summary>
            Validates identifier
            </summary>
        </member>
        <member name="T:Genome.Accessor">
            <summary>
            Thread safe accessor to some resource
            </summary>
        </member>
        <member name="M:Genome.Accessor.TryDo(System.Action)">
            <summary>
            Tries do an action if nobody ale does it
            </summary>
        </member>
        <member name="T:Genome.Annotations.IdDefinitionAttribute">
            <summary>
            Contains identifier definition description
            </summary>
        </member>
        <member name="M:Genome.Annotations.IdDefinitionAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Annotations.IdDefinitionAttribute"/>
            </summary>
        </member>
        <member name="P:Genome.Annotations.IdDefinitionAttribute.Comment">
            <summary>
            Gets identifier comment
            </summary>
        </member>
        <member name="P:Genome.Annotations.IdDefinitionAttribute.Urn">
            <summary>
            Gets identifier URN
            </summary>
        </member>
        <member name="T:Genome.Annotations.IdTypeAttribute">
            <summary>
            Contains <see cref="T:Genome.Identifier"/> based identificators description 
            </summary>
        </member>
        <member name="M:Genome.Annotations.IdTypeAttribute.#ctor(System.String,System.String[])">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Annotations.IdTypeAttribute"/>
            </summary>
        </member>
        <member name="P:Genome.Annotations.IdTypeAttribute.Comment">
            <summary>
            Gets a comment for identifier
            </summary>
        </member>
        <member name="P:Genome.Annotations.IdTypeAttribute.Namespaces">
            <summary>
            Gets namespace restrictions
            </summary>
        </member>
        <member name="T:Genome.Aspects.IGenericParamterValidationStrategy">
            <summary>
            Validates generic method parameter
            </summary>
        </member>
        <member name="M:Genome.Aspects.IGenericParamterValidationStrategy.Validate(System.Type)">
            <summary>
            Vlaidates generic parameter type
            </summary>
        </member>
        <member name="P:Genome.Aspects.IGenericParamterValidationStrategy.ErrorMsg">
            <summary>
            Validation error message
            </summary>
        </member>
        <member name="T:Ids.Stuff.Aspects.Strings.InputParameterIsEmpty">
            <summary>
            <see cref="F:Ids.Stuff.Aspects.Strings.InputParameterIsEmpty.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Stuff.Aspects.Strings.InputParameterIsEmpty.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Stuff.Aspects.Strings.InputParameterIsEmpty.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Stuff.Aspects.Strings.ParameterMustNotBeGreaterThen">
            <summary>
            <see cref="F:Ids.Stuff.Aspects.Strings.ParameterMustNotBeGreaterThen.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Stuff.Aspects.Strings.ParameterMustNotBeGreaterThen.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Stuff.Aspects.Strings.ParameterMustNotBeGreaterThen.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Stuff.Aspects.Strings.ParameterMustNotBeLessThen">
            <summary>
            <see cref="F:Ids.Stuff.Aspects.Strings.ParameterMustNotBeLessThen.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Stuff.Aspects.Strings.ParameterMustNotBeLessThen.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Stuff.Aspects.Strings.ParameterMustNotBeLessThen.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Genome.Aspects.IInputParameterAttribute">
            <summary>
            Input parameter aspect attribute interface
            </summary>
        </member>
        <member name="T:Genome.Aspects.MaxValueAttribute">
            <summary>
            Determines that digital parameter not greater than min value(0 by default).
            </summary>
        </member>
        <member name="T:Genome.Aspects.MinValueAttribute">
            <summary>
            Determines that digital parameter not less than min value(0 by default).
            </summary>
        </member>
        <member name="T:Genome.Aspects.NotDefaultAttribute">
            <summary>
            Determines that parameter must not have a default value
            </summary>
        </member>
        <member name="T:Genome.Aspects.NotNullAttribute">
            <summary>
            Determines that parameter must not have a 'null' value
            </summary>
        </member>
        <member name="T:Genome.ExceptionArgs">
            <summary>
            Contains initial <see cref="P:Genome.ExceptionArgs.Exception"/>
            </summary>
        </member>
        <member name="M:Genome.ExceptionArgs.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.ExceptionArgs"/>
            </summary>
        </member>
        <member name="P:Genome.ExceptionArgs.Exception">
            <summary>
            Initial exception
            </summary>
        </member>
        <member name="T:Genome.ExceptionExtensions">
            <summary>
            Extensions for <see cref="T:Genome.ExceptionExtensions"/>
            </summary>
            <summary>
            Extensions for exceptions
            </summary>
        </member>
        <member name="M:Genome.ExceptionExtensions.GetExceptionId(System.Exception)">
            <summary>
            Gets exception identifier. Empty if not defined
            </summary>
        </member>
        <member name="M:Genome.ExceptionExtensions.SetExceptionId(System.Exception,Genome.ObjectId)">
            <summary>
            Sets an exception id
            </summary>
        </member>
        <member name="M:Genome.ExceptionExtensions.Rethrow(System.Exception,System.String)">
            <summary>
            Save contexts, wraps and rethrows result exception
            </summary>
        </member>
        <member name="T:Genome.IParamInitiable`1">
            <summary>
            Object that must be initialized before using
            </summary>
        </member>
        <member name="T:Genome.IParamInitiable">
            <summary>
            Object that must be initialized before using
            </summary>
        </member>
        <member name="M:Genome.IParamInitiable.Initialize(System.Object)">
            <summary>
            Initializes the object
            </summary>
        </member>
        <member name="M:Genome.IParamInitiable`1.Initialize(`0)">
            <summary>
            Initializes the object
            </summary>
        </member>
        <member name="T:Genome.AppControllerId">
            <remarks>Namespace: '<see cref="F:Genome.AppControllerId.IdNamespace"/>'</remarks>
        </member>
        <member name="F:Genome.AppControllerId.IdNamespace">
            <summary>
            Input namespace restriction
            </summary>
        </member>
        <member name="M:Genome.AppControllerId.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.AppControllerId"/>
            </summary>
        </member>
        <member name="M:Genome.AppControllerId.#ctor">
            <summary>
            Serialization constructor
            </summary>
        </member>
        <member name="M:Genome.AppControllerId.op_Implicit(System.String)~Genome.AppControllerId">
            <summary>
            Converts a <see cref="T:System.String"/> to <see cref="T:Genome.AppControllerId"/>
            </summary>
        </member>
        <member name="M:Genome.AppControllerId.Create(System.String)">
            <summary>
            Creates <see cref="T:Genome.AppControllerId"/> based on name
            </summary>
        </member>
        <member name="M:Genome.AppControllerId.Validate(System.String)">
            <summary>
            Validates identifier
            </summary>
        </member>
        <member name="T:Genome.GuidId">
            <summary>
            <see cref="F:Genome.GuidId.Description"/>
            </summary>
        </member>
        <member name="F:Genome.GuidId.Empty">
            <summary>
            Contains default value of identifier
            </summary>
        </member>
        <member name="M:Genome.GuidId.#ctor(System.Guid,System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.GuidId"/>
            </summary>
        </member>
        <member name="M:Genome.GuidId.#ctor">
            <summary>
            Serialization constructor
            </summary>
        </member>
        <member name="M:Genome.GuidId.Generate(System.String)">
            <summary>
            Generates <see cref="T:Genome.GuidId"/> based on "new" <see cref="T:System.Guid"/>
            </summary>
        </member>
        <member name="M:Genome.GuidId.op_Implicit(System.Guid)~Genome.GuidId">
            <summary>
            Converts a <see cref="T:System.String"/> to <see cref="T:Genome.GuidId"/>
            </summary>
        </member>
        <member name="P:Genome.GuidId.Id">
            <summary>
            Gets <see cref="T:System.Guid"/> value
            </summary>
        </member>
        <member name="T:Genome.Configuration.ConstantId">
            <summary>
            <see cref="F:Genome.Configuration.ConstantId.Description"/>
            </summary>
            <remarks>Namespace: '<see cref="F:Genome.Configuration.ConstantId.IdNamespace"/>'</remarks>
        </member>
        <member name="F:Genome.Configuration.ConstantId.IdNamespace">
            <summary>
            Input namespace restriction
            </summary>
        </member>
        <member name="M:Genome.Configuration.ConstantId.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Configuration.ConstantId"/>
            </summary>
        </member>
        <member name="M:Genome.Configuration.ConstantId.#ctor">
            <summary>
            Serialization constructor
            </summary>
        </member>
        <member name="M:Genome.Configuration.ConstantId.op_Implicit(System.String)~Genome.Configuration.ConstantId">
            <summary>
            Converts a <see cref="T:System.String"/> to <see cref="T:Genome.Configuration.ConstantId"/>
            </summary>
        </member>
        <member name="M:Genome.Configuration.ConstantId.Create(System.String)">
            <summary>
            Creates <see cref="T:Genome.Configuration.ConstantId"/> based on name
            </summary>
        </member>
        <member name="M:Genome.Configuration.ConstantId.Validate(System.String)">
            <summary>
            Validates identifier
            </summary>
        </member>
        <member name="T:Genome.ManagerId">
            <summary>
            <see cref="F:Genome.ManagerId.Description"/>
            </summary>
            <remarks>Namespace: '<see cref="F:Genome.ManagerId.Description"/>'</remarks>
        </member>
        <member name="F:Genome.ManagerId.IdNamespace">
            <summary>
            Input namespace restriction
            </summary>
        </member>
        <member name="M:Genome.ManagerId.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.ManagerId"/>
            </summary>
        </member>
        <member name="M:Genome.ManagerId.#ctor">
            <summary>
            Serialization constructor
            </summary>
        </member>
        <member name="M:Genome.ManagerId.op_Implicit(System.String)~Genome.ManagerId">
            <summary>
            Converts a <see cref="T:System.String"/> to <see cref="T:Genome.ManagerId"/>
            </summary>
        </member>
        <member name="M:Genome.ManagerId.Create(System.String)">
            <summary>
            Creates <see cref="T:Genome.ManagerId"/> based on name
            </summary>
        </member>
        <member name="M:Genome.ManagerId.Validate(System.String)">
            <summary>
            Validates identifier
            </summary>
        </member>
        <member name="T:Genome.PropertyId">
            <summary>
            <see cref="F:Genome.PropertyId.Description"/>
            </summary>
            <remarks>Namespace: '<see cref="F:Genome.PropertyId.IdNamespace"/>'</remarks>
        </member>
        <member name="F:Genome.PropertyId.IdNamespace">
            <summary>
            Input namespace restriction
            </summary>
        </member>
        <member name="M:Genome.PropertyId.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.PropertyId"/>
            </summary>
        </member>
        <member name="M:Genome.PropertyId.#ctor">
            <summary>
            Serialization constructor
            </summary>
        </member>
        <member name="M:Genome.PropertyId.op_Implicit(System.String)~Genome.PropertyId">
            <summary>
            Converts a <see cref="T:System.String"/> to <see cref="T:Genome.PropertyId"/>
            </summary>
        </member>
        <member name="M:Genome.PropertyId.Create(System.String)">
            <summary>
            Creates <see cref="T:Genome.PropertyId"/> based on name
            </summary>
        </member>
        <member name="M:Genome.PropertyId.Validate(System.String)">
            <summary>
            Validates identifier
            </summary>
        </member>
        <member name="T:Genome.StringId">
            <summary>
            <see cref="F:Genome.StringId.Description"/>
            </summary>
            <remarks>Namespace: '<see cref="F:Genome.StringId.IdNamespace"/>'</remarks>
        </member>
        <member name="F:Genome.StringId.IdNamespace">
            <summary>
            Input namespace restriction
            </summary>
        </member>
        <member name="M:Genome.StringId.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.StringId"/>
            </summary>
        </member>
        <member name="M:Genome.StringId.#ctor">
            <summary>
            Serialization constructor
            </summary>
        </member>
        <member name="M:Genome.StringId.op_Implicit(System.String)~Genome.StringId">
            <summary>
            Converts a <see cref="T:System.String"/> to <see cref="T:Genome.StringId"/>
            </summary>
        </member>
        <member name="M:Genome.StringId.Create(System.String)">
            <summary>
            Creates <see cref="T:Genome.StringId"/> based on name
            </summary>
        </member>
        <member name="M:Genome.StringId.Validate(System.String)">
            <summary>
            Validates identifier
            </summary>
        </member>
        <member name="P:Genome.StringId.DefaultValue">
            <summary>
            Gets default value of string
            </summary>
        </member>
        <member name="T:Genome.InstanceFactoring.FlyweightFactory">
            <summary>
            Provides single object
            </summary>
        </member>
        <member name="M:Genome.InstanceFactoring.FlyweightFactory.#ctor(Genome.IObjectProvider)">
            <summary>
            Initializes a new instnace of <see cref="T:Genome.InstanceFactoring.FlyweightFactory"/>
            </summary>
            <param name="initialObjectProvider">initial object provider</param>
        </member>
        <member name="T:Genome.InstanceFactoring.FlyweightFactory`1">
            <summary>
            Providers single object
            </summary>
            <typeparam name="T">type of provided object</typeparam>
        </member>
        <member name="M:Genome.InstanceFactoring.FlyweightFactory`1.#ctor(Genome.IObjectProvider{`0})">
            <summary>
            Initializes a new instance of <see cref="T:Genome.InstanceFactoring.FlyweightFactory`1"/>
            </summary>
            <param name="initialObjectProvider">initial object provider</param>
        </member>
        <member name="T:Genome.ProcessingModel.OperationException">
            <summary>
            Contains operation error properties
            </summary>
        </member>
        <member name="T:Genome.Logging.BizException">
            <summary>
            Represent an exception which has business value
            </summary>
        </member>
        <member name="T:Genome.Logging.LogMessageContainerException">
            <summary>
            Contains log mesage wgich cxreated in contest scope
            </summary>
        </member>
        <member name="T:Genome.Logging.ILogMessageProvider">
            <summary>
            Represent provider of log message
            </summary>
        </member>
        <member name="T:Genome.IObjectProvider`1">
            <summary>
            Defines a generic object provider
            </summary>
            <typeparam name="T">type of provided object</typeparam>
        </member>
        <member name="T:Genome.IObjectProvider">
            <summary>
            Defines an object provider
            </summary>
        </member>
        <member name="M:Genome.IObjectProvider.GetObject">
            <summary>
            Gets provided object
            </summary>
            <returns>provided object</returns>
        </member>
        <member name="M:Genome.IObjectProvider`1.GetObject">
            <summary>
            Gets provided object
            </summary>
            <returns>provided object</returns>
        </member>
        <member name="M:Genome.Logging.LogMessageContainerException.#ctor(System.String,Genome.Logging.LogMessageBase,System.Exception)">
            <summary>
            Initializes a new instnacve of <see cref="T:Genome.Logging.LogMessageContainerException"/>
            </summary>
        </member>
        <member name="M:Genome.Logging.LogMessageContainerException.#ctor(System.String)">
            <summary>
            Initializes a new instnacve of <see cref="T:Genome.Logging.LogMessageContainerException"/>
            </summary>
        </member>
        <member name="M:Genome.Logging.LogMessageContainerException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instnacve of <see cref="T:Genome.Logging.LogMessageContainerException"/>
            </summary>
        </member>
        <member name="M:Genome.Logging.LogMessageContainerException.#ctor(System.Exception)">
            <summary>
            Initializes a new instnacve of <see cref="T:Genome.Logging.LogMessageContainerException"/>
            </summary>
        </member>
        <member name="M:Genome.Logging.BizException.#ctor(System.String,Genome.Logging.ErrCodeId)">
            <summary>
            Initializes a new instnacve of <see cref="T:Genome.Logging.BizException"/>
            </summary>
        </member>
        <member name="M:Genome.Logging.BizException.#ctor(System.String,System.Exception,Genome.Logging.ErrCodeId)">
            <summary>
            Initializes a new instnacve of <see cref="T:Genome.Logging.BizException"/>
            </summary>
        </member>
        <member name="M:Genome.Logging.BizException.#ctor(System.String,Genome.Logging.LogMessageBase,Genome.Logging.ErrCodeId)">
            <summary>
            Initializes a new instnacve of <see cref="T:Genome.Logging.BizException"/>
            </summary>
            <param name="message"></param>
            <param name="logMessage"></param>
        </member>
        <member name="M:Genome.Logging.BizException.Create(System.String,System.String,Genome.Logging.ErrCodeId)">
            <summary>
            Creates <see cref="T:Genome.Logging.BizException"/> with contexts
            </summary>
        </member>
        <member name="M:Genome.Logging.BizException.Create(System.String,System.String,System.Exception,Genome.Logging.ErrCodeId)">
            <summary>
            Creates <see cref="T:Genome.Logging.BizException"/> with contexts
            </summary>
        </member>
        <member name="P:Genome.Logging.BizException.ErrorCode">
            <summary>
            Source of business exception
            </summary>
        </member>
        <member name="P:Genome.Logging.BizException.Time">
            <summary>
            Exception time
            </summary>
        </member>
        <member name="M:Genome.ProcessingModel.OperationException.#ctor(System.String,Genome.Logging.ErrCodeId)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.ProcessingModel.OperationException"/>
            </summary>
        </member>
        <member name="M:Genome.ProcessingModel.OperationException.#ctor(System.String,System.Exception,Genome.Logging.ErrCodeId)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.ProcessingModel.OperationException"/>
            </summary>
        </member>
        <member name="T:Genome.ProcessingModel.Processing">
            <summary>
            Represent some processing
            </summary>
        </member>
        <member name="M:Genome.ProcessingModel.Processing.#ctor(Genome.ProcessingModel.Progress,Genome.ProcessingModel.ReportFormer)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.ProcessingModel.Processing"/>
            </summary>
        </member>
        <member name="M:Genome.ProcessingModel.Processing.CreateReport">
            <summary>
            Creates a processing report
            </summary>
        </member>
        <member name="M:Genome.ProcessingModel.Processing.WaitForComplete">
            <summary>
            Whaits for processing completion
            </summary>
        </member>
        <member name="M:Genome.ProcessingModel.Processing.WaitForComplete(System.TimeSpan)">
            <summary>
            Whaits for processing completion. Using the <see cref="T:System.TimeSpan"/> to measure the time interval
            </summary>
        </member>
        <member name="E:Genome.ProcessingModel.Processing.Initiated">
            <summary>
            Occures when processing has been initiated
            </summary>
        </member>
        <member name="E:Genome.ProcessingModel.Processing.Completed">
            <summary>
            Occures when processing has been completed
            </summary>
        </member>
        <member name="P:Genome.ProcessingModel.Processing.Progress">
            <summary>
            Provides information about processing progress
            </summary>
        </member>
        <member name="P:Genome.ProcessingModel.Processing.State">
            <summary>
            Gets <see cref="T:Genome.ProcessingModel.Processing"/> state
            </summary>
        </member>
        <member name="T:Genome.ProcessingModel.Processing.Operator">
            <summary>
            Processing model operator
            </summary>
        </member>
        <member name="M:Genome.ProcessingModel.Processing.Operator.#ctor(Genome.ProcessingModel.Processing)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.ProcessingModel.Processing.Operator"/>
            </summary>
            <param name="processing"></param>
        </member>
        <member name="M:Genome.ProcessingModel.Processing.Operator.Initiate">
            <summary>
            Initiates the processing 
            </summary>
        </member>
        <member name="M:Genome.ProcessingModel.Processing.Operator.Complete(Genome.ProcessingModel.OperationResult)">
            <summary>
            Completes the processing
            </summary>
        </member>
        <member name="T:Genome.ProcessingModel.ProcessingState">
            <summary>
            Processing states
            </summary>
        </member>
        <member name="F:Genome.ProcessingModel.ProcessingState.Inactive">
            <summary>
            Begining state
            </summary>
        </member>
        <member name="F:Genome.ProcessingModel.ProcessingState.InProgress">
            <summary>
            Processing in process
            </summary>
        </member>
        <member name="F:Genome.ProcessingModel.ProcessingState.Fail">
            <summary>
            Has been processing fail
            </summary>
        </member>
        <member name="F:Genome.ProcessingModel.ProcessingState.Successful">
            <summary>
            Completed successfully
            </summary>
        </member>
        <member name="T:Genome.ProcessingModel.ProcessingReport">
            <summary>
            Contains information about logic performing
            </summary>
        </member>
        <member name="M:Genome.ProcessingModel.ProcessingReport.#ctor(Genome.ProcessingModel.OperationResult,System.Collections.Generic.IEnumerable{Genome.ProcessingModel.ProcessingOperationReport})">
            <summary>
            Initializes a new instance of <see cref="T:Genome.ProcessingModel.ProcessingReport"/>
            </summary>
        </member>
        <member name="P:Genome.ProcessingModel.ProcessingReport.Operations">
            <summary>
            Operations reports
            </summary>
        </member>
        <member name="P:Genome.ProcessingModel.ProcessingReport.TotalResult">
            <summary>
            Gets a command result
            </summary>
        </member>
        <member name="T:Genome.ProcessingModel.ProcessingOperationReport">
            <summary>
            Constains operation performing result information
            </summary>
        </member>
        <member name="M:Genome.ProcessingModel.ProcessingOperationReport.#ctor(Genome.ProcessingModel.OperationResult,System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.ProcessingModel.ProcessingOperationReport"/>
            </summary>
        </member>
        <member name="P:Genome.ProcessingModel.ProcessingOperationReport.Result">
            <summary>
            Operation result
            </summary>
        </member>
        <member name="P:Genome.ProcessingModel.ProcessingOperationReport.Description">
            <summary>
            Operation description
            </summary>
        </member>
        <member name="T:Genome.ProcessingModel.ReportFormer">
            <summary>
            Provides abilities to create a command performing report
            </summary>
        </member>
        <member name="M:Genome.ProcessingModel.ReportFormer.AddOperationReport(Genome.ProcessingModel.OperationResult,System.String)">
            <summary>
            Adds operation perform report 
            </summary>
        </member>
        <member name="M:Genome.ProcessingModel.ReportFormer.Complete(Genome.ProcessingModel.OperationResult)">
            <summary>
            Competes a report
            </summary>
        </member>
        <member name="M:Genome.ProcessingModel.ReportFormer.CreateReport">
            <summary>
            Creates processing report
            </summary>
        </member>
        <member name="M:Genome.ProcessingModel.ReportFormer.Reset">
            <summary>
            Reset the former
            </summary>
        </member>
        <member name="T:Genome.Composition.AttachPartAttribute">
            <summary>
            Specifies part of composite object
            </summary>
        </member>
        <member name="M:Genome.Composition.AttachPartAttribute.#ctor(System.Type)">
            <summary>
            Constructor
            </summary>
            <param name="partType">part type</param>
        </member>
        <member name="M:Genome.Composition.AttachPartAttribute.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="factoryId">registered factory type of the part</param>
            <param name="factoryCategory">factory category identifier</param>
        </member>
        <member name="P:Genome.Composition.AttachPartAttribute.PartRole">
            <summary>
            Specifies a part role
            </summary>
        </member>
        <member name="P:Genome.Composition.AttachPartAttribute.PartType">
            <summary>
            Part type
            </summary>
        </member>
        <member name="P:Genome.Composition.AttachPartAttribute.FactoryId">
            <summary>
            Factory identifier
            </summary>
        </member>
        <member name="P:Genome.Composition.AttachPartAttribute.FactoryCategoryId">
            <summary>
            Factory category identifier
            </summary>
        </member>
        <member name="P:Genome.Composition.AttachPartAttribute.IsOptional">
            <summary>
            Indicates that composition part is optional
            </summary>
        </member>
        <member name="P:Genome.Composition.AttachPartAttribute.NotWrap">
            <summary>
            Determines that part class will not be wrapped
            </summary>
        </member>
        <member name="T:Genome.Composition.CompositeObjectAttribute">
            <summary>
            Composite object attribute
            </summary>
        </member>
        <member name="T:Genome.ICastConverter">
            <summary>
            Defines cast management converter
            </summary>
        </member>
        <member name="M:Genome.ICastConverter.TryCast(System.Object,System.Type,System.Object@)">
            <summary>
            Try to cast an object to specified target type
            </summary>
        </member>
        <member name="T:Genome.CompositionManagerExtensions">
            <summary>
            Extensions for <see cref="T:Genome.Composition.ICompositionManager"/>
            </summary>
        </member>
        <member name="M:Genome.CompositionManagerExtensions.AssembleCompositeObjectAndCast``1(Genome.Composition.ICompositionManager,Genome.Composition.CompositionPartSet)">
            <summary>
            Assembles a new composite object 
            </summary>
            <param name="partSet">composite parts</param>
            <param name="manager">composition manager</param>
            <typeparam name="T">A type to which a new composite object will be cast</typeparam>
            <returns>composite object</returns>
        </member>
        <member name="M:Genome.CompositionManagerExtensions.AssembleCompositeObject``1(Genome.Composition.ICompositionManager,Genome.Composition.CompositionPartSet)">
            <summary>
            Assembles a new composite object 
            </summary>
            <param name="partSet">composite parts</param>
            <param name="manager">composition manager</param>
            <typeparam name="T">Main part type</typeparam>
            <returns>composite object</returns>
        </member>
        <member name="M:Genome.CompositionManagerExtensions.GetCompositePart``1(Genome.Composition.ICompositionManager,System.Object)">
            <summary>
            Gets a part of composition object by tape
            </summary>
            <param name="compositionObject">target composition object</param>
            <param name="manager">composition manager</param>
            <typeparam name="T">part role</typeparam>
            <returns>found part or NULL</returns>
        </member>
        <member name="M:Genome.CompositionManagerExtensions.AttachCompositePartToType(Genome.Composition.ICompositionManager,System.Type,Genome.IObjectProvider{System.Type},Genome.Composition.AttachPartParameters)">
            <summary>
            Attaches an composition part on factory level
            </summary>
            <param name="type">target type</param>
            <param name="partTypeProvider">part type provider</param>
            <param name="manager">composition manager</param>
            <param name="parameters">composition parameters</param>
        </member>
        <member name="M:Genome.CompositionManagerExtensions.AttachCompositePartToType(Genome.Composition.ICompositionManager,System.Type,Genome.IInstanceFactory{Genome.Composition.ICompositePart},Genome.Composition.AttachPartParameters)">
            <summary>
            Attaches an composition part on factory level
            </summary>
            <param name="type">target type</param>
            <param name="partFactory">composition part factory</param>
            <param name="manager">composition manager</param>
            <param name="parameters">composition parameters</param>
        </member>
        <member name="M:Genome.CompositionManagerExtensions.AttachCompositePartToType(Genome.Composition.ICompositionManager,System.Type,System.Type,Genome.Composition.AttachPartParameters)">
            <summary>
            Attaches an composition part on factory level
            </summary>
            <param name="manager">composition manager</param>
            <param name="type">target type</param>
            <param name="partType">composition part type</param>
            <param name="parameters">composition parameters</param>
        </member>
        <member name="M:Genome.CompositionManagerExtensions.AttachCompositePartToType(Genome.Composition.ICompositionManager,System.Type,Genome.ObjectId,Genome.Registry.CategoryId,Genome.Composition.AttachPartParameters)">
            <summary>
            Attaches an composition part on factory level
            </summary>
            <param name="manager">composition manager</param>
            <param name="type">target type</param>
            <param name="factoryId">composition part factory id</param>
            <param name="factoryCategoryId">composition part factory category id</param>
            <param name="parameters">composition parameters</param>
        </member>
        <member name="M:Genome.CompositionManagerExtensions.AttachCompositePartToConveyor(Genome.Composition.ICompositionManager,Genome.Factoring.FactoryConveyor,System.Type,Genome.Composition.AttachPartParameters)">
            <summary>
            Attaches an composition part on factory level
            </summary>
            <param name="manager">composition manager</param>
            <param name="conveyor">target type conveyor</param>
            <param name="partType">composition part type</param>
            <param name="parameters">composition parameters</param>
        </member>
        <member name="M:Genome.CompositionManagerExtensions.AttachCompositePartToConveyor(Genome.Composition.ICompositionManager,Genome.Factoring.FactoryConveyor,Genome.ObjectId,Genome.Registry.CategoryId,Genome.Composition.AttachPartParameters)">
            <summary>
            Attaches an composition part on factory level
            </summary>
            <param name="manager">composition manager</param>
            <param name="conveyor">target type conveyor</param>
            <param name="factoryId">composition part factory id</param>
            <param name="factoryCategoryId">composition part factory category id</param>
            <param name="parameters">composition parameters</param>
        </member>
        <member name="T:Genome.Composition.Compositor">
            <summary>
            Compositor
            </summary>
        </member>
        <member name="P:Genome.Composition.Compositor.Parts">
            <summary>
            Parts of composition object
            </summary>
        </member>
        <member name="T:Genome.Composition.ICompositionManager">
            <summary>
            Coposition manager. Concentrate coposition functionallity
            </summary>
        </member>
        <member name="M:Genome.Composition.ICompositionManager.IsCompositionObject(System.Object)">
            <summary>
            Detecs that target object is composite
            </summary>
        </member>
        <member name="M:Genome.Composition.ICompositionManager.MarkTypeAsComposition(System.Type)">
            <summary>
            Marks a specified type as composition
            </summary>
            <param name="type">target type</param>
            <returns>roolback object</returns>
        </member>
        <member name="M:Genome.Composition.ICompositionManager.AttachCompositePartToConveyor(Genome.Factoring.FactoryConveyor,Genome.IObjectProvider{System.Type},Genome.Composition.AttachPartParameters)">
            <summary>
            Attaches an composition part on factory level
            </summary>
            <param name="conveyor">target type conveyor</param>
            <param name="partTypeProvider">part type provider</param>
            <param name="parameters">composition parameters</param>
            <returns>roolback object</returns>
        </member>
        <member name="M:Genome.Composition.ICompositionManager.AttachCompositePartToConveyor(Genome.Factoring.FactoryConveyor,Genome.IInstanceFactory{Genome.Composition.ICompositePart},Genome.Composition.AttachPartParameters)">
            <summary>
            Attaches an composition part on factory level
            </summary>
            <param name="conveyor">target type conveyor</param>
            <param name="partFactory">composition part factory</param>
            <param name="parameters">composition parameters</param>
            <returns>roolback object</returns>
        </member>
        <member name="M:Genome.Composition.ICompositionManager.AttachPart(System.Object,System.Object,System.Type)">
            <summary>
            Attaches a composition part to object
            </summary>
            <param name="target">target object</param>
            <param name="part">composition part</param>
            <param name="partRole">part role in composite object. Null is partRole == partType</param>
        </member>
        <member name="M:Genome.Composition.ICompositionManager.DetachPart(System.Object,System.Type)">
            <summary>
            Detaches a composition part from object by type
            </summary>
            <param name="target">target object</param>
            <param name="partRole">part role in composite object</param>
        </member>
        <member name="M:Genome.Composition.ICompositionManager.CreateCompositionObject(System.Object)">
            <summary>
            Creates a composition object for specified composition part
            </summary>
            <param name="futureCompositeObject">object that will be a composite object</param>
            <returns></returns>
        </member>
        <member name="M:Genome.Composition.ICompositionManager.GetCompositePart(System.Object,System.Type,System.Boolean)">
            <summary>
            Gets a part of composition object by tape
            </summary>
            <param name="compositionObject">target composition object</param>
            <param name="partRole">part role in composite object.</param>
            <param name="tryCastPartsIfRoleNotFound"></param>
            <returns>found part or NULL</returns>
        </member>
        <member name="M:Genome.Composition.ICompositionManager.GetCompositePartOrCreateAndAttach(System.Object,System.Type,System.Func{System.Object},System.Boolean)">
            <summary>
            Gets a part of composition object by tape. Crates and attach new part if not exists.
            </summary>
            <param name="compositionObject">target composition object</param>
            <param name="partRole">part role in composite object.</param>
            <param name="factoryMethod">new part factory method</param>
            <param name="tryCastPartsIfRoleNotFound"></param>
            <returns>found part or NULL</returns>
        </member>
        <member name="M:Genome.Composition.ICompositionManager.AssembleCompositeObject(Genome.Composition.CompositionPartSet)">
            <summary>
            Assembles a new composite object 
            </summary>
            <param name="partSet">composite parts</param>
            <returns>composite object</returns>
        </member>
        <member name="M:Genome.Composition.ICompositionManager.AssembleCompositeObject(System.Type,Genome.Composition.CompositionPartSet)">
            <summary>
            Assembles a new composite object 
            </summary>
            <param name="mainPart">main composition part</param>
            <param name="additionalPartSet">additional composite parts</param>
            <returns>composite object</returns>
        </member>
        <member name="M:Genome.Composition.ICompositionManager.DisassembleCompositeObject(System.Object)">
            <summary>
            Disassembles a composite object
            </summary>
            <param name="targetObject">target composite object</param>
            <returns>composition object parts</returns>
        </member>
        <member name="M:Genome.Composition.ICompositionManager.HasConveyorBindedPart(System.Type,System.Type)">
            <summary>
            Indicates that part type was attached to target type on factory level
            </summary>
            <param name="targetType">composition object type</param>
            <param name="partRole">part role in composite object</param>
        </member>
        <member name="M:Genome.Composition.ICompositionManager.AddReleaser(System.Object,System.IDisposable)">
            <summary>
            Adds an object releaser as composite part
            </summary>
            <param name="target">target object</param>
            <param name="releaser">target object releaser</param>
            <exception cref="T:System.ArgumentNullException">one of input parameters are equal to null</exception>
            <exception cref="T:System.InvalidOperationException">Disposable part already exists and it is not special part</exception>
        </member>
        <member name="T:Genome.Composition.AttachPartParameters">
            <summary>
            Contains parameters for attaching
            </summary>
        </member>
        <member name="P:Genome.Composition.AttachPartParameters.PartRole">
            <summary>
            Part role
            </summary>
        </member>
        <member name="P:Genome.Composition.AttachPartParameters.AttachingPriority">
            <summary>
            Attach processing priority
            </summary>
        </member>
        <member name="P:Genome.Composition.AttachPartParameters.IsOptional">
            <summary>
            Determines that part is optional
            </summary>
        </member>
        <member name="P:Genome.Composition.AttachPartParameters.NotWrap">
            <summary>
            Determines that 
            </summary>
        </member>
        <member name="T:Genome.Composition.CompositionPartSet">
            <summary>
            Composition object part set
            </summary>
        </member>
        <member name="P:Genome.Composition.CompositionPartSet.Parts">
            <summary>
            Parts
            </summary>
        </member>
        <member name="T:Genome.Composition.ICompositePart">
            <summary>
            Defines a composite object part
            </summary>
        </member>
        <member name="M:Genome.Composition.ICompositePart.GetCompositionPartBody">
            <summary>
            A part object
            </summary>
        </member>
        <member name="P:Genome.Composition.ICompositePart.Compositor">
            <summary>
            Composite object compositor
            </summary>
        </member>
        <member name="T:Genome.Composition.ICompositeObjectNotificationTarget">
            <summary>
            Notifies clients that composite object events was occurred
            </summary>
        </member>
        <member name="M:Genome.Composition.ICompositeObjectNotificationTarget.OnAttachPart(Genome.Composition.ICompositePart)">
            <summary>
            Calls when composition part has been attached to composition object
            </summary>
        </member>
        <member name="M:Genome.Composition.ICompositeObjectNotificationTarget.OnDetachPart(Genome.Composition.ICompositePart)">
            <summary>
            Calls when composition part has been detached to composition object
            </summary>
        </member>
        <member name="M:Genome.Composition.ICompositeObjectNotificationTarget.OnInitCompositeObject(Genome.Composition.Compositor)">
            <summary>
            Calls when composition object initializing
            </summary>
        </member>
        <member name="T:Ids.Composition.Manager">
            <summary>
            <see cref="F:Ids.Composition.Manager.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Composition.Manager.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Composition.Manager.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Genome.Factoring.IFactoryConveyorBuilder">
            <summary>
            Factory cinveyot object builder
            </summary>
        </member>
        <member name="M:Genome.Factoring.IFactoryConveyorBuilder.Build(System.Object)">
            <summary>
            Buildes an object
            </summary>
        </member>
        <member name="T:Genome.Factoring.IFactoryConveyorWrapper">
            <summary>
            Represent a factory conveyor wrapper
            </summary>
        </member>
        <member name="M:Genome.Factoring.IFactoryConveyorWrapper.Wrap(System.Type)">
            <summary>
            Wraps input type
            </summary>
        </member>
        <member name="T:Genome.Composition.Private.ObjectReleaserPart">
            <summary>
            Contains object <see cref="T:System.IDisposable"/> objects that will be disposed when composition object will disposing
            </summary>
        </member>
        <member name="M:Genome.Composition.Private.ObjectReleaserPart.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Composition.Private.ObjectReleaserPart"/>
            </summary>
        </member>
        <member name="P:Genome.Composition.Private.ObjectReleaserPart.Releasers">
            <summary>
            Object releasers
            </summary>
        </member>
        <member name="T:Genome.Factoring.FactoryConveyorItemDescription`1">
            <summary>
            Contains conveyor item and its meta data
            </summary>
        </member>
        <member name="M:Genome.Factoring.FactoryConveyorItemDescription`1.#ctor(`0)">
            <summary>
            Initalizes a new instance of <see cref="T:Genome.Factoring.FactoryConveyorItemDescription`1"/>
            </summary>
        </member>
        <member name="M:Genome.Factoring.FactoryConveyorItemDescription`1.#ctor(`0,Genome.Factoring.FactoryConveyorItemMetaData)">
            <summary>
            Initalizes a new instance of <see cref="T:Genome.Factoring.FactoryConveyorItemDescription`1"/>
            </summary>
        </member>
        <member name="P:Genome.Factoring.FactoryConveyorItemDescription`1.ConveyorItem">
            <summary>
            Gets a conveyor item
            </summary>
        </member>
        <member name="P:Genome.Factoring.FactoryConveyorItemDescription`1.MetaData">
            <summary>
            Gets conveypor item metadata
            </summary>
        </member>
        <member name="T:Genome.Configuration.ConfigHandlerAttribute">
            <summary>
            Defines a configuration handler
            </summary>
        </member>
        <member name="M:Genome.Configuration.ConfigHandlerAttribute.#ctor(System.String)">
            <summary>
            Initialize a new instance of <see cref="T:Genome.Configuration.ConfigHandlerAttribute"/>
            </summary>
            <param name="id">identifier of configuration handler</param>
        </member>
        <member name="T:Genome.Configuration.ConfigProcessing.ConfigElementNameToHandlerTranslator">
            <summary>
            Translates config element name to handler id
            </summary>
        </member>
        <member name="F:Genome.Configuration.ConfigProcessing.ConfigElementNameToHandlerTranslator.Instance">
            <summary>
            <see cref="T:Genome.Configuration.ConfigProcessing.ConfigElementNameToHandlerTranslator"/> singleton instance
            </summary>
        </member>
        <member name="M:Genome.Configuration.ConfigProcessing.ConfigElementNameToHandlerTranslator.RegisterAlias(Genome.Configuration.ConfigHandlerId,System.String,System.String)">
            <summary>
            Registers an alias for handlable config element
            </summary>
        </member>
        <member name="M:Genome.Configuration.ConfigProcessing.ConfigElementNameToHandlerTranslator.RegisterAlias(Genome.Configuration.ConfigHandlerId,System.Xml.Linq.XName)">
            <summary>
            Registers an alias for handlable config element
            </summary>
        </member>
        <member name="M:Genome.Configuration.ConfigProcessing.ConfigElementNameToHandlerTranslator.Translate(System.Xml.Linq.XName)">
            <summary>
            Translates an alement name to handler id
            </summary>
        </member>
        <member name="M:Genome.Configuration.ConfigProcessing.ConfigElementNameToHandlerTranslator.Translate(System.String,System.String)">
            <summary>
            Translates an alement name to handler id
            </summary>
        </member>
        <member name="T:Genome.Configuration.IConfigConstListener">
            <summary>
            Waits for constant definition
            </summary>
        </member>
        <member name="M:Genome.Configuration.IConfigConstListener.ConstantHasDefined(Genome.Configuration.Constant)">
            <summary>
            Notice about constant definition
            </summary>
        </member>
        <member name="T:Genome.Configuration.IConfigManager">
            <summary>
            Configuration manager
            </summary>
        </member>
        <member name="M:Genome.Configuration.IConfigManager.DefineConst(Genome.Configuration.ConstantId,System.Object)">
            <summary>
            Defines a configuration constant
            </summary>
            <remarks>An exception will be thrown if constant already defined</remarks>
            <param name="id">constant identifier</param>
            <param name="value">constant value</param>
        </member>
        <member name="M:Genome.Configuration.IConfigManager.GetConst(Genome.Configuration.ConstantId)">
            <summary>
            Gets a constant value. 
            </summary>
            <param name="id">constant identifier</param>
            <returns>A constant value. If constant is not defined the NULL will result</returns>
        </member>
        <member name="M:Genome.Configuration.IConfigManager.GetConstValueOrDefault``1(Genome.Configuration.ConstantId,``0)">
            <summary>
            Gets a constant value or default. 
            </summary>
            <param name="id">constant identifier</param>
            <param name="defaultValue">A default value if constant is not exists</param>
            <returns>A constant value. If constant is not defined the NULL will result</returns>
        </member>
        <member name="M:Genome.Configuration.IConfigManager.IsConstDefined(Genome.Configuration.ConstantId)">
            <summary>
            Checks the const definition
            </summary>
            <param name="id">constant identifier</param>
            <returns>definition factor</returns>
        </member>
        <member name="M:Genome.Configuration.IConfigManager.RegisterListener(Genome.Configuration.ConstantId,Genome.Configuration.IConfigConstListener)">
            <summary>
            Register a config constant listener
            </summary>
        </member>
        <member name="T:Genome.Configuration.Constant">
            <summary>
            A configuration constant
            </summary>
        </member>
        <member name="M:Genome.Configuration.Constant.#ctor(Genome.Configuration.ConstantId,System.Object)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Configuration.Constant"/>
            </summary>
            <param name="id">contant identifier</param>
            <param name="value">value</param>
        </member>
        <member name="P:Genome.Configuration.Constant.Id">
            <summary>
            Contant identifier
            </summary>
        </member>
        <member name="T:Ids.Configuration.Manager">
            <summary>
            <see cref="F:Ids.Configuration.Manager.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Configuration.Manager.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Configuration.Manager.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Configuration.AliasConfigHandler">
            <summary>
            <see cref="F:Ids.Configuration.AliasConfigHandler.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Configuration.AliasConfigHandler.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Configuration.AliasConfigHandler.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Configuration.ContentCategories.ConfigurationHandlers">
            <summary>
            <see cref="F:Ids.Configuration.ContentCategories.ConfigurationHandlers.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Configuration.ContentCategories.ConfigurationHandlers.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Configuration.ContentCategories.ConfigurationHandlers.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Configuration.ContentCategories.ValueModifiers">
            <summary>
            <see cref="F:Ids.Configuration.ContentCategories.ValueModifiers.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Configuration.ContentCategories.ValueModifiers.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Configuration.ContentCategories.ValueModifiers.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Genome.Configuration.WaitForConstAttribute">
            <summary>
            Specifies a constant that target object will waiting
            </summary>
        </member>
        <member name="M:Genome.Configuration.WaitForConstAttribute.#ctor(System.String)">
            <summary>
            Initalizes a new instnace of <see cref="T:Genome.Configuration.WaitForConstAttribute"/>
            </summary>
        </member>
        <member name="P:Genome.Configuration.WaitForConstAttribute.ConstId">
            <summary>
            Constant identifier
            </summary>
        </member>
        <member name="T:Genome.ConversionManagerExtensions">
            <summary>
            Extensions for <see cref="T:Genome.Conversion.IConversionManager"/>
            </summary>
        </member>
        <member name="M:Genome.ConversionManagerExtensions.Convert``2(Genome.Conversion.IConversionManager,``0,Genome.Conversion.ConverterId,System.Boolean)">
            <summary>
            Creates conversion for input value to value of specified type
            </summary>
            <param name="manager">Conversion manager</param>
            <param name="input">input value</param>
            <param name="converterId">converter identifier</param>
            <param name="throwIfCant">throws an exception if can not convert</param>
        </member>
        <member name="M:Genome.ConversionManagerExtensions.Convert(Genome.Conversion.IConversionManager,System.Object,Genome.Conversion.ConverterId,System.Boolean)">
            <summary>
            Creates conversion for input value to value by specified converter
            </summary>
            <param name="manager">Conversion manager</param>
            <param name="input">input value</param>
            <param name="converterId">converter identifier</param>
            <param name="throwIfCant">throws an exception if can not convert</param>
        </member>
        <member name="M:Genome.ConversionManagerExtensions.Convert(Genome.Conversion.IConversionManager,System.Object,System.Type,System.Type,System.Boolean)">
            <summary>
            Creates conversion for input value to value by specified converter
            </summary>
            <param name="manager">Conversion manager</param>
            <param name="input">input value</param>
            <param name="outputType">conversion result type</param>
            <param name="inputType">input parameter type</param>
            <param name="throwIfCant">throws an exception if can not convert</param>
        </member>
        <member name="M:Genome.ConversionManagerExtensions.GetConverter``2(Genome.Conversion.IConversionManager,System.Boolean)">
            <summary>
            Gets default converter for conversion from 'input' type to 'output' type
            </summary>
        </member>
        <member name="T:Genome.Conversion.ValueConverter`2">
            <summary>
            Base implementation of <see cref="T:Genome.Conversion.IValueConverter"/>
            </summary>
        </member>
        <member name="T:Genome.Conversion.IValueConverter">
            <summary>
            Provides conversion 
            </summary>
        </member>
        <member name="M:Genome.Conversion.IValueConverter.Convert(System.Object)">
            <summary>
            Converts a value
            </summary>
        </member>
        <member name="P:Genome.Conversion.IValueConverter.InputType">
            <summary>
            Converts from type
            </summary>
        </member>
        <member name="P:Genome.Conversion.IValueConverter.OutType">
            <summary>
            Converts to type
            </summary>
        </member>
        <member name="P:Genome.Conversion.IValueConverter.IsSlow">
            <summary>
            Means that load process work for long time
            </summary>
        </member>
        <member name="P:Genome.Conversion.IValueConverter.IsDefault">
            <summary>
            Means that the converter in default converter for that types
            </summary>
        </member>
        <member name="P:Genome.Conversion.IValueConverter.Name">
            <summary>
            Content type name that the loader expected
            </summary>
        </member>
        <member name="T:Genome.Conversion.IConversionManager">
            <summary>
            Allow to coonvert values
            </summary>
        </member>
        <member name="M:Genome.Conversion.IConversionManager.CreateConversion``2(``0,Genome.Conversion.ConverterId,System.Boolean)">
            <summary>
            Creates conversion for input value to value of specified type
            </summary>
            <param name="input">input value</param>
            <param name="converterId">converter identifier</param>
            <param name="throwIfFail">Frow an exception if converte not found</param>
        </member>
        <member name="M:Genome.Conversion.IConversionManager.CreateConversion(System.Object,Genome.Conversion.ConverterId,System.Boolean)">
            <summary>
            Creates conversion for input value to value by specified converter
            </summary>
            <param name="input">input value</param>
            <param name="converterId">converter identifier</param>
            <param name="throwIfFail">Frow an exception if converte not found</param>
        </member>
        <member name="M:Genome.Conversion.IConversionManager.CreateConversion(System.Object,System.Type,System.Type,System.Boolean)">
            <summary>
            Creates conversion for input value to value by specified converter
            </summary>
            <param name="input">input value</param>
            <param name="outputType">conversion result type</param>
            <param name="inputType">input parameter type</param>
            <param name="throwIfFail">Frow an exception if converte not found</param>
        </member>
        <member name="M:Genome.Conversion.IConversionManager.GetConverterId(System.String)">
            <summary>
            Gets converter id from string identifier or name
            </summary>
        </member>
        <member name="M:Genome.Conversion.IConversionManager.GetConverter(System.Type,System.Type,System.Boolean)">
            <summary>
            Gets default converter for conversion from 'input' type to 'output' type
            </summary>
        </member>
        <member name="T:Ids.Conversion.Manager">
            <summary>
            <see cref="F:Ids.Conversion.Manager.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Conversion.Manager.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Conversion.Manager.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Conversion.Converters.Base64ToBites">
            <summary>
            <see cref="F:Ids.Conversion.Converters.Base64ToBites.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Conversion.Converters.Base64ToBites.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Conversion.Converters.Base64ToBites.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Conversion.Converters.StringToString">
            <summary>
            <see cref="F:Ids.Conversion.Converters.StringToString.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Conversion.Converters.StringToString.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Conversion.Converters.StringToString.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Conversion.Converters.LocalFileToBites">
            <summary>
            <see cref="F:Ids.Conversion.Converters.LocalFileToBites.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Conversion.Converters.LocalFileToBites.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Conversion.Converters.LocalFileToBites.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Conversion.Converters.StringToInt32">
            <summary>
            <see cref="F:Ids.Conversion.Converters.StringToInt32.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Conversion.Converters.StringToInt32.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Conversion.Converters.StringToInt32.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Conversion.Converters.StringToGuid">
            <summary>
            <see cref="F:Ids.Conversion.Converters.StringToGuid.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Conversion.Converters.StringToGuid.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Conversion.Converters.StringToGuid.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Conversion.Converters.StringToInt64">
            <summary>
            <see cref="F:Ids.Conversion.Converters.StringToInt64.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Conversion.Converters.StringToInt64.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Conversion.Converters.StringToInt64.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Conversion.Converters.StringToBool">
            <summary>
            <see cref="F:Ids.Conversion.Converters.StringToBool.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Conversion.Converters.StringToBool.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Conversion.Converters.StringToBool.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Conversion.Converters.StringToTimeSpan">
            <summary>
            <see cref="F:Ids.Conversion.Converters.StringToTimeSpan.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Conversion.Converters.StringToTimeSpan.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Conversion.Converters.StringToTimeSpan.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Conversion.Converters.StringToFloat">
            <summary>
            <see cref="F:Ids.Conversion.Converters.StringToFloat.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Conversion.Converters.StringToFloat.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Conversion.Converters.StringToFloat.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Conversion.ContentCategories.Converters">
            <summary>
            <see cref="F:Ids.Conversion.ContentCategories.Converters.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Conversion.ContentCategories.Converters.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Conversion.ContentCategories.Converters.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Genome.Conversion.IConversion">
            <summary>
            Represent a conversion
            </summary>
        </member>
        <member name="M:Genome.Conversion.IConversion.Process">
            <summary>
            Processes conversion
            </summary>
        </member>
        <member name="P:Genome.Conversion.IConversion.IsSlow">
            <summary>
            Means that conversion process is slowly
            </summary>
        </member>
        <member name="T:Genome.Conversion.Conversion">
            <summary>
            Provides conversion functionallity
            </summary>
        </member>
        <member name="M:Genome.Conversion.Conversion.#ctor(System.Object,Genome.Conversion.IValueConverter)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Conversion.Conversion"/>
            </summary>
        </member>
        <member name="T:Genome.Conversion.Conversion`1">
            <summary>
            Provides conversion functionallity
            </summary>
        </member>
        <member name="M:Genome.Conversion.Conversion`1.#ctor(System.Object,Genome.Conversion.IValueConverter)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Conversion.Conversion`1"/>
            </summary>
        </member>
        <member name="T:Genome.Conversion.ValueConverterAttribute">
            <summary>
            Determines that the target class is a Value converter
            </summary>
        </member>
        <member name="M:Genome.Conversion.ValueConverterAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Conversion.ValueConverterAttribute"/>
            </summary>
            <param name="id">loader identifier</param>
        </member>
        <member name="T:Genome.AppManagement.CoreInitParams.ApplicationIdAttribute">
            <summary>
            Specifies application identifier. Constnat : <see cref="T:Ids.Application.Constants.ApplicationId"/>
            </summary>
        </member>
        <member name="M:Genome.AppManagement.CoreInitParams.ApplicationIdAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.AppManagement.CoreInitParams.ApplicationIdAttribute"/>
            </summary>
        </member>
        <member name="T:Genome.AppManagement.CoreInitParams.SelectAppControllerAttribute">
            <summary>
            Specifies application controller identifier. Constnat : <see cref="T:Ids.Application.Constants.AppController"/>
            </summary>
        </member>
        <member name="M:Genome.AppManagement.CoreInitParams.SelectAppControllerAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.AppManagement.CoreInitParams.SelectAppControllerAttribute"/>
            </summary>
        </member>
        <member name="T:Genome.AppManagement.CoreInitParams.EmbeddedIconResourcePathAttribute">
            <summary>
            Specifies app icon. Constnat : <see cref="T:Ids.Application.Constants.EmbeddedIconResourcePath"/>
            </summary>
        </member>
        <member name="M:Genome.AppManagement.CoreInitParams.EmbeddedIconResourcePathAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.AppManagement.CoreInitParams.EmbeddedIconResourcePathAttribute"/>
            </summary>
        </member>
        <member name="T:Genome.AppManagement.CoreInitParams.AppFriendlyNameAttribute">
            <summary>
            Specifies an application friendly name. Constnat : <see cref="T:Ids.Application.Constants.FriendlyName"/>
            </summary>
        </member>
        <member name="M:Genome.AppManagement.CoreInitParams.AppFriendlyNameAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.AppManagement.CoreInitParams.AppFriendlyNameAttribute"/>
            </summary>
        </member>
        <member name="T:Genome.AppManagement.CoreInitParams.IsUnitTestAttribute">
            <summary>
            Specifies that application is unit test. Constant: <see cref="T:Ids.Application.Constants.IsUnitTest"/>
            </summary>
        </member>
        <member name="M:Genome.AppManagement.CoreInitParams.IsUnitTestAttribute.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Genome.AppManagement.CoreInitParams.IsUnitTestAttribute"/>
            </summary>
        </member>
        <member name="T:Genome.CoreInitParameters">
            <summary>
            Global application parameters
            </summary>
        </member>
        <member name="P:Genome.CoreInitParameters.ApplicationId">
            <summary>
            Deployed application identifier
            </summary>
        </member>
        <member name="P:Genome.CoreInitParameters.ApplicationClassId">
            <summary>
            Application class identifier
            </summary>
        </member>
        <member name="P:Genome.CoreInitParameters.AppFriendlyName">
            <summary>
            Application fiendly name
            </summary>
        </member>
        <member name="P:Genome.CoreInitParameters.EmbeddedIconResourcePath">
            <summary>
            Main window icon resource id
            </summary>
        </member>
        <member name="P:Genome.CoreInitParameters.AppController">
            <summary>
            Get or sets application controller identifier
            </summary>
        </member>
        <member name="P:Genome.CoreInitParameters.IsUnitTest">
            <summary>
            Get or sets that application is unit test
            </summary>
        </member>
        <member name="T:Ids.Application.Constants.ApplicationId">
            <summary>
            <see cref="F:Ids.Application.Constants.ApplicationId.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Application.Constants.ApplicationId.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Application.Constants.ApplicationId.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Application.Constants.ApplicationClassId">
            <summary>
            <see cref="F:Ids.Application.Constants.ApplicationClassId.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Application.Constants.ApplicationClassId.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Application.Constants.ApplicationClassId.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Application.Constants.FriendlyName">
            <summary>
            <see cref="F:Ids.Application.Constants.FriendlyName.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Application.Constants.FriendlyName.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Application.Constants.FriendlyName.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Application.Constants.EmbeddedIconResourcePath">
            <summary>
            <see cref="F:Ids.Application.Constants.EmbeddedIconResourcePath.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Application.Constants.EmbeddedIconResourcePath.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Application.Constants.EmbeddedIconResourcePath.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Application.Constants.AppController">
            <summary>
            <see cref="F:Ids.Application.Constants.AppController.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Application.Constants.AppController.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Application.Constants.AppController.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Application.Constants.IsUnitTest">
            <summary>
            <see cref="F:Ids.Application.Constants.IsUnitTest.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Application.Constants.IsUnitTest.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Application.Constants.IsUnitTest.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Genome.Events.Event">
            <summary>
            Represent event 
            </summary>
        </member>
        <member name="M:Genome.Events.Event.#ctor(System.Guid)">
            <summary>
            Initializes a new instance <see cref="T:Genome.Events.Event"/>
            </summary>
        </member>
        <member name="E:Genome.Events.Event.Fired">
            <summary>
            Occures when event fired
            </summary>
        </member>
        <member name="P:Genome.Events.Event.Id">
            <summary>
            Event identifier
            </summary>
        </member>
        <member name="T:Genome.Events.EventFiredArgs">
            <summary>
            </summary>
        </member>
        <member name="M:Genome.Events.EventFiredArgs.#ctor(System.Object)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Events.EventFiredArgs"/>
            </summary>
            <param name="argument">event argument</param>
        </member>
        <member name="P:Genome.Events.EventFiredArgs.Argument">
            <summary>
            Event argument
            </summary>
        </member>
        <member name="T:Genome.EventManagerExtensions">
            <summary>
            Extensions for <see cref="T:Genome.Events.IEventManager"/>
            </summary>
        </member>
        <member name="M:Genome.EventManagerExtensions.Fire(Genome.Events.IEventManager,System.Guid,System.Object)">
            <summary>
            Fires an event
            </summary>
            <param name="eventManager">event manager</param>
            <param name="eventId">event identifier</param>
            <param name="argument">event parameter</param>
        </member>
        <member name="M:Genome.EventManagerExtensions.Subscribe(Genome.Events.IEventManager,System.Guid,System.Action{System.Guid,System.Object},System.Boolean)">
            <summary>
            Subscribes a specified delegate for an event
            </summary>
            <param name="manager">event manager</param>
            <param name="eventId">target event identifier</param>
            <param name="handler">event handler</param>
            <param name="autoUnsubscribe">A flag that means that handler will be unsubscribed after first call</param>
            <returns>rollback object that usibscribe a hendler when disposed</returns>
        </member>
        <member name="M:Genome.EventManagerExtensions.Subscribe(Genome.Events.IEventManager,System.Guid,System.Action{System.Guid},System.Boolean)">
            <summary>
            Subscribes a specified delegate for an event
            </summary>
            <param name="manager">event manager</param>
            <param name="eventId">target event identifier</param>
            <param name="handler">event handler</param>
            <param name="autoUnsubscribe">A flag that means that handler will be unsubscribed after first call</param>
            <returns>rollback object that usibscribe a hendler when disposed</returns>
        </member>
        <member name="M:Genome.EventManagerExtensions.Subscribe(Genome.Events.IEventManager,System.Guid,Genome.Events.IEventHandler,System.Boolean)">
            <summary>
            Subscribes a specified delegate for an event
            </summary>
            <param name="manager">event manager</param>
            <param name="eventId">target event identifier</param>
            <param name="handler">event handler</param>
            <param name="autoUnsubscribe">A flag that means that handler will be unsubscribed after first call</param>
            <returns>rollback object that usibscribe a hendler when disposed</returns>
        </member>
        <member name="T:Ids.Events.Manager">
            <summary>
            <see cref="F:Ids.Events.Manager.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Events.Manager.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Events.Manager.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Genome.Events.IEventManager">
            <summary>
            A common place to manage global events
            </summary>
        </member>
        <member name="P:Genome.Events.IEventManager.Item(System.Guid)">
            <summary>
            Get event by identifier
            </summary>
            <param name="eventId"></param>
        </member>
        <member name="T:Genome.Events.IEventHandler">
            <summary>
            Interface of global event handler
            </summary>
        </member>
        <member name="M:Genome.Events.IEventHandler.HandleEvent(System.Guid,System.Object)">
            <summary>
            Handles a global event
            </summary>
            <param name="eventId">event identifier</param>
            <param name="arg">global event argument</param>
        </member>
        <member name="T:Genome.Events.SubscribeToEventAttribute">
            <summary>
            Defines an event that every instance of marked class must handle
            </summary>
        </member>
        <member name="M:Genome.Events.SubscribeToEventAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Events.SubscribeToEventAttribute"/>
            </summary>
            <param name="eventId">target event identifier</param>
        </member>
        <member name="P:Genome.Events.SubscribeToEventAttribute.EventId">
            <summary>
            Target event identifier
            </summary>
        </member>
        <member name="P:Genome.Events.SubscribeToEventAttribute.UnsubscribeAfter">
            <summary>
            Unsubscribe a handler after fist call
            </summary>
        </member>
        <member name="T:Genome.Factoring.FactoryBehaviorAttribute">
            <summary>
            Specifies factoring behavior
            </summary>
        </member>
        <member name="M:Genome.Factoring.FactoryBehaviorAttribute.#ctor(System.Type,System.Boolean)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Factoring.FactoryBehaviorAttribute"/>
            </summary>
            <param name="factoryConveyorType">overriding factory conveyor</param>
            <param name="merge">specifies that need to merge overridin conveyor with original coonveyor</param>
        </member>
        <member name="P:Genome.Factoring.FactoryBehaviorAttribute.FactoryConveyorType">
            <summary>
            Overriding factory conveyor
            </summary>
        </member>
        <member name="P:Genome.Factoring.FactoryBehaviorAttribute.Merge">
            <summary>
            Specifies that need to merge overridin conveyor with original coonveyor
            </summary>
        </member>
        <member name="T:Genome.Factoring.FactoryCategoryAttribute">
            <summary>
            Defines default factory category identifier for target type
            </summary>
        </member>
        <member name="M:Genome.Factoring.FactoryCategoryAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Factoring.FactoryCategoryAttribute"/>
            </summary>
            <param name="factoryCtegory">factory category identifier</param>
        </member>
        <member name="P:Genome.Factoring.FactoryCategoryAttribute.FactoryCtegory">
            <summary>
            Factory category identifier 
            </summary>
        </member>
        <member name="T:Genome.Factoring.FactoryConveyorItemMetaData">
            <summary>
            Additiona information about conveyor item
            </summary>
        </member>
        <member name="M:Genome.Factoring.FactoryConveyorItemMetaData.#ctor(System.Guid,Genome.Priority,System.Boolean)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Factoring.FactoryConveyorItemMetaData"/>
            </summary>
        </member>
        <member name="P:Genome.Factoring.FactoryConveyorItemMetaData.Id">
            <summary>
            Item identifier. Is optional.
            </summary>
        </member>
        <member name="P:Genome.Factoring.FactoryConveyorItemMetaData.ProcessPriority">
            <summary>
            Using priority
            </summary>
        </member>
        <member name="P:Genome.Factoring.FactoryConveyorItemMetaData.IsOptional">
            <summary>
            Determines that processor should work out fine
            </summary>
        </member>
        <member name="T:Genome.Factoring.ConveyorItemCollection`1">
            <summary>
            Contains factory processors
            </summary>
        </member>
        <member name="M:Genome.Factoring.ConveyorItemCollection`1.AddIfSameIsNotExists(`0)">
            <summary>
            Adds a processor description if the same processor was not added
            </summary>
        </member>
        <member name="M:Genome.Factoring.ConveyorItemCollection`1.AddIfSameIsNotExists(Genome.Factoring.FactoryConveyorItemDescription{`0})">
            <summary>
            Adds a processor description if the same processor was not added
            </summary>
        </member>
        <member name="M:Genome.Factoring.ConveyorItemCollection`1.SameExists(Genome.Factoring.FactoryConveyorItemDescription{`0})">
            <summary>
            Check if the same item exists
            </summary>
        </member>
        <member name="M:Genome.Factoring.ConveyorItemCollection`1.RemoveById(System.Guid)">
            <summary>
            Removes item by identifier
            </summary>
        </member>
        <member name="T:Genome.Factoring.FactoryConveyor">
            <summary>
            Core factory conveyor
            </summary>
        </member>
        <member name="M:Genome.Factoring.FactoryConveyor.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Genome.Factoring.FactoryConveyor.Create(System.Type,System.Object[])">
            <summary>
            Creates an instace and process it
            </summary>
        </member>
        <member name="M:Genome.Factoring.FactoryConveyor.ReleaseInstance(System.Object)">
            <summary>
            Releases an instance
            </summary>
            <param name="instance">An instance for release</param>
        </member>
        <member name="M:Genome.Factoring.FactoryConveyor.CopyTo(Genome.Factoring.FactoryConveyor)">
            <summary>
            Copies state to other conveyor
            </summary>
        </member>
        <member name="P:Genome.Factoring.FactoryConveyor.Wrappers">
            <summary>
            Objects which wrap source type
            </summary>
        </member>
        <member name="P:Genome.Factoring.FactoryConveyor.Builders">
            <summary>
            Objects which build created instance
            </summary>
        </member>
        <member name="P:Genome.Factoring.FactoryConveyor.Initializers">
            <summary>
            Objects which initialize created instance
            </summary>
        </member>
        <member name="P:Genome.Factoring.FactoryConveyor.Releasers">
            <summary>
            Objects which will release an instance
            </summary>
        </member>
        <member name="T:Genome.FactoryConveyorExtensions">
            <summary>
            Extensions for <see cref="T:Genome.Factoring.FactoryConveyor"/>
            </summary>
        </member>
        <member name="M:Genome.FactoryConveyorExtensions.AddFactoryConveyorItem(Genome.Factoring.FactoryConveyor,Genome.Factoring.FactoryConveyorItemDescription{Genome.Factoring.IFactoryConveyorWrapper})">
            <summary>
            Adds a factory conveyor item if the same is not exists
            </summary>
        </member>
        <member name="M:Genome.FactoryConveyorExtensions.AddFactoryConveyorItem(Genome.Factoring.FactoryConveyor,Genome.Factoring.FactoryConveyorItemDescription{Genome.Factoring.IFactoryConveyorBuilder})">
            <summary>
            <seealso cref="M:Genome.FactoryConveyorExtensions.AddFactoryConveyorItem(Genome.Factoring.FactoryConveyor,Genome.Factoring.FactoryConveyorItemDescription{Genome.Factoring.IFactoryConveyorWrapper})"/>
            </summary>
        </member>
        <member name="M:Genome.FactoryConveyorExtensions.AddFactoryConveyorItem(Genome.Factoring.FactoryConveyor,Genome.Factoring.FactoryConveyorItemDescription{Genome.Factoring.IFactoryConveyorInitializer})">
            <summary>
            <seealso cref="M:Genome.FactoryConveyorExtensions.AddFactoryConveyorItem(Genome.Factoring.FactoryConveyor,Genome.Factoring.FactoryConveyorItemDescription{Genome.Factoring.IFactoryConveyorWrapper})"/>
            </summary>
        </member>
        <member name="M:Genome.FactoryConveyorExtensions.AddFactoryConveyorItem(Genome.Factoring.FactoryConveyor,Genome.Factoring.FactoryConveyorItemDescription{Genome.Factoring.IFactoryConveyorReleaser})">
            <summary>
            <seealso cref="M:Genome.FactoryConveyorExtensions.AddFactoryConveyorItem(Genome.Factoring.FactoryConveyor,Genome.Factoring.FactoryConveyorItemDescription{Genome.Factoring.IFactoryConveyorWrapper})"/>
            </summary>
        </member>
        <member name="M:Genome.FactoryConveyorExtensions.AddFactoryConveyorItem(Genome.Factoring.FactoryConveyor,Genome.Factoring.IFactoryConveyorItem)">
            <summary>
            Adds a factory conveyor item if the same is not exists
            </summary>
        </member>
        <member name="M:Genome.FactoryConveyorExtensions.SameExists(Genome.Factoring.FactoryConveyor,Genome.Factoring.FactoryConveyorItemDescription{Genome.Factoring.IFactoryConveyorWrapper})">
            <summary>
            Check if the same item exists
            </summary>
        </member>
        <member name="M:Genome.FactoryConveyorExtensions.SameExists(Genome.Factoring.FactoryConveyor,Genome.Factoring.FactoryConveyorItemDescription{Genome.Factoring.IFactoryConveyorBuilder})">
            <summary>
            <seealso cref="M:Genome.FactoryConveyorExtensions.SameExists(Genome.Factoring.FactoryConveyor,Genome.Factoring.FactoryConveyorItemDescription{Genome.Factoring.IFactoryConveyorWrapper})"/>
            </summary>
        </member>
        <member name="M:Genome.FactoryConveyorExtensions.SameExists(Genome.Factoring.FactoryConveyor,Genome.Factoring.FactoryConveyorItemDescription{Genome.Factoring.IFactoryConveyorInitializer})">
            <summary>
            <seealso cref="M:Genome.FactoryConveyorExtensions.SameExists(Genome.Factoring.FactoryConveyor,Genome.Factoring.FactoryConveyorItemDescription{Genome.Factoring.IFactoryConveyorWrapper})"/>
            </summary>
        </member>
        <member name="M:Genome.FactoryConveyorExtensions.SameExists(Genome.Factoring.FactoryConveyor,Genome.Factoring.FactoryConveyorItemDescription{Genome.Factoring.IFactoryConveyorReleaser})">
            <summary>
            <seealso cref="M:Genome.FactoryConveyorExtensions.SameExists(Genome.Factoring.FactoryConveyor,Genome.Factoring.FactoryConveyorItemDescription{Genome.Factoring.IFactoryConveyorWrapper})"/>
            </summary>
        </member>
        <member name="M:Genome.FactoryConveyorExtensions.RemoveItem(Genome.Factoring.FactoryConveyor,System.Guid)">
            <summary>
            Removes factory conveyor item from conveyor
            </summary>
        </member>
        <member name="T:Genome.Factoring.FactoryTypeNotFoundException">
            <summary>
            Throw when factory type not found
            </summary>
        </member>
        <member name="M:Genome.Factoring.FactoryTypeNotFoundException.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Factoring.FactoryTypeNotFoundException"/>
            </summary>
        </member>
        <member name="M:Genome.Factoring.FactoryTypeNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Factoring.FactoryTypeNotFoundException"/>
            </summary>
        </member>
        <member name="M:Genome.Factoring.FactoryTypeNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Factoring.FactoryTypeNotFoundException"/>
            </summary>
        </member>
        <member name="T:Genome.Factoring.ICoreFactory">
            <summary>
            Core factory interface
            </summary>
        </member>
        <member name="M:Genome.Factoring.ICoreFactory.GetConveyor(System.Type)">
            <summary>
            Retrieve factory conveyor by target type
            </summary>
            <param name="targetType">type which conveyor need return</param>
            <returns>found conveyor</returns>
        </member>
        <member name="M:Genome.Factoring.ICoreFactory.SetConveyor(Genome.Factoring.FactoryConveyor,System.Type)">
            <summary>
            Sets factory conveyor for specified type
            </summary>
        </member>
        <member name="M:Genome.Factoring.ICoreFactory.Create``1(System.Object[])">
            <summary>
            Create generic type specified instance
            </summary>
            <typeparam name="T">type which instance will be created</typeparam>
            <param name="parameters">constructor parameters</param>
            <returns>created object</returns>
        </member>
        <member name="M:Genome.Factoring.ICoreFactory.Create(System.Type,System.Object[])">
            <summary>
            Create argument type specified instance 
            </summary>
            <typeparam name="T">type to reduce</typeparam>
            <param name="factoryType">type which instance will be created</param>
            <param name="parameters">constructor parameters</param>
            <returns>created object</returns>
        </member>
        <member name="M:Genome.Factoring.ICoreFactory.Create(System.Type,Genome.Factoring.FactoryConveyor,System.Object[])">
            <summary>
            Create argument type specified instance 
            </summary>
            <typeparam name="T">type to reduce</typeparam>
            <param name="factoryType">type which instance will be created</param>
            <param name="conveyor">conveyor that define creation process</param>
            <param name="parameters">constructor parameters</param>
            <returns>created object</returns>
        </member>
        <member name="M:Genome.Factoring.ICoreFactory.Create(Genome.ObjectId,System.Object[])">
            <summary>
            Create registered type specified instance 
            </summary>
            <param name="factoryId">registry factory type identifier</param>
            <param name="parameters">constructor parameters</param>
            <returns>created object</returns>
        </member>
        <member name="M:Genome.Factoring.ICoreFactory.Create(Genome.Registry.RegistryId,System.Object[])">
            <summary>
            Create registered type specified instance 
            </summary>
            <typeparam name="T">type which instance will be created</typeparam>
            <param name="factoryId">registry factory type identifier</param>
            <param name="parameters">constructor parameters</param>
            <returns>created object</returns>
        </member>
        <member name="M:Genome.Factoring.ICoreFactory.Initialize(System.Object)">
            <summary>
            Initialize object
            </summary>
            <param name="target">object to initialize</param>
        </member>
        <member name="M:Genome.Factoring.ICoreFactory.Release(System.Object)">
            <summary>
            Release object
            </summary>
            <param name="target">object to release</param>
        </member>
        <member name="T:Ids.Localization.Manager">
            <summary>
            <see cref="F:Ids.Localization.Manager.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Localization.Manager.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Localization.Manager.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Localization.ConfigHandler">
            <summary>
            <see cref="F:Ids.Localization.ConfigHandler.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Localization.ConfigHandler.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Localization.ConfigHandler.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Genome.Localization.ILocalizationManager">
            <summary>
            Provides ability to localize strings
            </summary>
        </member>
        <member name="T:Genome.Localization.LocalizableString">
            <summary>
            Echange value when localization has changed
            </summary>
        </member>
        <member name="T:Genome.ValueHolder`1">
            <summary>
            Holds specified value
            </summary>
            <typeparam name="T">value type</typeparam>
        </member>
        <member name="P:Genome.ValueHolder`1.Value">
            <summary>
            A value
            </summary>
        </member>
        <member name="T:Genome.IChangable">
            <summary>
            Represent changable object
            </summary>
        </member>
        <member name="E:Genome.IChangable.Changed">
            <summary>
            Occures when object has changed
            </summary>
        </member>
        <member name="M:Genome.Localization.LocalizableString.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Localization.LocalizableString"/>
            </summary>
        </member>
        <member name="M:Genome.Localization.LocalizableString.#ctor(Genome.StringId,System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Localization.LocalizableString"/>
            </summary>
        </member>
        <member name="T:Genome.Localization.LocalizationData">
            <summary>
            Contains localized items
            </summary>
        </member>
        <member name="M:Genome.Localization.LocalizationData.#ctor(System.Globalization.CultureInfo,System.Collections.Generic.IDictionary{Genome.StringId,System.String})">
            <summary>
            Initialize a new instance of <see cref="T:Genome.Localization.LocalizationData"/>
            </summary>
            <param name="culture">localization culture</param>
            <param name="strings">localized string dictionary</param>
        </member>
        <member name="P:Genome.Localization.LocalizationData.Culture">
            <summary>
            Localization culture
            </summary>
        </member>
        <member name="P:Genome.Localization.LocalizationData.Strings">
            <summary>
            Localized string dictionary
            </summary>
        </member>
        <member name="T:Genome.LocalizationExtensions">
            <summary>
            Extensions for localization
            </summary>
        </member>
        <member name="T:Genome.Logging.DslLogMessage">
            <summary>
            Domain specific language log message
            </summary>
        </member>
        <member name="M:Genome.Logging.DslLogMessage.When(System.String)">
            <summary>
            Sets when an log event occured
            </summary>
        </member>
        <member name="M:Genome.Logging.DslLogMessage.AndFactIs(System.String)">
            <summary>
            Determines a fact which occured
            </summary>
        </member>
        <member name="M:Genome.Logging.DslLogMessage.AndFactIs(System.String,System.Object)">
            <summary>
            Determines a fact which occured
            </summary>
        </member>
        <member name="M:Genome.Logging.DslLogMessage.AndBecauseOf(System.String)">
            <summary>
            Determines a fact which occured
            </summary>
        </member>
        <member name="M:Genome.Logging.DslLogMessage.AndBecauseOf(System.Exception)">
            <summary>
            Determines a fact which occured
            </summary>
        </member>
        <member name="M:Genome.Logging.DslLogMessage.Write">
            <summary>
            Writes log messge
            </summary>
        </member>
        <member name="M:Genome.Logging.DslLogMessage.Create">
            <summary>
            Returns log messge
            </summary>
        </member>
        <member name="T:Genome.Logging.RawDslLogMessage">
            <summary>
            Raw Dsl log message
            </summary>
        </member>
        <member name="M:Genome.Logging.RawDslLogMessage.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Logging.DslLogMessage"/>
            </summary>
        </member>
        <member name="M:Genome.Logging.RawDslLogMessage.Tech(System.String)">
            <summary>
            Specifies that some technological act has occured
            </summary>
        </member>
        <member name="M:Genome.Logging.RawDslLogMessage.Act(System.String)">
            <summary>
            Specifies that some act has occured
            </summary>
        </member>
        <member name="M:Genome.Logging.RawDslLogMessage.Dangerous(System.String)">
            <summary>
            Specifies that some dangerous act has occured
            </summary>
        </member>
        <member name="M:Genome.Logging.RawDslLogMessage.Dangerous(System.Exception)">
            <summary>
            Specifies that some dangerous act has occured
            </summary>
        </member>
        <member name="M:Genome.Logging.RawDslLogMessage.Error(System.String)">
            <summary>
            Specifies that error has occured
            </summary>
        </member>
        <member name="M:Genome.Logging.RawDslLogMessage.Error(System.Exception)">
            <summary>
            Specifies that error has occured
            </summary>
        </member>
        <member name="M:Genome.Logging.RawDslLogMessage.Crush(System.String)">
            <summary>
            Specifies that fatal error has occured
            </summary>
        </member>
        <member name="T:Genome.Logging.ErrorLogMessage">
            <summary>
            Contains information about error
            </summary>
        </member>
        <member name="T:Genome.Logging.ErrorLogMessageBase">
            <summary>
            Contains information about error
            </summary>
        </member>
        <member name="M:Genome.Logging.ErrorLogMessageBase.#ctor(System.Exception,Genome.Logging.LogMessageLevel,Genome.ObjectId)">
            <summary>
            Initializes a new ionstance of <see cref="T:Genome.Logging.ErrorLogMessage"/>
            </summary>
        </member>
        <member name="M:Genome.Logging.ErrorLogMessage.#ctor(System.Exception,Genome.ObjectId)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Logging.ErrorLogMessage"/>
            </summary>
        </member>
        <member name="T:Genome.Logging.WarningLogMessage">
            <summary>
            Contains information about low-level error
            </summary>
        </member>
        <member name="M:Genome.Logging.WarningLogMessage.#ctor(System.Exception,Genome.ObjectId)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Logging.WarningLogMessage"/>
            </summary>
        </member>
        <member name="T:Genome.Logging.FatalErrorLogMessage">
            <summary>
            Contains information about fatal error
            </summary>
        </member>
        <member name="M:Genome.Logging.FatalErrorLogMessage.#ctor(System.Exception,Genome.ObjectId)">
            <summary>
            Initializes a new ionstance of <see cref="T:Genome.Logging.FatalErrorLogMessage"/>
            </summary>
        </member>
        <member name="T:Ids.Logging.LogWritersConfigHandler">
            <summary>
            <see cref="F:Ids.Logging.LogWritersConfigHandler.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Logging.LogWritersConfigHandler.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Logging.LogWritersConfigHandler.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Logging.Constants.LogThreadIds">
            <summary>
            <see cref="F:Ids.Logging.Constants.LogThreadIds.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Logging.Constants.LogThreadIds.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Logging.Constants.LogThreadIds.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Logging.Constants.LogFileMaxSize">
            <summary>
            <see cref="F:Ids.Logging.Constants.LogFileMaxSize.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Logging.Constants.LogFileMaxSize.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Logging.Constants.LogFileMaxSize.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Logging.MetaKinds.LogWriter">
            <summary>
            <see cref="F:Ids.Logging.MetaKinds.LogWriter.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Logging.MetaKinds.LogWriter.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Logging.MetaKinds.LogWriter.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Logging.StorageTypes.LocalFile">
            <summary>
            <see cref="F:Ids.Logging.StorageTypes.LocalFile.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Logging.StorageTypes.LocalFile.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Logging.StorageTypes.LocalFile.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Logging.StorageTypes.Sql">
            <summary>
            <see cref="F:Ids.Logging.StorageTypes.Sql.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Logging.StorageTypes.Sql.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Logging.StorageTypes.Sql.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Logging.StorageTypes.Ftp">
            <summary>
            <see cref="F:Ids.Logging.StorageTypes.Ftp.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Logging.StorageTypes.Ftp.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Logging.StorageTypes.Ftp.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Logging.ContentCategories.LogReaders">
            <summary>
            <see cref="F:Ids.Logging.ContentCategories.LogReaders.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Logging.ContentCategories.LogReaders.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Logging.ContentCategories.LogReaders.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Logging.ContentCategories.LogWriters">
            <summary>
            <see cref="F:Ids.Logging.ContentCategories.LogWriters.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Logging.ContentCategories.LogWriters.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Logging.ContentCategories.LogWriters.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Logging.Contexts.Operation">
            <summary>
            <see cref="F:Ids.Logging.Contexts.Operation.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Logging.Contexts.Operation.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Logging.Contexts.Operation.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Logging.Contexts.Logging">
            <summary>
            <see cref="F:Ids.Logging.Contexts.Logging.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Logging.Contexts.Logging.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Logging.Contexts.Logging.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Logging.LogWriterTypes.Debug">
            <summary>
            <see cref="F:Ids.Logging.LogWriterTypes.Debug.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Logging.LogWriterTypes.Debug.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Logging.LogWriterTypes.Debug.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Logging.LogWriterTypes.Console">
            <summary>
            <see cref="F:Ids.Logging.LogWriterTypes.Console.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Logging.LogWriterTypes.Console.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Logging.LogWriterTypes.Console.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Logging.LogWriterTypes.InteractiveConsole">
            <summary>
            <see cref="F:Ids.Logging.LogWriterTypes.InteractiveConsole.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Logging.LogWriterTypes.InteractiveConsole.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Logging.LogWriterTypes.InteractiveConsole.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Logging.LogWriterTypes.BinaryFile">
            <summary>
            <see cref="F:Ids.Logging.LogWriterTypes.BinaryFile.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Logging.LogWriterTypes.BinaryFile.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Logging.LogWriterTypes.BinaryFile.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Logging.LogWriterTypes.TextFile">
            <summary>
            <see cref="F:Ids.Logging.LogWriterTypes.TextFile.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Logging.LogWriterTypes.TextFile.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Logging.LogWriterTypes.TextFile.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Logging.LogWriterTypes.Trace">
            <summary>
            <see cref="F:Ids.Logging.LogWriterTypes.Trace.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Logging.LogWriterTypes.Trace.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Logging.LogWriterTypes.Trace.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Logging.LogWriterTypes.System">
            <summary>
            <see cref="F:Ids.Logging.LogWriterTypes.System.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Logging.LogWriterTypes.System.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Logging.LogWriterTypes.System.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Logging.Manager">
            <summary>
            <see cref="F:Ids.Logging.Manager.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Logging.Manager.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Logging.Manager.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Genome.Logging.ILogger">
            <summary>
            Defines a core logger
            </summary>
        </member>
        <member name="M:Genome.Logging.ILogger.WriteLog(Genome.Logging.LogMessageBase)">
            <summary>
            Writes message to logging block
            </summary>
            <param name="logMessage">logging message</param>
        </member>
        <member name="P:Genome.Logging.ILogger.History">
            <summary>
            Log message history
            </summary>
        </member>
        <member name="T:Genome.Logging.ILogMessageFilterStrategy">
            <summary>
            Filter for sifting log messages
            </summary>
        </member>
        <member name="M:Genome.Logging.ILogMessageFilterStrategy.Verify(Genome.Logging.LogMessageBase)">
            <summary>
            Verifies a message 
            </summary>
            <param name="msg">target message</param>
            <returns>is verified</returns>
        </member>
        <member name="T:Genome.Logging.DefaultLogMessageFilter">
            <summary>
            default implementation of <see cref="T:Genome.Logging.ILogMessageFilterStrategy"/>
            </summary>
        </member>
        <member name="M:Genome.Logging.DefaultLogMessageFilter.#ctor(Genome.Logging.LogWriterFilter)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Logging.DefaultLogMessageFilter"/>
            </summary>
        </member>
        <member name="T:Genome.Logging.ILogManager">
            <summary>
            Defines a logging manager
            </summary>
        </member>
        <member name="M:Genome.Logging.ILogManager.RegisterWriter(Genome.Logging.Writers.LogWriter,Genome.Logging.ILogMessageFilterStrategy,Genome.ObjectId)">
            <summary>
            Registers a log writer
            </summary>
            <param name="writer">writer for registration</param>
            <param name="writerId">specified writer identifier</param>
            <param name="filteringStrategy">log message filtering stratagy</param>
            <returns>Identifier under that writer is registered</returns>
        </member>
        <member name="M:Genome.Logging.ILogManager.UnregisterWriter(Genome.ObjectId)">
            <summary>
            Unregisters writer
            </summary>
            <param name="writerId">writer identifier</param>
        </member>
        <member name="P:Genome.Logging.ILogManager.Writers">
            <summary>
            Gets a registered logging controllers
            </summary>
        </member>
        <member name="T:Genome.Log">
            <summary>
            Provides short access to Logger
            </summary>
        </member>
        <member name="M:Genome.Log.Debug(System.String)">
            <summary>
            Writes debug message
            </summary>
        </member>
        <member name="M:Genome.Log.Debug(System.String,System.Object)">
            <summary>
            Writes debug message
            </summary>
        </member>
        <member name="M:Genome.Log.Audit(System.String)">
            <summary>
            Writes audit message
            </summary>
        </member>
        <member name="M:Genome.Log.Warning(System.String)">
            <summary>
            Writes warning message
            </summary>
        </member>
        <member name="M:Genome.Log.Warning(System.Exception)">
            <summary>
            Writes warning message
            </summary>
        </member>
        <member name="M:Genome.Log.Error(System.String)">
            <summary>
            Writes error message
            </summary>
        </member>
        <member name="M:Genome.Log.Error(System.Exception)">
            <summary>
            Writes error message
            </summary>
        </member>
        <member name="M:Genome.Log.Fatal(System.Exception)">
            <summary>
            Writes fatal error message
            </summary>
        </member>
        <member name="M:Genome.Log.Occured">
            <summary>
            Call when some acts has occures and need to log it
            </summary>
        </member>
        <member name="T:Genome.Logging.LogInitParameters">
            <summary>
            Init parameters for logging block
            </summary>
        </member>
        <member name="P:Genome.Logging.LogInitParameters.LogThreads">
            <summary>
            Log thread names of identifiers
            </summary>
        </member>
        <member name="P:Genome.Logging.LogInitParameters.LogFileMaxSize">
            <summary>
            Log file max size
            </summary>
        </member>
        <member name="T:Genome.Logging.LogFilter">
            <summary>
            Contains log parameters for filtering
            </summary>
        </member>
        <member name="P:Genome.Logging.LogFilter.Levels">
            <summary>
            Message level
            </summary>
        </member>
        <member name="P:Genome.Logging.LogFilter.Senders">
            <summary>
            Possible message senders
            </summary>
        </member>
        <member name="P:Genome.Logging.LogFilter.MessageSearchStr">
            <summary>
            Message search string. 
            </summary>
        </member>
        <member name="T:Genome.Collections.ThreadSafeCollection`1">
            <summary>
            Collection which have a thread locker for provides thread safe working
            </summary>
        </member>
        <member name="T:Genome.Collections.IThreadSafeCollection">
            <summary>
            Defines a collection which have a thread locker for provides thread safe working
            </summary>
        </member>
        <member name="T:Genome.Collections.ILockable">
            <summary>
            Locable object
            </summary>
        </member>
        <member name="P:Genome.Collections.ILockable.Locker">
            <summary>
            Synchronization object
            </summary>
        </member>
        <member name="T:Genome.Collections.IThreadSafeCollection`1">
            <summary>
            Defines a generic collection which have a thread locker for provides thread safe working
            </summary>
        </member>
        <member name="M:Genome.Collections.ThreadSafeCollection`1.#ctor">
            <summary>
            Initializes new instance of ThreadSafeCollection that is empty
            </summary>
        </member>
        <member name="M:Genome.Collections.ThreadSafeCollection`1.#ctor(System.Collections.Generic.IList{`0})">
            <summary>
            Initializes new instance of ThreadSafeCollection as wrapper for the specified list
            </summary>
            <param name="list">list that is wrapped by the collection</param>
        </member>
        <member name="M:Genome.Collections.ThreadSafeCollection`1.RemoveAll(System.Func{System.Object,System.Boolean})">
            <summary>
            Removes all items that give a fit
            </summary>
        </member>
        <member name="T:Genome.Logging.LogMessage">
            <summary>
            Contains data for logging
            </summary>
        </member>
        <member name="M:Genome.Logging.LogMessage.#ctor(System.String,Genome.Logging.LogMessageLevel,System.DateTime,Genome.ObjectId)">
            <summary>
            Initializes a new instnace of <see cref="T:Genome.Logging.LogMessage"/>
            </summary>
            <param name="message">message content</param>
            <param name="time">accur time</param>
            <param name="level">message level</param>
            <param name="sender">sendrer identifier</param>
            <returns>created log message</returns>
        </member>
        <member name="M:Genome.Logging.LogMessage.#ctor(Genome.ObjectId,System.String,Genome.Logging.LogMessageLevel,System.DateTime,Genome.ObjectId)">
            <summary>
            Initializes a new instnace of <see cref="T:Genome.Logging.LogMessage"/>
            </summary>
            <param name="messageId">message identifier</param>
            <param name="message">message content</param>
            <param name="time">accur time</param>
            <param name="level">message level</param>
            <param name="sender">sendrer identifier</param>
            <returns>created log message</returns>
        </member>
        <member name="T:Genome.Logging.LogMessageAdditional">
            <summary>
            Contains log message additional information
            </summary>
        </member>
        <member name="T:Genome.Collections.ReadOnlyDictionary`2">
            <summary>
            Read only dictionary
            </summary>
            <typeparam name="TKey">key type</typeparam>
            <typeparam name="TVal">value type</typeparam>
        </member>
        <member name="M:Genome.Collections.ReadOnlyDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
            <summary>
            Initializes a new instnace of <see cref="T:Genome.Collections.ReadOnlyDictionary`2"/>
            </summary>
            <param name="dictionaryToWrap">dictionary which wrapped for read-only access</param>
        </member>
        <member name="M:Genome.Collections.ReadOnlyDictionary`2.ContainsKey(`0)">
            <summary>
            Determines whether the dictionary contains an element with specified key
            </summary>
            <param name="key">key</param>
            <returns>true if object found, otherwise - false</returns>
        </member>
        <member name="M:Genome.Collections.ReadOnlyDictionary`2.TryGetValue(`0,`1@)">
            <summary>
            Get the value associated with specified key
            </summary>
            <param name="key">key</param>
            <param name="value">found value</param>
            <returns>true if fount, otherwise - false</returns>
        </member>
        <member name="M:Genome.Collections.ReadOnlyDictionary`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Determines whether dictionary contains a specific value
            </summary>
            <param name="item">the object to locate in dictionary</param>
            <returns></returns>
        </member>
        <member name="M:Genome.Collections.ReadOnlyDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
            <summary>
            Copies the elements of the dictionary to <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index
            </summary>
            <param name="array"></param>
            <param name="arrayIndex"></param>
        </member>
        <member name="P:Genome.Collections.ReadOnlyDictionary`2.Keys">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.ICollection`1"/> of keys
            </summary>
        </member>
        <member name="P:Genome.Collections.ReadOnlyDictionary`2.Values">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.ICollection`1"/> of values
            </summary>
        </member>
        <member name="P:Genome.Collections.ReadOnlyDictionary`2.Item(`0)">
            <summary>
            Gets a value by specified key
            </summary>
            <param name="key">specified key</param>
        </member>
        <member name="M:Genome.Logging.LogMessageAdditional.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new isntance of <see cref="T:Genome.Logging.LogMessageAdditional"/>
            </summary>
        </member>
        <member name="T:Genome.Logging.LogMessageLevel">
            <summary>
            Logging message levels
            </summary>
        </member>
        <member name="F:Genome.Logging.LogMessageLevel.Undefined">
            <summary>
            Undefined level
            </summary>
        </member>
        <member name="F:Genome.Logging.LogMessageLevel.Debug">
            <summary>
            Debug information
            </summary>
        </member>
        <member name="F:Genome.Logging.LogMessageLevel.Audit">
            <summary>
            Audit
            </summary>
        </member>
        <member name="F:Genome.Logging.LogMessageLevel.Warning">
            <summary>
            Warning to situation that may lead to error
            </summary>
        </member>
        <member name="F:Genome.Logging.LogMessageLevel.Error">
            <summary>
            Error
            </summary>
        </member>
        <member name="F:Genome.Logging.LogMessageLevel.FatalError">
            <summary>
            Error leaded to application crush
            </summary>
        </member>
        <member name="F:Genome.Logging.LogMessageLevel.Attention">
            <summary>
            Attantion required message level
            </summary>
        </member>
        <member name="T:Genome.LogManagerExtensions">
            <summary>
            Extensions for <see cref="T:Genome.Logging.ILogManager"/>
            </summary>
        </member>
        <member name="M:Genome.LogManagerExtensions.RegisterWriter(Genome.Logging.ILogManager,Genome.Logging.Writers.LogWriter,Genome.Logging.LogMessageLevel,Genome.ObjectId)">
            <summary>
            Registers a log writer
            </summary>
            <param name="manager">log manager</param>
            <param name="writer">writer for registration</param>
            <param name="levels">log message levels</param>
            <param name="writerId">specified writer identifier</param>
            <returns>Identifier under that writer is registered</returns>
        </member>
        <member name="M:Genome.LogManagerExtensions.RegisterWriter(Genome.Logging.ILogManager,Genome.Logging.LogWriterId,Genome.Logging.LogMessageLevel,System.String,Genome.ObjectId)">
            <summary>
            Registers a log writer
            </summary>
            <param name="writerTypeId">writer type identifier</param>
            <param name="manager">log block manager</param>
            <param name="writerId">specified writer identifier</param>
            <param name="levels">log message levels</param>
            <param name="storageReference">storage reference string (file address , connection string, etc)</param>
            <returns>Identifier under that writer is registered</returns>
        </member>
        <member name="T:Genome.Logging.LogWriterFilter">
            <summary>
            Log filter for writers
            </summary>
        </member>
        <member name="M:Genome.Logging.LogWriterFilter.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Logging.LogWriterFilter"/>
            </summary>
        </member>
        <member name="P:Genome.Logging.LogWriterFilter.Begin">
            <summary>
            Begin time
            </summary>
        </member>
        <member name="P:Genome.Logging.LogWriterFilter.End">
            <summary>
            End time
            </summary>
        </member>
        <member name="T:Genome.Logging.LogWritersConfigurator">
            <summary>
            A configurator that loads info about logging writers
            </summary>
        </member>
        <member name="P:Genome.Logging.ConfigLogWriter.Levels">
            <summary>
            Message level
            </summary>
        </member>
        <member name="P:Genome.Logging.ConfigLogWriterStrategy.Begin">
            <summary>
            Begin time
            </summary>
        </member>
        <member name="P:Genome.Logging.ConfigLogWriterStrategy.End">
            <summary>
            End time
            </summary>
        </member>
        <member name="P:Genome.Logging.ConfigLogWriterStrategy.Levels">
            <summary>
            Message level
            </summary>
        </member>
        <member name="P:Genome.Logging.ConfigLogWriterStrategy.Senders">
            <summary>
            Possible message senders
            </summary>
        </member>
        <member name="P:Genome.Logging.ConfigLogWriterStrategy.MessageSearchStr">
            <summary>
            Message search string. 
            </summary>
        </member>
        <member name="T:Genome.Logging.LogWriterType">
            <summary>
            type of log writer
            </summary>
        </member>
        <member name="M:Genome.Logging.LogWriterType.Create(Genome.ObjectId,System.String)">
            <summary>
            Creates an instance of writer
            </summary>
        </member>
        <member name="P:Genome.Logging.LogWriterType.ConnectionStringRegex">
            <summary>
            Regex for storate connection string checking
            </summary>
        </member>
        <member name="P:Genome.Logging.LogWriterType.IsSynchronous">
            <summary>
            Flag of synchronicity
            </summary>
        </member>
        <member name="P:Genome.Logging.LogWriterType.IsConnectionStringRequired">
            <summary>
            Flag of requiring the storage connection string
            </summary>
        </member>
        <member name="T:Genome.Logging.OperationCtx">
            <summary>
            Sets or gets operation context
            </summary>
        </member>
        <member name="M:Genome.Logging.OperationCtx.#ctor(System.String)">
            <summary>
            initiaslizes a new instance of <see cref="T:Genome.Logging.OperationCtx"/>
            </summary>
            <param name="description">operation description</param>
        </member>
        <member name="T:Genome.Logging.LoggingCtx">
            <summary>
            Sets or gets operation context
            </summary>
        </member>
        <member name="M:Genome.Logging.LoggingCtx.#ctor">
            <summary>
            initiaslizes a new instance of <see cref="T:Genome.Logging.LoggingCtx"/>
            </summary>
        </member>
        <member name="T:Genome.Logging.LoggingCtx.Info">
            <summary>
            Logging additional info
            </summary>
        </member>
        <member name="T:Genome.Logging.WriteLogToAttribute">
            <summary>
            Determines log writer for using
            </summary>
        </member>
        <member name="M:Genome.Logging.WriteLogToAttribute.#ctor(System.String,Genome.Logging.LogMessageLevel)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Logging.WriteLogToAttribute"/>
            </summary>
        </member>
        <member name="M:Genome.Logging.WriteLogToAttribute.#ctor(System.Type,Genome.Logging.LogMessageLevel)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Logging.WriteLogToAttribute"/>
            </summary>
        </member>
        <member name="P:Genome.Logging.WriteLogToAttribute.Sender">
            <summary>
            Available sender identifier
            </summary>
        </member>
        <member name="P:Genome.Logging.WriteLogToAttribute.Sender2">
            <summary>
            Second available sender identifier
            </summary>
        </member>
        <member name="P:Genome.Logging.WriteLogToAttribute.Sender3">
            <summary>
            Third available sender identifier
            </summary>
        </member>
        <member name="P:Genome.Logging.WriteLogToAttribute.Sender4">
            <summary>
            Fourth available sender identifier
            </summary>
        </member>
        <member name="P:Genome.Logging.WriteLogToAttribute.Sender5">
            <summary>
            Fifth available sender identifier
            </summary>
        </member>
        <member name="P:Genome.Logging.WriteLogToAttribute.StorageReference">
            <summary>
            Target storage URI or name
            </summary>
        </member>
        <member name="T:Genome.Logging.WriteLogToTextFileAttribute">
            <summary>
            Determines text file log writer for logs
            </summary>
        </member>
        <member name="M:Genome.Logging.WriteLogToTextFileAttribute.#ctor(System.String,Genome.Logging.LogMessageLevel)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Logging.WriteLogToTextFileAttribute"/>
            </summary>
            <param name="filename">log filename</param>
            <param name="levels">message level filter</param>
        </member>
        <member name="T:Genome.Logging.WriteLogToBinFileAttribute">
            <summary>
            Determines binary file log writer for logs
            </summary>
        </member>
        <member name="M:Genome.Logging.WriteLogToBinFileAttribute.#ctor(System.String,Genome.Logging.LogMessageLevel)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Logging.WriteLogToBinFileAttribute"/>
            </summary>
            <param name="filename">log filename</param>
            <param name="levels">message level filter</param>
        </member>
        <member name="T:Genome.Logging.WriteLogToSystemLogAttribute">
            <summary>
            Determines block log writer for logs
            </summary>
        </member>
        <member name="M:Genome.Logging.WriteLogToSystemLogAttribute.#ctor(Genome.Logging.LogMessageLevel)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Logging.WriteLogToSystemLogAttribute"/>
            </summary>
            <param name="levels">message level filter</param>
        </member>
        <member name="T:Genome.Logging.WriteLogToDebugAttribute">
            <summary>
            Determines debug writer for logs
            </summary>
        </member>
        <member name="M:Genome.Logging.WriteLogToDebugAttribute.#ctor(Genome.Logging.LogMessageLevel)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Logging.WriteLogToDebugAttribute"/>
            </summary>
            <param name="levels">message level filter</param>
        </member>
        <member name="T:Genome.Logging.WriteLogToConsoleAttribute">
            <summary>
            Determines console writer for logs
            </summary>
        </member>
        <member name="M:Genome.Logging.WriteLogToConsoleAttribute.#ctor(Genome.Logging.LogMessageLevel)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Logging.WriteLogToConsoleAttribute"/>
            </summary>
            <param name="levels">message level filter</param>
        </member>
        <member name="T:Genome.Logging.WriteAttentionToAttribute">
            <summary>
            Determines log writer for attention log messages
            </summary>
        </member>
        <member name="M:Genome.Logging.WriteAttentionToAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Logging.WriteAttentionToAttribute"/>
            </summary>
            <param name="writerTypeId">writer type identifier</param>
        </member>
        <member name="M:Genome.Logging.WriteAttentionToAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Logging.WriteAttentionToAttribute"/>
            </summary>
            <param name="writerType">writer type identifier</param>
        </member>
        <member name="T:Genome.Logging.WriteAttentionToDebugAttribute">
            <summary>
            Determines debug log writer for attentions
            </summary>
        </member>
        <member name="M:Genome.Logging.WriteAttentionToDebugAttribute.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Logging.WriteAttentionToDebugAttribute"/>
            </summary>
        </member>
        <member name="T:Genome.Logging.WriteAttentionToConsoleAttribute">
            <summary>
            Determines console log writer for attentions
            </summary>
        </member>
        <member name="M:Genome.Logging.WriteAttentionToConsoleAttribute.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Logging.WriteAttentionToConsoleAttribute"/>
            </summary>
        </member>
        <member name="T:Genome.Logging.WriteAttentionToSystemLogAttribute">
            <summary>
            Determines block log log writer for attentions
            </summary>
        </member>
        <member name="M:Genome.Logging.WriteAttentionToSystemLogAttribute.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Logging.WriteAttentionToSystemLogAttribute"/>
            </summary>
        </member>
        <member name="T:Genome.Logging.WriteAttentionToTextFileAttribute">
            <summary>
            Determines text log writer for attentions
            </summary>
        </member>
        <member name="M:Genome.Logging.WriteAttentionToTextFileAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Logging.WriteAttentionToTextFileAttribute"/>
            </summary>
            <param name="filename">log filename</param>
        </member>
        <member name="T:Genome.Logging.WriteAttentionToBinFileAttribute">
            <summary>
            Determines binary log writer for attentions
            </summary>
        </member>
        <member name="M:Genome.Logging.WriteAttentionToBinFileAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Logging.WriteAttentionToBinFileAttribute"/>
            </summary>
            <param name="filename">log filename</param>
        </member>
        <member name="T:Genome.Logging.WriteAuditToAttribute">
            <summary>
            Determines log writer for audit log messages
            </summary>
        </member>
        <member name="M:Genome.Logging.WriteAuditToAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Logging.WriteAuditToAttribute"/>
            </summary>
            <param name="writerTypeId">writer type identifier</param>
        </member>
        <member name="M:Genome.Logging.WriteAuditToAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Logging.WriteAuditToAttribute"/>
            </summary>
            <param name="writerType">writer type identifier</param>
        </member>
        <member name="T:Genome.Logging.WriteAuditToDebugAttribute">
            <summary>
            Determines debug log writer for audit
            </summary>
        </member>
        <member name="M:Genome.Logging.WriteAuditToDebugAttribute.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Logging.WriteAuditToDebugAttribute"/>
            </summary>
        </member>
        <member name="T:Genome.Logging.WriteAuditToConsoleAttribute">
            <summary>
            Determines console log writer for audit
            </summary>
        </member>
        <member name="M:Genome.Logging.WriteAuditToConsoleAttribute.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Logging.WriteAuditToConsoleAttribute"/>
            </summary>
        </member>
        <member name="T:Genome.Logging.WriteAuditToSystemLogAttribute">
            <summary>
            Determines block log log writer for audit
            </summary>
        </member>
        <member name="M:Genome.Logging.WriteAuditToSystemLogAttribute.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Logging.WriteAuditToSystemLogAttribute"/>
            </summary>
        </member>
        <member name="T:Genome.Logging.WriteAuditToTextFileAttribute">
            <summary>
            Determines text log writer for audit
            </summary>
        </member>
        <member name="M:Genome.Logging.WriteAuditToTextFileAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Logging.WriteAuditToTextFileAttribute"/>
            </summary>
            <param name="filename">log filename</param>
        </member>
        <member name="T:Genome.Logging.WriteAuditToBinFileAttribute">
            <summary>
            Determines binary log writer for audit
            </summary>
        </member>
        <member name="M:Genome.Logging.WriteAuditToBinFileAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Logging.WriteAuditToBinFileAttribute"/>
            </summary>
            <param name="filename">log filename</param>
        </member>
        <member name="T:Genome.Logging.WriteDebugToAttribute">
            <summary>
            Determines log writer for debug log messages
            </summary>
        </member>
        <member name="M:Genome.Logging.WriteDebugToAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Logging.WriteDebugToAttribute"/>
            </summary>
            <param name="writerTypeId">writer type identifier</param>
        </member>
        <member name="M:Genome.Logging.WriteDebugToAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Logging.WriteDebugToAttribute"/>
            </summary>
            <param name="writerType">writer type identifier</param>
        </member>
        <member name="T:Genome.Logging.WriteDebugToDebugAttribute">
            <summary>
            Determines debug log writer for debug
            </summary>
        </member>
        <member name="M:Genome.Logging.WriteDebugToDebugAttribute.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Logging.WriteDebugToDebugAttribute"/>
            </summary>
        </member>
        <member name="T:Genome.Logging.WriteDebugToConsoleAttribute">
            <summary>
            Determines console log writer for debug
            </summary>
        </member>
        <member name="M:Genome.Logging.WriteDebugToConsoleAttribute.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Logging.WriteDebugToConsoleAttribute"/>
            </summary>
        </member>
        <member name="T:Genome.Logging.WriteDebugToSystemLogAttribute">
            <summary>
            Determines block log log writer for debug
            </summary>
        </member>
        <member name="M:Genome.Logging.WriteDebugToSystemLogAttribute.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Logging.WriteDebugToSystemLogAttribute"/>
            </summary>
        </member>
        <member name="T:Genome.Logging.WriteDebugToTextFileAttribute">
            <summary>
            Determines text log writer for debug
            </summary>
        </member>
        <member name="M:Genome.Logging.WriteDebugToTextFileAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Logging.WriteDebugToTextFileAttribute"/>
            </summary>
            <param name="filename">log filename</param>
        </member>
        <member name="T:Genome.Logging.WriteDebugToBinFileAttribute">
            <summary>
            Determines binary log writer for debug
            </summary>
        </member>
        <member name="M:Genome.Logging.WriteDebugToBinFileAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Logging.WriteDebugToBinFileAttribute"/>
            </summary>
            <param name="filename">log filename</param>
        </member>
        <member name="T:Genome.Logging.Writers.BinaryFileLogWriter">
            <summary>
            Log writer that writes a messages to file in binary form
            </summary>
        </member>
        <member name="T:Genome.Logging.Operators.Writers.DebugLogWriter">
            <summary>
            Log writer that writes a messages through <see cref="T:System.Diagnostics.Debug"/>
            </summary>
        </member>
        <member name="T:Genome.Logging.Writers.InteractiveConsoleWriter">
            <summary>
            Writes log messages to console. adapted for user interface
            </summary>
        </member>
        <member name="T:Genome.Logging.Writers.SystemLogWriter">
            <summary>
            Log controller that writes a message to block log
            </summary>
        </member>
        <member name="T:Genome.Logging.Writers.TextFileLogWriter">
            <summary>
            Log writer that writes a messages to file in text form
            </summary>
        </member>
        <member name="T:Genome.Logging.Writers.TraceLogWriter">
            <summary>
            Log writer that writes a messages through <see cref="T:System.Diagnostics.Trace"/>
            </summary>
        </member>
        <member name="T:Genome.Meta.IMetaMemberAttributeHandler">
            <summary>
            Handles <see cref="T:Genome.Meta.MetaMemberAttribute"/> 
            </summary>
        </member>
        <member name="M:Genome.Meta.IMetaMemberAttributeHandler.Handle(Genome.Meta.MetaMemberBulkProcessingContext)">
            <summary>
            Handles meta members attributes
            </summary>
        </member>
        <member name="T:Genome.ICastProcessor">
            <summary>
            Defines casted object post processor
            </summary>
        </member>
        <member name="M:Genome.ICastProcessor.Process(System.Object)">
            <summary>
            Process casted object
            </summary>
        </member>
        <member name="T:Genome.Meta.Aspect.AspectHandlerQueue">
            <summary>
            Represent a queue of the aspect hanlders
            </summary>
        </member>
        <member name="M:Genome.Meta.Aspect.AspectHandlerQueue.#ctor(Genome.Meta.Aspect.AspectHandler[],Genome.Meta.Aspect.AspectHandlerQueueAgent)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Meta.Aspect.AspectHandlerQueue"/>
            </summary>
        </member>
        <member name="P:Genome.Meta.Aspect.AspectHandlerQueue.Handlers">
            <summary>
            Handlers
            </summary>
        </member>
        <member name="E:Genome.Meta.Aspect.AspectHandlerQueue.BeginHandle">
            <summary>
            Occures before each handler call
            </summary>
        </member>
        <member name="E:Genome.Meta.Aspect.AspectHandlerQueue.EndHandle">
            <summary>
            Ocures after each handler call
            </summary>
        </member>
        <member name="E:Genome.Meta.Aspect.AspectHandlerQueue.Failed">
            <summary>
            Occures when handler call failed
            </summary>
        </member>
        <member name="T:Genome.Meta.Aspect.AspectHandlerQueueArgs">
            <summary>
            Aspect handler event argument
            </summary>
        </member>
        <member name="M:Genome.Meta.Aspect.AspectHandlerQueueArgs.#ctor(Genome.Meta.Aspect.AspectHandler)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Meta.Aspect.AspectHandlerQueueArgs"/>
            </summary>
        </member>
        <member name="P:Genome.Meta.Aspect.AspectHandlerQueueArgs.Handler">
            <summary>
            Target aspect handler
            </summary>
        </member>
        <member name="T:Genome.Meta.Aspect.AspectHandlerInvocationArgs">
            <summary>
            Aspect handler invocation event argument
            </summary>
        </member>
        <member name="M:Genome.Meta.Aspect.AspectHandlerInvocationArgs.#ctor(Genome.Meta.Aspect.AspectHandler)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Meta.Aspect.AspectHandlerInvocationArgs"/>
            </summary>
        </member>
        <member name="P:Genome.Meta.Aspect.AspectHandlerInvocationArgs.Interrupt">
            <summary>
            Interrupt context action
            </summary>
        </member>
        <member name="T:Genome.Meta.Aspect.AspectHandlerQueueFailedArgs">
            <summary>
            Aspect handler call fault event argument
            </summary>
        </member>
        <member name="M:Genome.Meta.Aspect.AspectHandlerQueueFailedArgs.#ctor(Genome.Meta.Aspect.AspectHandler,System.Exception)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Meta.Aspect.AspectHandlerQueueFailedArgs"/>
            </summary>
        </member>
        <member name="P:Genome.Meta.Aspect.AspectHandlerQueueFailedArgs.Error">
            <summary>
            Handler invocation error
            </summary>
        </member>
        <member name="P:Genome.Meta.Aspect.AspectHandlerQueueFailedArgs.Handled">
            <summary>
            Interrupt exception handling
            </summary>
        </member>
        <member name="T:Genome.Meta.Aspect.EnterAspectInvocation">
            <summary>
            Contains enter invocation parameters
            </summary>
        </member>
        <member name="T:Genome.Meta.Aspect.AspectInvocation">
            <summary>
            Contains context parameters
            </summary>
        </member>
        <member name="M:Genome.Meta.Aspect.AspectInvocation.#ctor(System.Object,System.Reflection.MethodInfo)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Meta.Aspect.AspectInvocation"/>
            </summary>
        </member>
        <member name="P:Genome.Meta.Aspect.AspectInvocation.Instance">
            <summary>
            Handling instance
            </summary>
        </member>
        <member name="P:Genome.Meta.Aspect.AspectInvocation.Method">
            <summary>
            Handling method
            </summary>
        </member>
        <member name="P:Genome.Meta.Aspect.AspectInvocation.HandlersQueue">
            <summary>
            Aspect handlers queue
            </summary>
        </member>
        <member name="M:Genome.Meta.Aspect.EnterAspectInvocation.#ctor(System.Object,System.Reflection.MethodInfo)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Meta.Aspect.EnterAspectInvocation"/>
            </summary>
        </member>
        <member name="P:Genome.Meta.Aspect.EnterAspectInvocation.Parameters">
            <summary>
            Get or sets input paramters
            </summary>
        </member>
        <member name="T:Genome.Meta.Aspect.ExitAspectInvocation">
            <summary>
            Contains exit invocation parameters
            </summary>
        </member>
        <member name="M:Genome.Meta.Aspect.ExitAspectInvocation.#ctor(System.Object,System.Reflection.MethodInfo)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Meta.Aspect.ExitAspectInvocation"/>
            </summary>
        </member>
        <member name="P:Genome.Meta.Aspect.ExitAspectInvocation.Result">
            <summary>
            Get or sets output result
            </summary>
        </member>
        <member name="T:Genome.Meta.Aspect.ErrorAspectInvocation">
            <summary>
            Contains enter invocation parameters
            </summary>
        </member>
        <member name="M:Genome.Meta.Aspect.ErrorAspectInvocation.#ctor(System.Object,System.Reflection.MethodInfo)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Meta.Aspect.ErrorAspectInvocation"/>
            </summary>
        </member>
        <member name="P:Genome.Meta.Aspect.ErrorAspectInvocation.Error">
            <summary>
            Get or sets invocation error
            </summary>
        </member>
        <member name="T:Genome.Meta.AttributeOwnerContext">
            <summary>
            Provides context attribute owner type
            </summary>
        </member>
        <member name="M:Genome.Meta.AttributeOwnerContext.GetValue">
            <summary>
            Gets context value
            </summary>
        </member>
        <member name="M:Genome.Meta.AttributeOwnerContext.#ctor(System.Reflection.ICustomAttributeProvider)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Meta.AttributeOwnerContext"/>
            </summary>  
        </member>
        <member name="T:Genome.Meta.Attributes.ForbidToCreateAttribute">
            <summary>
            Forbids meta block create marked type instance
            </summary>
        </member>
        <member name="T:Genome.Meta.Attributes.GenomeMarkerAttribute">
            <summary>
            Specified assembly that is genome based application part
            </summary>
        </member>
        <member name="P:Genome.Meta.Attributes.GenomeMarkerAttribute.Initializer">
            <summary>
            Type of assembly initializer
            </summary>
            <remarks>Specified type instance will be created when assembly will be loaded</remarks>
        </member>
        <member name="T:Genome.Meta.Attributes.IdAttribute">
            <summary>
            Uses when need specify just an identifier
            </summary>
        </member>
        <member name="M:Genome.Meta.Attributes.IdAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Meta.Attributes.IdAttribute"/>
            </summary>
            <param name="id"></param>
        </member>
        <member name="P:Genome.Meta.Attributes.IdAttribute.Id">
            <summary>
            Specified identifier
            </summary>
        </member>
        <member name="T:Genome.Meta.Attributes.CallWhenReadyAttribute">
            <summary>
            Determines method that will be called when all singletone parameters will be ready
            </summary>
        </member>
        <member name="T:Genome.Meta.HandlableMetaMemberAttribute">
            <summary>
            Handlable meta member attribute
            </summary>
        </member>
        <member name="M:Genome.Meta.Attributes.CallWhenReadyAttribute.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Meta.Attributes.CallWhenReadyAttribute"/>
            </summary>
            <param name="once">call once</param>
        </member>
        <member name="P:Genome.Meta.Attributes.CallWhenReadyAttribute.Once">
            <summary>
            Call once
            </summary>
        </member>
        <member name="T:Genome.Meta.Attributes.InjectCallWrapperHelper">
            <summary>
            Helps for <see cref="T:Genome.Meta.Attributes.InjectDependencyCallWrapper"/> make code injection
            </summary>
        </member>
        <member name="M:Genome.Meta.Attributes.InjectCallWrapperHelper.GetSingleton(System.String,System.String)">
            <summary>
            Gets singleton
            </summary>
        </member>
        <member name="M:Genome.Meta.Attributes.InjectCallWrapperHelper.GetCategoryContent``1(System.String)">
            <summary>
            Gets category content as array
            </summary>
        </member>
        <member name="T:Genome.Meta.Attributes.InjectDependencyAttribute">
            <summary>
            Determines dependency injection
            </summary>
        </member>
        <member name="T:Genome.Meta.Attributes.InjectDependencyCallAttribute">
            <summary>
            Determines dependency injection
            </summary>
        </member>
        <member name="T:Genome.Meta.Attributes.MetaAttributeHandlerAttribute">
            <summary>
            Specifies a handlabler attribute handler
            </summary>
        </member>
        <member name="M:Genome.Meta.Attributes.MetaAttributeHandlerAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Meta.Attributes.MetaAttributeHandlerAttribute"/>
            </summary>
        </member>
        <member name="T:Genome.Meta.Attributes.MetaInsideAttribute">
            <summary>
            Means that type has meta attributes inside. 
            <remarks>Inner scanning occurs also if a type has meta attributes</remarks>
            </summary>
        </member>
        <member name="T:Genome.Meta.Attributes.ProcessingPriorityAttribute">
            <summary>
            Defines process queue priority
            </summary>
        </member>
        <member name="M:Genome.Meta.Attributes.ProcessingPriorityAttribute.#ctor(Genome.Priority)">
            <summary>
            Defines a new instance of <see cref="T:Genome.Meta.Attributes.ProcessingPriorityAttribute"/>
            </summary>
            <param name="priority">process queue priority</param>
        </member>
        <member name="P:Genome.Meta.Attributes.ProcessingPriorityAttribute.Priority">
            <summary>
            Process queue priority
            </summary>
        </member>
        <member name="T:Genome.Meta.Attributes.RegisterFactoryAttribute">
            <summary>
            Specified registration parameters for factory 
            </summary>
        </member>
        <member name="M:Genome.Meta.Attributes.RegisterFactoryAttribute.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="categoryId">factory category identifier</param>
            <param name="id">factory type register identifier</param>
        </member>
        <member name="M:Genome.Meta.Attributes.RegisterFactoryAttribute.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="id">factory type register identifier</param>
        </member>
        <member name="M:Genome.Meta.Attributes.RegisterFactoryAttribute.#ctor(Genome.ObjectId)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Meta.Attributes.RegisterFactoryAttribute"/>
            </summary>
        </member>
        <member name="M:Genome.Meta.Attributes.RegisterFactoryAttribute.#ctor(Genome.ObjectId,Genome.Factoring.FactoryCategoryId)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Meta.Attributes.RegisterFactoryAttribute"/>
            </summary>
        </member>
        <member name="P:Genome.Meta.Attributes.RegisterFactoryAttribute.CategoryId">
            <summary>
            Factory category identifier
            </summary>
        </member>
        <member name="P:Genome.Meta.Attributes.RegisterFactoryAttribute.Id">
            <summary>
            Factory type register identifier
            </summary>
        </member>
        <member name="T:Genome.SingletonAttribute">
            <summary>
            Specifies singleton type. It lat core registry know default registry identifier of target type instance.
            </summary>
        </member>
        <member name="M:Genome.SingletonAttribute.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Genome.SingletonAttribute"/>
            </summary>
        </member>
        <member name="M:Genome.SingletonAttribute.#ctor(System.String)">
            <summary>
            Initialize new instance of SingletoneAttribute with specified singleton identifier
            </summary>
            <param name="id">singleton identifier</param>
        </member>
        <member name="M:Genome.SingletonAttribute.#ctor(Genome.ObjectId)">
            <summary>
            Initialize new instance of SingletoneAttribute with specified singleton identifier
            </summary>
            <param name="id">singleton identifier</param>
        </member>
        <member name="P:Genome.SingletonAttribute.SingletonId">
            <summary>
            Singleton registry identifier
            </summary>
        </member>
        <member name="T:Genome.AttributeUtils">
            <summary>
            Extensions for <see cref="T:System.Reflection.ICustomAttributeProvider"/>
            </summary>
        </member>
        <member name="M:Genome.AttributeUtils.GetAttributes(System.Reflection.ICustomAttributeProvider,System.Boolean)">
            <summary>
            Gets all custom attributes 
            </summary>
        </member>
        <member name="M:Genome.AttributeUtils.GetAttributes``1(System.Reflection.ICustomAttributeProvider,System.Boolean)">
            <summary>
            Gets custom attributes of generic specified type
            </summary>
        </member>
        <member name="M:Genome.AttributeUtils.GetSingleAttribute``1(System.Reflection.ICustomAttributeProvider)">
            <summary>
            Gets custom attributes of generic specified type
            </summary>
        </member>
        <member name="M:Genome.AttributeUtils.GetAttribute``1(System.Reflection.ICustomAttributeProvider)">
            <summary>
            Gets custom attributes of generic specified type
            </summary>
        </member>
        <member name="M:Genome.AttributeUtils.IsDefined``1(System.Reflection.ICustomAttributeProvider)">
            <summary>
            Indicates that one o more instace of specified type {T} is applied to this member
            </summary>
        </member>
        <member name="T:Genome.Meta.IAssemblyHandler">
            <summary>
            Specified an assembly handler. Implements by handlers that used by core when assembly is scanned
            </summary>
        </member>
        <member name="M:Genome.Meta.IAssemblyHandler.Handle(System.Reflection.Assembly)">
            <summary>
            Handles a specified assembly
            </summary>
        </member>
        <member name="T:Genome.Meta.IdentifierUtils">
            <summary>
            Provides methods that allow to perform different operations with identifiers
            </summary>
        </member>
        <member name="M:Genome.Meta.IdentifierUtils.GetSingletonId(System.Type)">
            <summary>
            Gets singleton identifier for singleton class/interface or null if identifier is not determined
            </summary>
        </member>
        <member name="M:Genome.Meta.IdentifierUtils.GetSingletonId``1">
            <summary>
            Gets singleton identifier for singleton class/interface or null if identifier is not determined
            </summary>
        </member>
        <member name="M:Genome.Meta.IdentifierUtils.GetContentCategoryIdOrDefault(System.Type,Genome.Registry.CategoryId)">
            <summary>
            Gets content category for specified type or null if identifier is not determined
            </summary>
        </member>
        <member name="M:Genome.Meta.IdentifierUtils.GetContentCategoryId(System.Type)">
            <summary>
            Gets content category for specified type or null if identifier is not determined
            </summary>
        </member>
        <member name="M:Genome.Meta.IdentifierUtils.GetContentCategoryId``1">
            <summary>
            Gets content category for specified type or null if identifier is not determined
            </summary>
        </member>
        <member name="M:Genome.Meta.IdentifierUtils.GetFactoryCategoryId``1">
            <summary>
            Gets factory category identifier
            </summary>
        </member>
        <member name="M:Genome.Meta.IdentifierUtils.GetFactoryCategoryId(System.Type)">
            <summary>
            Gets factory category identifier
            </summary>
        </member>
        <member name="T:Ids.MetaSystem.ContentCategories.AttributeHandlers">
            <summary>
            <see cref="F:Ids.MetaSystem.ContentCategories.AttributeHandlers.Description"/>
            </summary>
        </member>
        <member name="F:Ids.MetaSystem.ContentCategories.AttributeHandlers.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.MetaSystem.ContentCategories.AttributeHandlers.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.MetaSystem.ContentCategories.MetaAttributeHandlers">
            <summary>
            <see cref="F:Ids.MetaSystem.ContentCategories.MetaAttributeHandlers.Description"/>
            </summary>
        </member>
        <member name="F:Ids.MetaSystem.ContentCategories.MetaAttributeHandlers.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.MetaSystem.ContentCategories.MetaAttributeHandlers.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.MetaSystem.ContentCategories.TypeHandlers">
            <summary>
            <see cref="F:Ids.MetaSystem.ContentCategories.TypeHandlers.Description"/>
            </summary>
        </member>
        <member name="F:Ids.MetaSystem.ContentCategories.TypeHandlers.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.MetaSystem.ContentCategories.TypeHandlers.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.MetaSystem.ContentCategories.AssemblyHandlers">
            <summary>
            <see cref="F:Ids.MetaSystem.ContentCategories.AssemblyHandlers.Description"/>
            </summary>
        </member>
        <member name="F:Ids.MetaSystem.ContentCategories.AssemblyHandlers.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.MetaSystem.ContentCategories.AssemblyHandlers.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Genome.Meta.IMetaAttributeHandler">
            <summary>
            Determines a meta atribute hanlder
            </summary>
        </member>
        <member name="M:Genome.Meta.IMetaAttributeHandler.Handle(Genome.Meta.MetaAttribute,Genome.Meta.MetaAttributeProcessingContext)">
            <summary>
            Handles a meta attribute
            </summary>
        </member>
        <member name="T:Genome.Meta.MetaAttributeHandler`1">
            <summary>
            Represent generic attribute handler
            </summary>
            <typeparam name="TAttr">meta attribute type</typeparam>
        </member>
        <member name="T:Genome.Meta.IPriorityAttribute">
            <summary>
            Provides attribute process priority
            </summary>
        </member>
        <member name="P:Genome.Meta.IPriorityAttribute.ProcessPriority">
            <summary>
            Process priority
            </summary>
        </member>
        <member name="T:Genome.Meta.ITypeHandler">
            <summary>
            Specified a type handler. Implements by handlers that used by core when assembly is scanned
            </summary>
        </member>
        <member name="M:Genome.Meta.ITypeHandler.Handle(System.Type)">
            <summary>
            Handles a specified type
            </summary>
            <param name="type">specified type</param>
        </member>
        <member name="T:Genome.Meta.HandlableAttribute">
            <summary>
            An attribute that will be processed by its handler
            </summary>
        </member>
        <member name="M:Genome.Meta.HandlableAttribute.#ctor(System.String)">
            <summary>
            Initalize a new instance of <see cref="T:Genome.Meta.HandlableAttribute"/>
            </summary>
            <param name="handlerId">handler identifier</param>
        </member>
        <member name="T:Genome.Meta.MetaMemberAttributeHandlerAttribute">
            <summary>
            Specifies handler for <see cref="T:Genome.Meta.HandlableMetaMemberAttribute"/> based attributes
            </summary>
        </member>
        <member name="M:Genome.Meta.MetaMemberAttributeHandlerAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of  <see cref="T:Genome.Meta.MetaMemberAttributeHandlerAttribute"/>
            </summary>
        </member>
        <member name="M:Genome.Meta.MetaMemberAttributeHandlerAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of  <see cref="T:Genome.Meta.MetaMemberAttributeHandlerAttribute"/>
            </summary>
        </member>
        <member name="P:Genome.Meta.MetaMemberAttributeHandlerAttribute.HandlerId">
            <summary>
            Handler identifier
            </summary>
        </member>
        <member name="P:Genome.Meta.MetaMemberAttributeHandlerAttribute.HandlerType">
            <summary>
            Hendler type
            </summary>
        </member>
        <member name="T:Ids.MetaSystem.TypeHandlers.MetaAttributeTypeHandler">
            <summary>
            <see cref="F:Ids.MetaSystem.TypeHandlers.MetaAttributeTypeHandler.Description"/>
            </summary>
        </member>
        <member name="F:Ids.MetaSystem.TypeHandlers.MetaAttributeTypeHandler.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.MetaSystem.TypeHandlers.MetaAttributeTypeHandler.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.MetaSystem.TypeHandlers.SingletonInterfaceTypeHandler">
            <summary>
            <see cref="F:Ids.MetaSystem.TypeHandlers.SingletonInterfaceTypeHandler.Description"/>
            </summary>
        </member>
        <member name="F:Ids.MetaSystem.TypeHandlers.SingletonInterfaceTypeHandler.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.MetaSystem.TypeHandlers.SingletonInterfaceTypeHandler.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.MetaSystem.AssemblyHandlers.TypeAssemblyHandler">
            <summary>
            <see cref="F:Ids.MetaSystem.AssemblyHandlers.TypeAssemblyHandler.Description"/>
            </summary>
        </member>
        <member name="F:Ids.MetaSystem.AssemblyHandlers.TypeAssemblyHandler.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.MetaSystem.AssemblyHandlers.TypeAssemblyHandler.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.MetaSystem.AssemblyHandlers.AttributeAssemblyHandler">
            <summary>
            <see cref="F:Ids.MetaSystem.AssemblyHandlers.AttributeAssemblyHandler.Description"/>
            </summary>
        </member>
        <member name="F:Ids.MetaSystem.AssemblyHandlers.AttributeAssemblyHandler.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.MetaSystem.AssemblyHandlers.AttributeAssemblyHandler.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Genome.Meta.TypeHandlers.MetaAttributesHandler">
            <summary>
            Type handler which market by handlable attributes
            </summary>
        </member>
        <member name="T:Genome.Meta.TypeHandlers.SingletonInterfaceImplTypeHandler">
            <summary>
            Type handler of classes that implement a interfaces that market by <see cref="T:Genome.SingletonAttribute"/>
            </summary>
        </member>
        <member name="T:Genome.Meta.SelfProcessedMetaMemberAttribute">
            <summary>
            Self processed meta member attribute
            </summary>
        </member>
        <member name="M:Genome.Meta.SelfProcessedMetaMemberAttribute.Process(Genome.Meta.MetaMemberProcessingContext)">
            <summary>
            Processes current <see cref="T:Genome.Meta.SelfProcessedMetaMemberAttribute"/> and specified member
            </summary>
        </member>
        <member name="T:Genome.Meta.MetaProcessingContextBase">
            <summary>
            Meta attributes workaround context
            </summary>
        </member>
        <member name="M:Genome.Meta.MetaProcessingContextBase.#ctor(System.Type)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Meta.MetaProcessingContextBase"/>
            </summary>
        </member>
        <member name="P:Genome.Meta.MetaProcessingContextBase.TargetType">
            <summary>
            Merked type
            </summary>
        </member>
        <member name="T:Genome.Meta.MetaMemberProcessingContext">
            <summary>
            <see cref="T:Genome.Meta.MetaMemberAttribute"/> processiing context
            </summary>
        </member>
        <member name="M:Genome.Meta.MetaMemberProcessingContext.#ctor(System.Reflection.MemberInfo,System.Type)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Meta.MetaMemberProcessingContext"/>
            </summary>
        </member>
        <member name="P:Genome.Meta.MetaMemberProcessingContext.Member">
            <summary>
            Marked member
            </summary>
        </member>
        <member name="T:Genome.Meta.MetaMemberBulkProcessingContext">
            <summary>
            <see cref="T:Genome.Meta.MetaMemberAttribute"/> bulk processing context
            </summary>
        </member>
        <member name="M:Genome.Meta.MetaMemberBulkProcessingContext.#ctor(System.Type,Genome.Meta.MetaAttributeMarkedMemberCollection)">
            <summary>
            Initializes a new instnace of <see cref="T:Genome.Meta.MetaMemberBulkProcessingContext"/>
            </summary>
        </member>
        <member name="P:Genome.Meta.MetaMemberBulkProcessingContext.MarkedMembers">
            <summary>
            Gets marked members
            </summary>
        </member>
        <member name="T:Genome.Meta.MetaAttributeMarkedMemberCollection">
            <summary>
            Collection of <see cref="T:Genome.Meta.MetaAttributeMarkedMember"/>
            </summary>
        </member>
        <member name="M:Genome.Meta.MetaAttributeMarkedMemberCollection.GetMarkedMembers``1">
            <summary>
            Gets marked members marked by specified attribute type
            </summary>
        </member>
        <member name="M:Genome.Meta.MetaAttributeMarkedMemberCollection.GetMembers``2">
            <summary>
            Gets members marked by specified attribute type
            </summary>
        </member>
        <member name="M:Genome.Meta.MetaAttributeMarkedMemberCollection.#ctor(System.Collections.Generic.IList{Genome.Meta.MetaAttributeMarkedMember})">
            <summary>
            Initializes a new instnace of <see cref="T:Genome.Meta.MetaAttributeMarkedMemberCollection"/>
            </summary>
        </member>
        <member name="T:Genome.Meta.MetaAttributeMarkedMember">
            <summary>
            Marked member and <see cref="T:Genome.Meta.MetaMemberAttribute"/> pair
            </summary>
        </member>
        <member name="M:Genome.Meta.MetaAttributeMarkedMember.#ctor(System.Reflection.MemberInfo,Genome.Meta.MetaMemberAttribute[])">
            <summary>
            Initializes a new instnace of <see cref="T:Genome.Meta.MetaAttributeMarkedMember"/>
            </summary>
            <param name="member"></param>
            <param name="metaAttributes"></param>
        </member>
        <member name="P:Genome.Meta.MetaAttributeMarkedMember.Member">
            <summary>
            Marked member
            </summary>
        </member>
        <member name="P:Genome.Meta.MetaAttributeMarkedMember.MetaAttributes">
            <summary>
            <see cref="T:Genome.Meta.MetaMemberAttribute"/> attributes
            </summary>
        </member>
        <member name="T:Genome.Meta.MetaAttributeProcessingContextBase">
            <summary>
            <see cref="T:Genome.Meta.MetaAttribute"/> workaround context
            </summary>
        </member>
        <member name="M:Genome.Meta.MetaAttributeProcessingContextBase.#ctor(System.Type,Genome.Meta.IMarkedMembersProvider)">
            <summary>
            Initialzes a new instnace of <see cref="T:Genome.Meta.MetaAttributeProcessingContextBase"/>
            </summary>
        </member>
        <member name="P:Genome.Meta.MetaAttributeProcessingContextBase.MarkedMembersProvider">
            <summary>
            Provides info about marked members
            </summary>
        </member>
        <member name="T:Genome.Meta.MetaAttributeValidationContext">
            <summary>
            <see cref="T:Genome.Meta.MetaAttribute"/> validation context
            </summary>
        </member>
        <member name="M:Genome.Meta.MetaAttributeValidationContext.#ctor(System.Type,Genome.Meta.IMarkedMembersProvider)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Meta.MetaAttributeValidationContext"/>
            </summary>
        </member>
        <member name="T:Genome.Meta.MetaAttributeProcessingContext">
            <summary>
            A <see cref="T:Genome.Meta.MetaAttribute"/> processing context
            </summary>
        </member>
        <member name="M:Genome.Meta.MetaAttributeProcessingContext.#ctor(System.Object,System.Type,Genome.Meta.IMarkedMembersProvider)">
            <summary>
            initializes a new instance of <see cref="T:Genome.Meta.MetaAttributeProcessingContext"/>
            </summary>
        </member>
        <member name="P:Genome.Meta.MetaAttributeProcessingContext.Instance">
            <summary>
            Marked type instance. Exists if one of attributes requires a common instance
            </summary>
        </member>
        <member name="T:Genome.Meta.AttributeMemberPair">
            <summary>
            Pair of attribute ans marked member
            </summary>
        </member>
        <member name="P:Genome.Meta.AttributeMemberPair.Member">
            <summary>
            Marked member
            </summary>
        </member>
        <member name="P:Genome.Meta.AttributeMemberPair.Attribute">
            <summary>
            Meta attribute
            </summary>
        </member>
        <member name="T:Genome.Meta.IMarkedMembersProvider">
            <summary>
            Provides info about marked members by meta attributes
            </summary>
        </member>
        <member name="M:Genome.Meta.IMarkedMembersProvider.GetMarkedMembers``1">
            <summary>
            Gets info abiout marked members
            </summary>
        </member>
        <member name="M:Genome.Meta.IMarkedMembersProvider.GetMarkedMethods``1">
            <summary>
            Gets marked methods
            </summary>
        </member>
        <member name="M:Genome.Meta.IMarkedMembersProvider.GetMarkedProperties``1">
            <summary>
            Gets marked properties
            </summary>
        </member>
        <member name="M:Genome.Meta.IMarkedMembersProvider.GetMarkedFields``1">
            <summary>
            Gets marked fields
            </summary>
        </member>
        <member name="T:Genome.Meta.IMemberAttributeRegistrar">
            <summary>
            Represent member attribute type registrar
            </summary>
        </member>
        <member name="M:Genome.Meta.IMemberAttributeRegistrar.Register``1">
            <summary>
            Registers an attribute type
            </summary>
        </member>
        <member name="T:Genome.CoreRegistry.ConfigLoaders.FactoryTypeConfigLoader">
            <summary>
            Loads factory types info from config and registers theirs
            </summary>
        </member>
        <member name="T:Ids.Registry.ConfigLoaders.FactoryTypeConfigHandler">
            <summary>
            <see cref="F:Ids.Registry.ConfigLoaders.FactoryTypeConfigHandler.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Registry.ConfigLoaders.FactoryTypeConfigHandler.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Registry.ConfigLoaders.FactoryTypeConfigHandler.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Registry.ConfigLoaders.RegistrationConfigHandler">
            <summary>
            <see cref="F:Ids.Registry.ConfigLoaders.RegistrationConfigHandler.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Registry.ConfigLoaders.RegistrationConfigHandler.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Registry.ConfigLoaders.RegistrationConfigHandler.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Genome.CoreRegistry.ConfigLoaders.Registrar">
            <summary>
            Registers an object that retrieved from registry into othe place
            </summary>
        </member>
        <member name="T:Genome.CoreRegistryExtensions">
            <summary>
            Extensions for <see cref="T:Genome.CoreRegistry.ICoreRegistry"/>
            </summary>
        </member>
        <member name="M:Genome.CoreRegistryExtensions.Register``1(Genome.CoreRegistry.ICoreRegistry,``0)">
            <summary>
            Registers a target object
            </summary>
            <param name="registry">core registry</param>
            <param name="target">object for registration</param>
            <typeparam name="T">target type</typeparam>
            <returns>rollback object</returns>
            <exception cref="T:System.InvalidOperationException">singleton identifier not found</exception>
        </member>
        <member name="M:Genome.CoreRegistryExtensions.Register``1(Genome.CoreRegistry.ICoreRegistry,``0,Genome.ObjectId)">
            <summary>
            Registers a target object
            </summary>
            <param name="registry">core registry</param>
            <param name="target">object for registration</param>
            <param name="id">registration object identifier </param>
            <typeparam name="T">target type</typeparam>
            <returns>rollback object</returns>
            <exception cref="T:System.InvalidOperationException">Content category identifier not found</exception>
        </member>
        <member name="M:Genome.CoreRegistryExtensions.Register(Genome.CoreRegistry.ICoreRegistry,System.Object,Genome.Registry.RegistryId)">
            <summary>
            Registers a target object
            </summary>
            <param name="registry">core registry</param>
            <param name="target">object for registration</param>
            <param name="id">registration object identifier </param>
            <typeparam name="T">target type</typeparam>
            <returns>rollback object</returns>
        </member>
        <member name="M:Genome.CoreRegistryExtensions.Unregister(Genome.CoreRegistry.ICoreRegistry,System.Object,Genome.Registry.RegistryId)">
            <summary>
            Unregisters target object
            </summary>
            <param name="registry">core registry</param>
            <param name="target">target object</param>
            <param name="id">register identifier</param>
        </member>
        <member name="M:Genome.CoreRegistryExtensions.Unregister(Genome.CoreRegistry.ICoreRegistry,Genome.Registry.RegistryId)">
            <summary>
            Unregisters target object
            </summary>
            <param name="registry">core registry</param>
            <param name="id">register identifier</param>
        </member>
        <member name="M:Genome.CoreRegistryExtensions.GetItem``1(Genome.CoreRegistry.ICoreRegistry,Genome.ObjectId)">
            <summary>
            Gets a registered object
            </summary>
            <param name="registry">core registry</param>
            <param name="id">target registry cell identifier</param>
            <returns>registered object</returns>
        </member>
        <member name="M:Genome.CoreRegistryExtensions.GetItem(Genome.CoreRegistry.ICoreRegistry,System.Type,Genome.ObjectId)">
            <summary>
            Gets a registered object
            </summary>
            <param name="registry">core registry</param>
            <param name="targetType">target object type</param>
            <param name="id">target registry cell identifier</param>
            <returns>registered object</returns>
        </member>
        <member name="M:Genome.CoreRegistryExtensions.GetItem(Genome.CoreRegistry.ICoreRegistry,System.Type)">
            <summary>
            Gets a registered singleton object
            </summary>
            <param name="registry">Core facade</param>
            <param name="targetType">Singleton type. It has to be marked by <see cref="T:Genome.SingletonAttribute"/></param>
        </member>
        <member name="M:Genome.CoreRegistryExtensions.GetItem``1(Genome.CoreRegistry.ICoreRegistry)">
            <summary>
            Gets a registered singleton object
            </summary>
            <typeparam name="T">Singleton type. It has to be marked by <see cref="T:Genome.SingletonAttribute"/></typeparam>
            <param name="registry">Core facade</param>
        </member>
        <member name="M:Genome.CoreRegistryExtensions.GetItems``1(Genome.CoreRegistry.ICoreRegistry)">
            <summary>
            Gets an all instances that registered in default(for specified type) category
            </summary>
            <typeparam name="T">Specified type. It has to be marked by <see cref="T:Genome.Meta.Attributes.ContentCategoryAttribute"/></typeparam>
            <returns>registered objects in default category(for specified type)</returns>
        </member>
        <member name="T:Genome.CoreRegistry.ICoreRegistry">
            <summary>
            Specified a storage for object registration and cataloging.
            </summary>
        </member>
        <member name="T:Genome.Registry.IRegistry`2">
            <summary>
            Specified a storage for object registration and cataloging.
            </summary>
        </member>
        <member name="P:Genome.Registry.IRegistry`2.Item(Genome.Registry.CategoryId)">
            <summary>
            Gets a registry category
            </summary>
            <param name="categoryId">category identifier</param>
        </member>
        <member name="P:Genome.Registry.IRegistry`2.Item(Genome.Registry.RegistryId)">
            <summary>
            Gets or sets a stored object
            </summary>
            <param name="itemId">object identifier</param>
            <returns>found object</returns>
        </member>
        <member name="P:Genome.CoreRegistry.ICoreRegistry.Default">
            <summary>
            Gets a default registry category
            </summary>
        </member>
        <member name="T:Genome.Registry.RegistryEventArgs">
            <summary>
            Represents a parameters of registry changes
            </summary>
        </member>
        <member name="M:Genome.Registry.RegistryEventArgs.#ctor(System.Object,System.Object,Genome.Registry.RegistryId)">
            <summary>
            Initialize a new instance of RegisterEventArgs
            </summary>
        </member>
        <member name="P:Genome.Registry.RegistryEventArgs.OldValue">
            <summary>
            Old registered value
            </summary>
        </member>
        <member name="P:Genome.Registry.RegistryEventArgs.NewValue">
            <summary>
            New registered value
            </summary>
        </member>
        <member name="P:Genome.Registry.RegistryEventArgs.Id">
            <summary>
            Registry identifier
            </summary>
        </member>
        <member name="T:Genome.Repo.RepositoryTypeAttribute">
            <summary>
            Registers type for rpository factoring
            </summary>
        </member>
        <member name="M:Genome.Repo.RepositoryTypeAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Repo.RepositoryTypeAttribute"/>
            </summary>
        </member>
        <member name="T:Genome.Repo.BaseExpressionRepositoryOperator`1">
            <summary>
            The base operator which use expressions for predicates and updaters
            </summary>
        </member>
        <member name="T:Genome.Repo.IRepositoryOperator`1">
            <summary>
            Provides ability for repositoy modifying
            </summary>
            <typeparam name="T">respository content item type</typeparam>
        </member>
        <member name="M:Genome.Repo.IRepositoryOperator`1.Add(`0)">
            <summary>
            Adds item to repository
            </summary>
        </member>
        <member name="M:Genome.Repo.IRepositoryOperator`1.Remove(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Remove all items which satisfy the specified predicate
            </summary>
        </member>
        <member name="M:Genome.Repo.IRepositoryOperator`1.Update(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,`0}})">
            <summary>
            Updates items which satisfy the specified predicate
            </summary>
        </member>
        <member name="M:Genome.Repo.BaseExpressionRepositoryOperator`1.#ctor(System.Action)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Repo.BaseExpressionRepositoryOperator`1"/>
            </summary>
        </member>
        <member name="M:Genome.Repo.BaseExpressionRepositoryOperator`1.OnAdd(`0)">
            <summary>
            Adds item
            </summary>
        </member>
        <member name="M:Genome.Repo.BaseExpressionRepositoryOperator`1.OnRemove(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Removes item
            </summary>
        </member>
        <member name="M:Genome.Repo.BaseExpressionRepositoryOperator`1.OnUpdate(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,`0}})">
            <summary>
            Updates item
            </summary>
        </member>
        <member name="M:Genome.Repo.BaseExpressionRepositoryOperator`1.OnUpdate(`0)">
            <summary>
            Updates item
            </summary>
        </member>
        <member name="M:Genome.Repo.BaseExpressionRepositoryOperator`1.OnChanged">
            <summary>
            Call for Onchanged notification
            </summary>
        </member>
        <member name="T:Genome.Repo.BaseDelegateRepositoryOperator`1">
            <summary>
            The base operator which use delegates for predicates and updaters
            </summary>
        </member>
        <member name="M:Genome.Repo.BaseDelegateRepositoryOperator`1.#ctor(System.Action)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Repo.BaseDelegateRepositoryOperator`1"/>
            </summary>
        </member>
        <member name="M:Genome.Repo.BaseDelegateRepositoryOperator`1.OnAdd(`0)">
            <summary>
            Adds item
            </summary>
        </member>
        <member name="M:Genome.Repo.BaseDelegateRepositoryOperator`1.OnRemove(System.Func{`0,System.Boolean})">
            <summary>
            Removes item
            </summary>
        </member>
        <member name="M:Genome.Repo.BaseDelegateRepositoryOperator`1.OnUpdate(System.Func{`0,System.Boolean},System.Linq.Expressions.Expression{System.Func{`0,`0}})">
            <summary>
            Updates item
            </summary>
        </member>
        <member name="M:Genome.Repo.BaseDelegateRepositoryOperator`1.OnChanged">
            <summary>
            Call for Onchanged notification
            </summary>
        </member>
        <member name="T:Ids.Repo.Manager">
            <summary>
            <see cref="F:Ids.Repo.Manager.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Repo.Manager.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Repo.Manager.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Repo.RegRepoConfigHandler">
            <summary>
            <see cref="F:Ids.Repo.RegRepoConfigHandler.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Repo.RegRepoConfigHandler.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Repo.RegRepoConfigHandler.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Repo.ConfigureRepoConfigHandler">
            <summary>
            <see cref="F:Ids.Repo.ConfigureRepoConfigHandler.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Repo.ConfigureRepoConfigHandler.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Repo.ConfigureRepoConfigHandler.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Repo.Repositories.Memory">
            <summary>
            <see cref="F:Ids.Repo.Repositories.Memory.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Repo.Repositories.Memory.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Repo.Repositories.Memory.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Repo.ContentCategories.Repositories">
            <summary>
            <see cref="F:Ids.Repo.ContentCategories.Repositories.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Repo.ContentCategories.Repositories.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Repo.ContentCategories.Repositories.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Repo.FacoryCategories.Repositories">
            <summary>
            <see cref="F:Ids.Repo.FacoryCategories.Repositories.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Repo.FacoryCategories.Repositories.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Repo.FacoryCategories.Repositories.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Genome.Repo.IRepoManager">
            <summary>
            Represents a repository manager. It provides an ability to use repositories
            </summary>
        </member>
        <member name="M:Genome.Repo.IRepoManager.GetRepository``1(Genome.Repo.RepositoryId)">
            <summary>
            Gets repository for specified identifiable item type
            </summary>
            <param name="repoId">repository id</param>
            <typeparam name="T">identifiable item type</typeparam>
            <typeparam name="TId">item identifier</typeparam>
        </member>
        <member name="M:Genome.Repo.IRepoManager.GetRepository(System.Type,Genome.Repo.RepositoryId)">
            <summary>
            Gets repository for specified identifiable item type
            </summary>
        </member>
        <member name="M:Genome.Repo.IRepoManager.TryGetRepository(Genome.Repo.RepositoryId,Genome.Repo.IRepository@)">
            <summary>
            Gets repository 
            </summary>
        </member>
        <member name="M:Genome.Repo.IRepoManager.RegisterRepository(Genome.Repo.RepositoryTypeId,Genome.Repo.RepositoryId,Genome.Repo.RepoConfiguration)">
            <summary>
            Registers new repository
            </summary>
            <param name="typeId">repository type identifier</param>
            <param name="repoId">created repository identifier</param>
            <param name="configuration">repository configuration</param>
        </member>
        <member name="M:Genome.Repo.IRepoManager.RegisterRepository(Genome.Repo.IRepository,Genome.Repo.RepositoryId)">
            <summary>
            Registers repository
            </summary>
        </member>
        <member name="M:Genome.Repo.IRepoManager.BindDefaultRepository(System.Type,Genome.Repo.RepositoryId)">
            <summary>
            Binds default repository for specified dom type
            </summary>
        </member>
        <member name="T:Genome.Repo.MemoryRepository`1">
            <summary>
            Virtual memory repository
            </summary>
        </member>
        <member name="T:Genome.RepoManagerExtensions">
            <summary>
            Extensions for <see cref="T:Genome.Repo.IRepoManager"/>
            </summary>
        </member>
        <member name="M:Genome.RepoManagerExtensions.GetItems``1(Genome.Repo.IRepoManager)">
            <summary>
            Gets <see cref="T:System.Linq.IQueryable`1"/> for content query building
            </summary>
        </member>
        <member name="T:Ids.Resources.Manager">
            <summary>
            <see cref="F:Ids.Resources.Manager.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Resources.Manager.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Resources.Manager.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Resources.ResourceAttrHandler">
            <summary>
            <see cref="F:Ids.Resources.ResourceAttrHandler.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Resources.ResourceAttrHandler.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Resources.ResourceAttrHandler.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Resources.ConfigHandler">
            <summary>
            <see cref="F:Ids.Resources.ConfigHandler.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Resources.ConfigHandler.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Resources.ConfigHandler.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Genome.Resources.IResourceManager">
            <summary>
            Provide several resources such as images, localizable strings and etc
            </summary>
        </member>
        <member name="M:Genome.Resources.IResourceManager.GetResource(Genome.Resources.ResourceId)">
            <summary>
            Gets a resource with specified identifier
            </summary>
            <param name="id">resource identifier</param>
            <returns>registered resource</returns>
        </member>
        <member name="M:Genome.Resources.IResourceManager.RegisterResource(Genome.Resources.Resource)">
            <summary>
            Registers a specified 
            </summary>
            <param name="resource">resource for registration</param>
            <returns>unregistering rollback object</returns>
        </member>
        <member name="M:Genome.Resources.IResourceManager.UnregisterResource(Genome.Resources.ResourceId)">
            <summary>
            Unregisters resource with specified identifier. Silent if not exists.
            </summary>
            <param name="resourceId">resource identifier</param>
        </member>
        <member name="M:Genome.Resources.IResourceManager.ToDom``1(Genome.Resources.Resource,System.Boolean)">
            <summary>
            Converts resource to domain object
            </summary>
        </member>
        <member name="T:Genome.Resources.RequiredAttribute">
            <summary>
            Means that a property must not be null 
            </summary>
        </member>
        <member name="T:Genome.Resources.Resource">
            <summary>
            Base class of all resources
            </summary>
        </member>
        <member name="M:Genome.Resources.Resource.#ctor(Genome.Resources.ResourceId)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Resources.Resource"/>
            </summary>
        </member>
        <member name="P:Genome.Resources.Resource.Id">
            <summary>
            Resource identifier
            </summary>
        </member>
        <member name="P:Genome.Resources.Resource.RawContent">
            <summary>
            Resource content
            </summary>
        </member>
        <member name="P:Genome.Resources.Resource.BaseUri">
            <summary>
            Base resource uri
            </summary>
        </member>
        <member name="P:Genome.Resources.Resource.ContentConverter">
            <summary>
            Content converter
            </summary>
        </member>
        <member name="P:Genome.Resources.Resource.Bindings">
            <summary>
            Bindings to other resources
            </summary>
        </member>
        <member name="P:Genome.Resources.Resource.ArrayBindings">
            <summary>
            Binding to other resources
            </summary>
        </member>
        <member name="T:Genome.Resources.ResourceConfigCollection">
            <summary>
            Collection of resource configuration elements
            </summary>
        </member>
        <member name="P:Genome.Resources.ResourceConfigCollection.Resources">
            <summary>
            Resource array
            </summary>
        </member>
        <member name="P:Genome.Resources.ResourceConfigCollection.Contexts">
            <summary>
            Resource context array
            </summary>
        </member>
        <member name="T:Genome.Resources.ResourceContextConfigElement">
            <summary>
            Context for loading all resources in this scope
            </summary>
        </member>
        <member name="P:Genome.Resources.ResourceContextConfigElement.Path">
            <summary>
            File path context
            </summary>
        </member>
        <member name="P:Genome.Resources.ResourceContextConfigElement.ContentType">
            <summary>
            Configuration resource content type
            </summary>
        </member>
        <member name="P:Genome.Resources.ResourceContextConfigElement.Resources">
            <summary>
            Resource array
            </summary>
        </member>
        <member name="T:Genome.Resources.ResourceConfigElement">
            <summary>
            Configuration resource 
            </summary>
        </member>
        <member name="P:Genome.Resources.ResourceConfigElement.Id">
            <summary>
            Resource identifier
            </summary>
        </member>
        <member name="P:Genome.Resources.ResourceConfigElement.ContentType">
            <summary>
            Configuration resource content type
            </summary>
        </member>
        <member name="P:Genome.Resources.ResourceConfigElement.Bindings">
            <summary>
            Single bindings
            </summary>
        </member>
        <member name="P:Genome.Resources.ResourceConfigElement.Assignations">
            <summary>
            Direct value assignations
            </summary>
        </member>
        <member name="P:Genome.Resources.ResourceConfigElement.ArrayBindings">
            <summary>
            Single bindings
            </summary>
        </member>
        <member name="P:Genome.Resources.ResourceConfigElement.AttributeContent">
            <summary>
            A content defained in attribute
            </summary>
        </member>
        <member name="P:Genome.Resources.ResourceConfigElement.Content">
            <summary>
            Resource content
            </summary>
        </member>
        <member name="T:Genome.Resources.AssignationConfigElement">
            <summary>
            Direct value assignation
            </summary>
        </member>
        <member name="P:Genome.Resources.AssignationConfigElement.Property">
            <summary>
            Property id or name
            </summary>
        </member>
        <member name="P:Genome.Resources.AssignationConfigElement.AttributeValue">
            <summary>
            Assign value
            </summary>
        </member>
        <member name="P:Genome.Resources.AssignationConfigElement.Reference">
            <summary>
            reference to other resource
            </summary>
        </member>
        <member name="P:Genome.Resources.AssignationConfigElement.FactoryId">
            <summary>
            Object factory identifier. Only if Reference property is not null
            </summary>
        </member>
        <member name="P:Genome.Resources.AssignationConfigElement.FactoryCat">
            <summary>
            Object factory category identifier. Only if Reference property is not null
            </summary>
        </member>
        <member name="P:Genome.Resources.AssignationConfigElement.Value">
            <summary>
            Assign value
            </summary>
        </member>
        <member name="T:Genome.Resources.ResourceConfigBinding">
            <summary>
            Resource property binding
            </summary>
        </member>
        <member name="T:Genome.Resources.ResourceConfigBindingReference">
            <summary>
            Resource config binding reference
            </summary>
        </member>
        <member name="P:Genome.Resources.ResourceConfigBindingReference.Reference">
            <summary>
            Reference to other resource
            </summary>
        </member>
        <member name="P:Genome.Resources.ResourceConfigBindingReference.FactoryId">
            <summary>
            Object factory identifier
            </summary>
        </member>
        <member name="P:Genome.Resources.ResourceConfigBindingReference.FactoryCat">
            <summary>
            Object factory category identifier
            </summary>
        </member>
        <member name="P:Genome.Resources.ResourceConfigBindingReference.InlineResource">
            <summary>
            Inline defined resource
            </summary>
        </member>
        <member name="P:Genome.Resources.ResourceConfigBinding.Property">
            <summary>
            Property key or property name
            </summary>
        </member>
        <member name="T:Genome.Resources.ResourceConfigArrayBinding">
            <summary>
            Resource array property binding
            </summary>
        </member>
        <member name="P:Genome.Resources.ResourceConfigArrayBinding.Property">
            <summary>
            Property key or property name
            </summary>
        </member>
        <member name="P:Genome.Resources.ResourceConfigArrayBinding.Items">
            <summary>
            Simple bindings
            </summary>
        </member>
        <member name="T:Genome.Resources.ResourceBinding">
            <summary>
            Represent binding info
            </summary>
        </member>
        <member name="T:Genome.Resources.PropertyBinding">
            <summary>
            Specifies resource property
            </summary>
        </member>
        <member name="P:Genome.Resources.PropertyBinding.Key">
            <summary>
            Propoerty key
            </summary>
        </member>
        <member name="P:Genome.Resources.PropertyBinding.StringKey">
            <summary>
            Property string key (name)
            </summary>
        </member>
        <member name="P:Genome.Resources.ResourceBinding.Reference">
            <summary>
            Reference to resource
            </summary>
        </member>
        <member name="T:Genome.Resources.ResourceArrayBinding">
            <summary>
            Represent binding info
            </summary>
        </member>
        <member name="P:Genome.Resources.ResourceArrayBinding.References">
            <summary>
            References to resources
            </summary>
        </member>
        <member name="T:Genome.Resources.ResourceReference">
            <summary>
            Contains information about reference to resource
            </summary>
        </member>
        <member name="P:Genome.Resources.ResourceReference.ResourceId">
            <summary>
            Referenced resource identifier
            </summary>
        </member>
        <member name="P:Genome.Resources.ResourceReference.OverrideFactoryType">
            <summary>
            If not null than use it for object creation
            </summary>
        </member>
        <member name="T:Genome.Resources.OverrideFactoryType">
            <summary>
            Contains information about object creation
            </summary>
        </member>
        <member name="P:Genome.Resources.OverrideFactoryType.FactoryId">
            <summary>
            Factory identifier
            </summary>
        </member>
        <member name="P:Genome.Resources.OverrideFactoryType.FactoryCategoryId">
            <summary>
            Factory category identifier
            </summary>
        </member>
        <member name="T:Genome.Resources.ResourceState">
            <summary>
            Resource state
            </summary>
        </member>
        <member name="F:Genome.Resources.ResourceState.None">
            <summary>
            Raw resource
            </summary>
        </member>
        <member name="F:Genome.Resources.ResourceState.Ready">
            <summary>
            Resource is ready to use
            </summary>
        </member>
        <member name="F:Genome.Resources.ResourceState.Loading">
            <summary>
            Resource is loading
            </summary>
        </member>
        <member name="F:Genome.Resources.ResourceState.Fail">
            <summary>
            Resource fail
            </summary>
        </member>
        <member name="T:Genome.Infrastructure.AssemblyInitializer">
            <summary>
            Initializes and releases assembly resources
            </summary>
        </member>
        <member name="M:Genome.Infrastructure.AssemblyInitializer.PreInit">
            <summary>
            Acts that performes before assembly scanning
            </summary>
        </member>
        <member name="M:Genome.Infrastructure.AssemblyInitializer.PostInit">
            <summary>
            Acts that performes after assembly scanning
            </summary>
        </member>
        <member name="M:Genome.Infrastructure.AssemblyInitializer.OnPreInit">
            <summary>
            Acts that performes before assembly scanning
            </summary>
        </member>
        <member name="M:Genome.Infrastructure.AssemblyInitializer.OnPostInit">
            <summary>
            Acts that performes after assembly scanning
            </summary>
        </member>
        <member name="T:Genome.AdvancedPropertyBase`1">
            <summary>
            Advanced property. Allow to subscribe for value changing
            </summary>
            <typeparam name="TVal">alue type</typeparam>
        </member>
        <member name="M:Genome.AdvancedPropertyBase`1.#ctor(System.Object)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.AdvancedPropertyBase`1"/>
            </summary>
            <param name="owner">proeprty owner object</param>
        </member>
        <member name="M:Genome.AdvancedPropertyBase`1.OnValueChanged(`0,`0)">
            <summary>
            PropertyChanged invokator
            </summary>
        </member>
        <member name="M:Genome.AdvancedPropertyBase`1.op_Implicit(Genome.AdvancedPropertyBase{`0})~`0">
            <summary>
            An implicit converting to value
            </summary>
        </member>
        <member name="P:Genome.AdvancedPropertyBase`1.Value">
            <summary>
            property value
            </summary>
        </member>
        <member name="P:Genome.AdvancedPropertyBase`1.Owner">
            <summary>
            Property owner object
            </summary>
        </member>
        <member name="E:Genome.AdvancedPropertyBase`1.Changed">
            <summary>
            Occures when value has been changed
            </summary>
        </member>
        <member name="T:Genome.PropertyChangedEventArgs`1">
            <summary>
            Property alue changed event arguments
            </summary>
            <typeparam name="TVal">property cakue type</typeparam>
        </member>
        <member name="M:Genome.PropertyChangedEventArgs`1.#ctor(`0,`0)">
            <summary>
            Initializes a new instanace of <see cref="T:Genome.PropertyChangedEventArgs`1"/>
            </summary>
            <param name="oldValue">old value</param>
            <param name="newValue">new value</param>
        </member>
        <member name="P:Genome.PropertyChangedEventArgs`1.OldValue">
            <summary>
            Old value
            </summary>
        </member>
        <member name="P:Genome.PropertyChangedEventArgs`1.NewValue">
            <summary>
            New value
            </summary>
        </member>
        <member name="T:Genome.AdvancedProperty`1">
            <summary>
            Full access advanced property
            </summary>
            <typeparam name="TVal">Property value type</typeparam>
        </member>
        <member name="M:Genome.AdvancedProperty`1.#ctor(System.Object)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.AdvancedProperty`1"/>
            </summary>
            <param name="owner">proeprty owner object</param>
        </member>
        <member name="M:Genome.AdvancedProperty`1.op_Implicit(`0)~Genome.AdvancedProperty{`0}">
            <summary>
            An implicit converting to value
            </summary>
        </member>
        <member name="P:Genome.AdvancedProperty`1.Value">
            <summary>
            property value
            </summary>
        </member>
        <member name="T:Genome.ReadonlyAdvancedProperty`1">
            <summary>
            Read only advanced property
            </summary>
            <typeparam name="TVal">property value type</typeparam>
        </member>
        <member name="M:Genome.ReadonlyAdvancedProperty`1.#ctor(System.Object,Genome.ReadonlyAdvancedProperty{`0}.Setter@)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.AdvancedProperty`1"/>
            </summary>
            <param name="owner">proeprty owner object</param>
            <param name="setter">property value setter</param>
        </member>
        <member name="T:Genome.ReadonlyAdvancedProperty`1.Setter">
            <summary>
            Read only advanced property sertter
            </summary>
        </member>
        <member name="M:Genome.ReadonlyAdvancedProperty`1.Setter.#ctor(Genome.ReadonlyAdvancedProperty{`0})">
            <summary>
            Initializes a new instance of <see cref="T:Genome.ReadonlyAdvancedProperty`1.Setter"/>
            </summary>
            <param name="property">readonly property</param>
        </member>
        <member name="M:Genome.ReadonlyAdvancedProperty`1.Setter.SetValue(`0)">
            <summary>
            Sets a value to readonly advanced property
            </summary>
            <param name="value">new value</param>
        </member>
        <member name="T:Genome.prop`1">
            <summary>
            Alias for <see cref="T:Genome.AdvancedProperty`1"/>
            </summary>
        </member>
        <member name="M:Genome.prop`1.op_Implicit(`0)~Genome.prop{`0}">
            <summary>
            An implicit converting to value
            </summary>
        </member>
        <member name="T:Genome.readonly_prop`1">
            <summary>
            Alias for <see cref="T:Genome.ReadonlyAdvancedProperty`1"/>
            </summary>
        </member>
        <member name="T:Genome.ICastExtractor">
            <summary>
            Extracts value from holders
            </summary>
        </member>
        <member name="M:Genome.ICastExtractor.TryExtract(System.Object,System.Object@)">
            <summary>
            Extracts value from holder
            </summary>
        </member>
        <member name="T:Ids.AdvancedProperties.TypeHandler">
            <summary>
            <see cref="F:Ids.AdvancedProperties.TypeHandler.Description"/>
            </summary>
        </member>
        <member name="F:Ids.AdvancedProperties.TypeHandler.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.AdvancedProperties.TypeHandler.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Genome.AppStarting.AppControllerAttribute">
            <summary>
            Specifies an app controller
            </summary>
        </member>
        <member name="M:Genome.AppStarting.AppControllerAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.AppStarting.AppControllerAttribute"/>
            </summary>
            <param name="id">controller identifier</param>
        </member>
        <member name="T:Genome.AppStarting.DefaultAppControllerAttribute">
            <summary>
            Specifies a current application controller
            </summary>
        </member>
        <member name="M:Genome.AppStarting.DefaultAppControllerAttribute.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Genome.AppStarting.DefaultAppControllerAttribute"/>
            </summary>
        </member>
        <member name="T:Genome.AppStarting.IApplicationController">
            <summary>
            Uses by core as main application manager
            </summary>
        </member>
        <member name="M:Genome.AppStarting.IApplicationController.Run">
            <summary>
            Runs an application logic
            </summary>
        </member>
        <member name="T:Ids.AppStarting.AppControllers.Current">
            <summary>
            <see cref="F:Ids.AppStarting.AppControllers.Current.Description"/>
            </summary>
        </member>
        <member name="F:Ids.AppStarting.AppControllers.Current.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.AppStarting.AppControllers.Current.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.AppStarting.AppStarter">
            <summary>
            <see cref="F:Ids.AppStarting.AppStarter.Description"/>
            </summary>
        </member>
        <member name="F:Ids.AppStarting.AppStarter.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.AppStarting.AppStarter.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.AppStarting.ContentCategories.ApplicationControllers">
            <summary>
            <see cref="F:Ids.AppStarting.ContentCategories.ApplicationControllers.Description"/>
            </summary>
        </member>
        <member name="F:Ids.AppStarting.ContentCategories.ApplicationControllers.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.AppStarting.ContentCategories.ApplicationControllers.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Genome.Aspects.GenericConstraintAttribute">
            <summary>
            Determines constrant for generic method parameters
            </summary>
        </member>
        <member name="M:Genome.Aspects.GenericConstraintAttribute.#ctor(Genome.Aspects.IGenericParamterValidationStrategy)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Aspects.GenericConstraintAttribute"/>
            </summary>
        </member>
        <member name="T:Genome.Aspects.GenericIsInterfaceAttribute">
            <summary>
            Determines that all generic parameters is interface
            </summary>
        </member>
        <member name="M:Genome.Aspects.GenericIsInterfaceAttribute.#ctor">
            <summary>
            Initializes a new instnace of <see cref="T:Genome.Aspects.GenericIsInterfaceAttribute"/>
            </summary>
        </member>
        <member name="T:Genome.Aspects.GenericIsClassAttribute">
            <summary>
            Determines that all generic parameters is class
            </summary>
        </member>
        <member name="M:Genome.Aspects.GenericIsClassAttribute.#ctor">
            <summary>
            Initializes a new instnace of <see cref="T:Genome.Aspects.GenericIsClassAttribute"/>
            </summary>
        </member>
        <member name="T:Genome.Aspects.InputParameter">
            <summary>
            Contains method calling parameter info and value
            </summary>
        </member>
        <member name="M:Genome.Aspects.InputParameter.#ctor(System.Reflection.ParameterInfo,System.Object)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Aspects.InputParameter"/>
            </summary>
        </member>
        <member name="P:Genome.Aspects.InputParameter.Info">
            <summary>
            Input parameter <see cref="T:System.Reflection.ParameterInfo"/>
            </summary>
        </member>
        <member name="P:Genome.Aspects.InputParameter.Value">
            <summary>
            Input parameter value
            </summary>
        </member>
        <member name="T:Genome.Aspects.ValidateAttribute">
            <summary>
            Determines that parameter must be validated
            </summary>
        </member>
        <member name="T:Genome.Aspects.InvocationControlAttribute">
            <summary>
            Determines a method that invocation, calling parameters and return value under control
            </summary>
        </member>
        <member name="T:Genome.Aspects.InvocationControlAspectHandler">
            <summary>
            Handler for InvocationControlAttribute
            </summary>
        </member>
        <member name="T:Genome.Aspects.InvocationControlException">
            <summary>
            Exception raising during InvocationColectolAttribute processing
            </summary>
        </member>
        <member name="T:Genome.ValidationException">
            <summary>
            Occures when validation fauled
            </summary>
        </member>
        <member name="M:Genome.ValidationException.#ctor">
            <summary>
            Initizliaes a new instance of <see cref="T:Genome.ValidationException"/>
            </summary>
        </member>
        <member name="M:Genome.ValidationException.#ctor(System.String,Genome.Logging.ErrCodeId)">
            <summary>
            Initizliaes a new instance of <see cref="T:Genome.ValidationException"/>
            </summary>
        </member>
        <member name="M:Genome.ValidationException.#ctor(System.String,System.Exception,Genome.Logging.ErrCodeId)">
            <summary>
            Initizliaes a new instance of <see cref="T:Genome.ValidationException"/>
            </summary>
        </member>
        <member name="T:Genome.Aspects.WrapExceptionAttribute">
            <summary>
            Determines parameters for wrapping exceptions that throws from marked method
            </summary>
        </member>
        <member name="M:Genome.Aspects.WrapExceptionAttribute.#ctor(System.String,System.Type)">
            <summary>
            Initiaslizes a new instance of <see cref="T:Genome.Aspects.WrapExceptionAttribute"/>
            </summary>
            <param name="message">exception message</param>
            <param name="wrapExceptionType">wrap exception type</param>
        </member>
        <member name="T:Genome.Aspects.WrapExceptionAspectHandler">
            <summary>
            Wraps unhandled exceptions
            </summary>
        </member>
        <member name="T:Genome.NotSupportedAttribute">
            <summary>
            Attribute to indicate that the marked member of the class is not supported in this implementation
            </summary>
        </member>
        <member name="T:Genome.PropIdAttribute">
            <summary>
            Associates identifier 
            </summary>
        </member>
        <member name="M:Genome.PropIdAttribute.#ctor(System.String)">
            <summary>
            Initalizes a new instance of <see cref="T:Genome.PropIdAttribute"/>
            </summary>
            <param name="key">property identifier</param>
        </member>
        <member name="P:Genome.PropIdAttribute.Id">
            <summary>
            Propert identifier
            </summary>
        </member>
        <member name="T:Ids.Logging.Strings.ErrorCode">
            <summary>
            <see cref="F:Ids.Logging.Strings.ErrorCode.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Logging.Strings.ErrorCode.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Logging.Strings.ErrorCode.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Genome.CancelException">
            <summary>
            Cancel process exception
            </summary>
        </member>
        <member name="M:Genome.CancelException.#ctor">
            <summary>
            Initializes a new instnacve of <see cref="T:Genome.CancelException"/>
            </summary>
        </member>
        <member name="M:Genome.CancelException.#ctor(System.String)">
            <summary>
            Initializes a new instnacve of <see cref="T:Genome.CancelException"/>
            </summary>
        </member>
        <member name="M:Genome.CancelException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instnacve of <see cref="T:Genome.CancelException"/>
            </summary>
        </member>
        <member name="T:Genome.Collections.CollectionRouter`1">
            <summary>
            Unites several collection as one
            </summary>
            <typeparam name="T">item type</typeparam>
        </member>
        <member name="M:Genome.Collections.CollectionRouter`1.#ctor(System.Collections.Generic.IDictionary{System.Type,System.Collections.Generic.ICollection{`0}})">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Collections.CollectionRouter`1"/>
            </summary>
            <param name="map">collecton map</param>
        </member>
        <member name="T:Genome.Collections.CompositeEnumerator`1">
            <summary>
            Goes over several enumerators
            </summary>
            <typeparam name="T">Item type</typeparam>
        </member>
        <member name="M:Genome.Collections.CompositeEnumerator`1.#ctor(System.Collections.Generic.IEnumerator{`0}[])">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Collections.CompositeEnumerator`1"/>
            </summary>
            <param name="enumerators">enumerators</param>
        </member>
        <member name="T:Genome.Collections.CollectionSynchronizer`2">
            <summary>
            Synchronizes an enumerable source with target collection
            </summary>
            <remarks>Can be used as base class and static-mode</remarks>
        </member>
        <member name="T:Genome.ISynchronizer">
            <summary>
            Represent synchronizer
            </summary>
        </member>
        <member name="M:Genome.ISynchronizer.Synchronize">
            <summary>
            Sinchronize something
            </summary>
        </member>
        <member name="M:Genome.Collections.CollectionSynchronizer`2.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.ICollection{`1},Genome.Collections.ICollectionSynchronizerStrategy{`0,`1})">
            <summary>
            Constructor
            </summary>
            <typeparam name="TTarget">target collection item type </typeparam>
            <typeparam name="TSource">enumerable source item type</typeparam>
            <param name="target">target collection</param>
            <param name="source">enumerable source</param>
            <param name="strategy"></param>
        </member>
        <member name="M:Genome.Collections.CollectionSynchronizer`2.Synchronize">
            <summary>
            Synchronizes source and target
            </summary>
        </member>
        <member name="T:Genome.Collections.CollectionSynchronizerStrategy`2">
            <summary>
            Default collection synchronizer strategy
            </summary>
        </member>
        <member name="T:Genome.Collections.ICollectionSynchronizerStrategy`2">
            <summary>
            Represent <see cref="T:Genome.Collections.CollectionSynchronizer`2"/> strategy
            </summary>
        </member>
        <member name="M:Genome.Collections.ICollectionSynchronizerStrategy`2.Compare(`0,`1)">
            <summary>
            Comparisons a target collection items and source items
            </summary>
            <param name="targetObject">target collection item</param>
            <param name="sourceObject">enumerable source item</param>
        </member>
        <member name="M:Genome.Collections.ICollectionSynchronizerStrategy`2.Convert(`0)">
            <summary>
            Converts a enumerable source item to target collection item
            </summary>
            <param name="sourceObject">enumerable source item</param>
            <returns>target collection item</returns>
        </member>
        <member name="M:Genome.Collections.ICollectionSynchronizerStrategy`2.Update(`0,`1)">
            <summary>
            Updates a target collection item by source item
            </summary>
            <param name="targetObject">target collection item</param>
            <param name="sourceObject">enumerable source item</param>
        </member>
        <member name="M:Genome.Collections.ICollectionSynchronizerStrategy`2.IsChanged(`0,`1)">
            <summary>
            Determines that source object has changed after last update
            </summary>
            <param name="targetObject">target collection item</param>
            <param name="sourceObject">enumerable source item</param>
        </member>
        <member name="M:Genome.Collections.ICollectionSynchronizerStrategy`2.OnAdd(`1)">
            <summary>
            Calls when target item adding to target collection.
            </summary>
            <param name="objectForAdd">new target item</param>
            <returns>adding accept flag </returns>
            <remarks>Overrides this method for handle the target item adding</remarks>
        </member>
        <member name="M:Genome.Collections.ICollectionSynchronizerStrategy`2.PreviewOnAdd(`0)">
            <summary>
            Calls when source item prepearing to add to target collection.
            </summary>
            <param name="objectForAdd">nsource item for adding</param>
            <returns>adding accept flag </returns>
            <remarks>Overrides this method for handle the source item adding</remarks>
        </member>
        <member name="M:Genome.Collections.ICollectionSynchronizerStrategy`2.OnRemove(`1)">
            <summary>
            Calls when target item removing from target collection
            </summary>
            <param name="objectForRemove">target item fro remove</param>
            <returns>removing accept flag</returns>
            <remarks>Overrides this method for handle the target item removing</remarks>
        </member>
        <member name="T:Genome.Collections.AdvancedCollectionSynchronizerStrategy`2">
            <summary>
            Collection synchronizer strategy. Detect items service inerfaces and use it if it can
            </summary>
        </member>
        <member name="M:Genome.Collections.AdvancedCollectionSynchronizerStrategy`2.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Collections.AdvancedCollectionSynchronizerStrategy`2"/>
            </summary>
        </member>
        <member name="T:Genome.Collections.CollectionWrapper`2">
            <summary>
            Wrap collection to parametrized access
            </summary>
            <typeparam name="T">item type</typeparam>
            <typeparam name="TSource">source collection item type</typeparam>
        </member>
        <member name="M:Genome.Collections.CollectionWrapper`2.#ctor(System.Collections.Generic.ICollection{`1})">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Collections.CollectionWrapper`2"/>
            </summary>
            <param name="source">source collection</param>
        </member>
        <member name="T:Genome.Collections.EnumeratorWrapper`1">
            <summary>
            Enumerator wrapper
            </summary>
            <typeparam name="T">Item type</typeparam>
        </member>
        <member name="M:Genome.Collections.EnumeratorWrapper`1.#ctor(System.Collections.IEnumerator)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Collections.EnumeratorWrapper`1"/>
            </summary>
        </member>
        <member name="T:Genome.Collections.ObservableDictionary`2">
            <summary>
            Observable dictionary
            </summary>
            <typeparam name="TKey">key type</typeparam>
            <typeparam name="TVal">value type</typeparam>
        </member>
        <member name="M:Genome.Collections.ObservableDictionary`2.#ctor">
            <summary>
            Intializes a new instance of <see cref="T:Genome.Collections.ObservableDictionary`2"/>
            </summary>
        </member>
        <member name="M:Genome.Collections.ObservableDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
            <summary>
            Intializes a new instance of <see cref="T:Genome.Collections.ObservableDictionary`2"/>
            </summary>
        </member>
        <member name="T:Genome.Collections.ObservableReadOnlyDictionary`2">
            <summary>
            read only observable dictionary
            </summary>
            <typeparam name="TKey">key type</typeparam>
            <typeparam name="TVal">value type</typeparam>
        </member>
        <member name="M:Genome.Collections.ObservableReadOnlyDictionary`2.#ctor(Genome.Collections.ObservableDictionary{`0,`1})">
            <summary>
            Intializes a new instance of <see cref="T:Genome.Collections.ObservableDictionary`2"/>
            </summary>
        </member>
        <member name="T:Genome.Collections.ThreadSafeReadonlyCollection`1">
            <summary>
            Represent collection that is thread safe and read only
            </summary>
            <typeparam name="T">item type</typeparam>
        </member>
        <member name="M:Genome.Collections.ThreadSafeReadonlyCollection`1.#ctor(System.Collections.Generic.ICollection{`0},Genome.ReadWriteLocker)">
            <summary>
            Initializes a new instance os <see cref="T:Genome.Collections.ThreadSafeReadonlyCollection`1"/>
            </summary>
        </member>
        <member name="T:Genome.Collections.ThreadSafeDictionary`2">
            <summary>
            Represent a tread safe collection of keys and values
            </summary>
            <typeparam name="TKey">the type of the keys in the dictionary</typeparam>
            <typeparam name="TValue">the type of the values in the dictionary</typeparam>
        </member>
        <member name="M:Genome.Collections.ThreadSafeDictionary`2.#ctor(Genome.ReadWriteLocker)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Collections.ThreadSafeDictionary`2"/>
            </summary>
        </member>
        <member name="M:Genome.Collections.ThreadSafeDictionary`2.Retrieve(`0,System.Func{`1})">
            <summary>
            Gets value by specified key and write defaultValue if value not found
            </summary>
        </member>
        <member name="M:Genome.Collections.ThreadSafeDictionary`2.Retrieve(`0,`1)">
            <summary>
            Gets value by specified key and write defaultValue if value not found
            </summary>
        </member>
        <member name="M:Genome.Collections.ThreadSafeDictionary`2.ForceAdd(`0,`1)">
            <summary>
            Adds a value pair if it not contains with specified key or replace contains
            </summary>
        </member>
        <member name="T:Genome.Collections.ThreadSafeStack`1">
            <summary>
            Represents a variable size last-in-first-out (LIFO) thread safe collection of instances of the same arbitrary type
            </summary>
        </member>
        <member name="M:Genome.Collections.ThreadSafeStack`1.#ctor">
            <summary>
            Initializes a new instance of ThreadSafeStack
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Genome.Collections.ThreadSafeQueue`1" -->
        <member name="M:Genome.Collections.ThreadSafeQueue`1.#ctor">
            <summary>
            Initializes a new instance of ThreadSafeQueue
            </summary>
        </member>
        <member name="T:Genome.Collections.ThreadSafeEnumerable`1">
            <summary>
            Thread safe enumerable
            </summary>
        </member>
        <member name="M:Genome.Collections.ThreadSafeEnumerable`1.#ctor(System.Collections.Generic.IEnumerable{`0},Genome.ReadWriteLocker)">
            <summary>
            initialize new instance of ThreadSafeEnumerable
            </summary>
            <param name="enumerable">wrapped enumerable</param>
            <param name="locker">custom locker</param>
        </member>
        <member name="T:Genome.ConsoleColorContext">
            <summary>
            Sets a console colors
            </summary>
        </member>
        <member name="M:Genome.ConsoleColorContext.#ctor(System.ConsoleColor)">
            <summary>
            Sets console foreground color
            </summary>
            <param name="foreColor">new console foreground color</param>
        </member>
        <member name="M:Genome.ConsoleColorContext.#ctor(System.Nullable{System.ConsoleColor},System.Nullable{System.ConsoleColor})">
            <summary>
            Sets console colors
            </summary>
            <param name="foreColor">new console foreground color</param>
            <param name="bgColor">new console background color</param>
        </member>
        <member name="M:Genome.ConsoleColorContext.Dispose">
            <summary>
            Resets console colors
            </summary>
        </member>
        <member name="T:Genome.DefaultValues">
            <summary>
            Provides default values for types
            </summary>
        </member>
        <member name="M:Genome.DefaultValues.Get``1">
            <summary>
            Provides default values for specified type
            </summary>
        </member>
        <member name="M:Genome.DefaultValues.Get(System.Type)">
            <summary>
            Provides default values for specified type
            </summary>
        </member>
        <member name="M:Genome.DefaultValues.IsDefaultValue(System.Object)">
            <summary>
            Determines that specified value is defulat value
            </summary>
        </member>
        <member name="T:Genome.DisposeMap">
            <summary>
            Provide ability to work with disposed objects and contexts
            </summary>
        </member>
        <member name="M:Genome.DisposeMap.#ctor">
            <summary>
            Initializes a new instnace of <see cref="T:Genome.DisposeMap"/>
            </summary>
        </member>
        <member name="M:Genome.DisposeMap.#ctor(Genome.DisposeMap.InitAct)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.DisposeMap"/>
            </summary>
            <param name="items">contatins pairs of predicates and item creator, that need to add to map</param>
        </member>
        <member name="M:Genome.DisposeMap.#ctor(Genome.DisposeMap.InitMap)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.DisposeMap"/>
            </summary>
            <param name="items">contatins pairs of predicates and items, that need to add to map</param>
        </member>
        <member name="M:Genome.DisposeMap.Add(System.IDisposable,System.Func{System.Boolean})">
            <summary>
            Adds item if predicate is success
            </summary>
        </member>
        <member name="M:Genome.DisposeMap.Add(System.Func{System.IDisposable},System.Func{System.Boolean})">
            <summary>
            Adds item if predicate is success
            </summary>
        </member>
        <member name="T:Genome.EmptyArrays">
            <summary>
            Empty array provider|
            </summary>
        </member>
        <member name="F:Genome.EmptyArrays.EmptyObjectArray">
            <summary>
            Empty object array
            </summary>
        </member>
        <member name="M:Genome.EmptyArrays.Get``1">
            <summary>
            Gets an empty array
            </summary>
        </member>
        <member name="T:Genome.EnumExtensions">
            <summary>
            Extensions for enums
            </summary>
        </member>
        <member name="T:Ids.Stuff.Strings.OperationHasCanceled">
            <summary>
            <see cref="F:Ids.Stuff.Strings.OperationHasCanceled.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Stuff.Strings.OperationHasCanceled.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Stuff.Strings.OperationHasCanceled.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Genome.DictionaryExtensions">
            <summary>
            Extension methods for Dictionary
            </summary>
        </member>
        <member name="M:Genome.DictionaryExtensions.Retrieve``2(System.Collections.Generic.IDictionary{``0,``1},``0,System.Func{``1})">
            <summary>
            Gets value by specified key and write defaultValue if value not found
            </summary>
        </member>
        <member name="M:Genome.DictionaryExtensions.Retrieve``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)">
            <summary>
            Gets value by specified key and write defaultValue if value not found
            </summary>
        </member>
        <member name="M:Genome.DictionaryExtensions.Retrieve``2(System.Collections.Generic.IDictionary{``0,``1},``0)">
            <summary>
            Gets value by specified key and write defaultValue if value not found
            </summary>
        </member>
        <member name="M:Genome.DictionaryExtensions.GetOrDefault``2(System.Collections.Generic.IDictionary{``0,``1},``0)">
            <summary>
            Gets value from dictionary if exists or defaultValue in other case
            </summary>
        </member>
        <member name="M:Genome.DictionaryExtensions.GetOrDefault``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)">
            <summary>
            Gets value from dictionary if exists or defaultValue in other case
            </summary>
        </member>
        <member name="M:Genome.DictionaryExtensions.ForceAdd``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)">
            <summary>
            Adds a value pair if it not contains with specified key or replace contains
            </summary>
        </member>
        <member name="T:Genome.EnumerableExtensions">
            <summary>
            IEnumerable extension
            </summary>
        </member>
        <member name="M:Genome.EnumerableExtensions.Foreach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            Invokes specified action foreach items of target
            </summary>
        </member>
        <member name="M:Genome.EnumerableExtensions.Foreach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Int32})">
            <summary>
            Invokes specified action foreach items of target
            </summary>
        </member>
        <member name="M:Genome.EnumerableExtensions.Combine``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Provide items sequence of items of both targets
            </summary>
        </member>
        <member name="M:Genome.EnumerableExtensions.To``1(System.Collections.IEnumerable)">
            <summary>
            Converts target items to specified type using framework mechanisms
            </summary>
        </member>
        <member name="M:Genome.EnumerableExtensions.IsEmpty(System.Array)">
            <summary>
            Returns 'true' if array is 'null' or empty
            </summary>
        </member>
        <member name="M:Genome.EnumerableExtensions.IsEmpty(System.Collections.ICollection)">
            <summary>
            Returns 'true' if collection is 'null' or empty
            </summary>
        </member>
        <member name="M:Genome.EnumerableExtensions.Join``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,System.Boolean},System.Func{``0,``1,``2})">
            <summary>
            Joins enumerables
            </summary>
        </member>
        <member name="T:Genome.ObjectExtension">
            <summary>
            Object extension 
            </summary>
        </member>
        <member name="M:Genome.ObjectExtension.Release(System.Object)">
            <summary>
            Releases an object
            </summary>
            <param name="target">target object</param>
        </member>
        <member name="M:Genome.ObjectExtension.Using``1(``0,System.Action{``0})">
            <summary>
            The 'using' instruction 
            </summary>
        </member>
        <member name="M:Genome.ObjectExtension.Using``2(``0,System.Func{``0,``1})">
            <summary>
            The 'using' instruction 
            </summary>
        </member>
        <member name="M:Genome.ObjectExtension.To``1(System.Object)">
            <summary>
            Casts object to target type
            </summary>
            <typeparam name="T">target type</typeparam>
            <param name="target">object for reduce</param>
            <returns>result object</returns>
        </member>
        <member name="M:Genome.ObjectExtension.UseTo``1(System.Object,System.Action{``0})">
            <summary>
            Casts object to target type and use it in delegate
            </summary>
            <typeparam name="T">target type</typeparam>
            <param name="target">object for reduce</param>
            <param name="handler">targt usage handler</param>
        </member>
        <member name="M:Genome.ObjectExtension.As``1(System.Object)">
            <summary>
            Safe reduce source object to target type
            </summary>
            <typeparam name="T">target type</typeparam>
            <param name="target">object fro reduce</param>
            <returns>result object</returns>
        </member>
        <member name="M:Genome.ObjectExtension.Is``1(System.Object)">
            <summary>
            Is the target type may be casted to specified type
            </summary>
            <typeparam name="T">specified type</typeparam>
            <param name="target">target object</param>
        </member>
        <member name="M:Genome.ObjectExtension.IfIs``1(System.Object,System.Action{``0},System.Action)">
            <summary>
            Performs action when target is assignable to specified type
            </summary>
        </member>
        <member name="M:Genome.ObjectExtension.GetIfIs``2(System.Object,System.Func{``0,``1},System.Func{``1})">
            <summary>
            Performs action when target is assignable to specified type
            </summary>
        </member>
        <member name="M:Genome.ObjectExtension.IfNotNull``1(``0,System.Action{``0},System.Action)">
            <summary>
            Perform an action when target is not NULL
            </summary>
        </member>
        <member name="M:Genome.ObjectExtension.GetIfNotNull``2(``0,System.Func{``0,``1})">
            <summary>
            Perform function when target is not NULL
            </summary>
        </member>
        <member name="M:Genome.ObjectExtension.IfNotDefault``1(``0,System.Action{``0},System.Action)">
            <summary>
            Perform an action when target is not default
            </summary>
        </member>
        <member name="M:Genome.ObjectExtension.GetSequence``1(``0,System.Func{``0,``0})">
            <summary>
            Gets a sequence of objects that has referenceto next same object
            </summary>
        </member>
        <member name="T:Genome.PriorityHelpers">
            <summary>
            Contains methods that help you use the Priority
            </summary>
        </member>
        <member name="M:Genome.PriorityHelpers.GetProcessPriority(System.Attribute)">
            <summary>
            Gets an attribute instance process priority
            </summary>
        </member>
        <member name="M:Genome.PriorityHelpers.GetTypeProcessPriority(System.Type)">
            <summary>
            Gets an attribute type process priority
            </summary>
        </member>
        <member name="T:Genome.SafePuller">
            <summary>
            Proides far object through several members calls
            </summary>
        </member>
        <member name="M:Genome.SafePuller.SafePull``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Pulls out value or default(TResult) if one of expression items is null 
            </summary>
            <param name="target">start object</param>
            <param name="expression">call sequence</param>
        </member>
        <member name="T:Genome.TypeExtensions">
            <summary>
            Extensions for <see cref="T:System.Type"/>
            </summary>
        </member>
        <member name="M:Genome.TypeExtensions.IsEqualsTo(System.Type,System.Type)">
            <summary>
            Indicates that types are equals taking into account a service inheritances
            </summary>
            <param name="originalType">original type</param>
            <param name="targetType">target type</param>
        </member>
        <member name="M:Genome.TypeExtensions.IsImplementInterface``1(System.Type)">
            <summary>
            indicates that type is implement specified interface taking into account a service inheritances
            </summary>
        </member>
        <member name="M:Genome.TypeExtensions.IsImplementInterface(System.Type,System.Type)">
            <summary>
            indicates that type is implement specified interface taking into account a service inheritances
            </summary>
        </member>
        <member name="M:Genome.TypeExtensions.GetUnderlineType(System.Type)">
            <summary>
            Gets an underline type
            </summary>
        </member>
        <member name="T:Genome.UriExtensions">
            <summary>
            Extensions for <see cref="T:System.Uri"/>
            </summary>
        </member>
        <member name="M:Genome.UriExtensions.ForceSlash(System.Uri)">
            <summary>
            Add slash to end if need
            </summary>
        </member>
        <member name="T:Genome.IContextDependentObject">
            <summary>
            Object that state is dependents from some context
            </summary>
        </member>
        <member name="E:Genome.IContextDependentObject.DependentContextChanged">
            <summary>
            Occures when dependent context has been changed
            </summary>
        </member>
        <member name="T:Ids.Application.ContentCategories.Default">
            <summary>
            A default category identifier
            </summary>
        </member>
        <member name="F:Ids.Application.ContentCategories.Default.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Application.ContentCategories.Default.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.Application.FactoryCategories.Default">
            <summary>
            <see cref="F:Ids.Application.FactoryCategories.Default.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Application.FactoryCategories.Default.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Application.FactoryCategories.Default.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Genome.IIdentifiable">
            <summary>
            Represent identifiable object
            </summary>
        </member>
        <member name="M:Genome.IIdentifiable.GetId">
            <summary>
            Gets an object identifier
            </summary>
        </member>
        <member name="T:Genome.IIdentifiable`1">
            <summary>
            Represent identifiable object
            </summary>
        </member>
        <member name="P:Genome.IIdentifiable`1.Id">
            <summary>
            Object identifier
            </summary>
        </member>
        <member name="T:Genome.InstanceFactoring.DelegateFactory">
            <summary>
            Factory based on factory-delegate
            </summary>
        </member>
        <member name="M:Genome.InstanceFactoring.DelegateFactory.#ctor(System.Func{System.Object})">
            <summary>
            Constructor 
            </summary>
            <param name="factoryDelegate">delegate which create target instance</param>
        </member>
        <member name="T:Genome.InstanceFactoring.DelegateFactory`1">
            <summary>
            Generic factory based on factory-delegate
            </summary>
        </member>
        <member name="M:Genome.InstanceFactoring.DelegateFactory`1.#ctor(System.Func{`0})">
            <summary>
            Constructor 
            </summary>
            <param name="factoryDelegate">delegate which create target instance</param>
        </member>
        <member name="T:Genome.InstanceFactoring.DelegateFactory`2">
            <summary>
            Generic factory based on factory-delegate
            </summary>
        </member>
        <member name="T:Genome.IInstanceFactory`2">
            <summary>
            Instance factory interface. Takes specified type argument to create object
            </summary>
            <typeparam name="TArg">argument type</typeparam>
            <typeparam name="TResult">result object type</typeparam>
        </member>
        <member name="M:Genome.IInstanceFactory`2.Create(`0)">
            <summary>
            Create object method
            </summary>
        </member>
        <member name="M:Genome.InstanceFactoring.DelegateFactory`2.#ctor(System.Func{`0,`1})">
            <summary>
            Constructor 
            </summary>
            <param name="factoryDelegate">delegate which create target instance</param>
        </member>
        <member name="T:Genome.IUniversalInstanceFactory`1">
            <summary>
            Generic universal instance factory interface. Takes several parameters to create instance.
            </summary>
        </member>
        <member name="M:Genome.IUniversalInstanceFactory`1.Create(System.Object[])">
            <summary>
            Create object by several parameters
            </summary>
            <typeparam name="T">type to reduce</typeparam>
            <param name="parameters">parameters to creation</param>
            <returns>result object</returns>
        </member>
        <member name="T:Genome.IUniversalInstanceFactory">
            <summary>
            Universal instance factory interface. Takes several parameters to create instance.
            </summary>
        </member>
        <member name="M:Genome.IUniversalInstanceFactory.Create(System.Object[])">
            <summary>
            Create object by several parameters
            </summary>
            <param name="parameters">parameters to creation</param>
            <returns>result object</returns>
        </member>
        <member name="T:Genome.InstanceFactoring.RegistryFactory">
            <summary>
            Registry instance factory. Takes factory type registry identifiers for find factory type to create instance
            </summary>
        </member>
        <member name="M:Genome.InstanceFactoring.RegistryFactory.#ctor(Genome.Registry.RegistryId)">
            <summary>
            Constructor which takes factory category identifier
            </summary>
            <param name="id">registry factory type identifier</param>
        </member>
        <member name="T:Genome.InstanceFactoring.RegistryFactory`1">
            <summary>
            Generic registry instance factory. Takes factory type registry identifiers for find factory type to create instance
            </summary>
            <typeparam name="T">type to reduce result</typeparam>
        </member>
        <member name="M:Genome.InstanceFactoring.RegistryFactory`1.#ctor(Genome.Registry.RegistryId)">
            <summary>
            Constructor which takes factory category identifier
            </summary>
            <param name="id">registry factory type identifier</param>
        </member>
        <member name="T:Genome.InstanceFactoring.RegistryFactory`2">
            <summary>
            Generic registry instance factory. Takes factory type registry identifiers for find factory type 
            and takes specified type argument to create instance
            </summary>
            <typeparam name="TResult">type to reduce result</typeparam>
            <typeparam name="TArg">argument type</typeparam>
        </member>
        <member name="M:Genome.InstanceFactoring.RegistryFactory`2.#ctor(Genome.ObjectId)">
            <summary>
            Constructor
            </summary>
            <param name="id">Registered factory type identifier</param>
        </member>
        <member name="M:Genome.InstanceFactoring.RegistryFactory`2.#ctor(Genome.Registry.RegistryId)">
            <summary>
            Constructor which takes factory category identifier
            </summary>
            <param name="id">registry factory type identifier</param>
        </member>
        <member name="T:Genome.InstanceFactoring.SimpleFactory">
            <summary>
            Simple factory. Takes factory type to create instance.
            </summary>
        </member>
        <member name="M:Genome.InstanceFactoring.SimpleFactory.#ctor(System.Type)">
            <summary>
            Constructor
            </summary>
            <param name="targetType">factory type</param>
        </member>
        <member name="T:Genome.InstanceFactoring.SimpleFactory`1">
            <summary>
            Simple generic factory
            </summary>
            <typeparam name="T">Type to reduce</typeparam>
        </member>
        <member name="M:Genome.InstanceFactoring.SimpleFactory`1.#ctor(System.Type)">
            <summary>
            Constructor
            </summary>
            <param name="targetType">factory type</param>
        </member>
        <member name="M:Genome.InstanceFactoring.SimpleFactory`1.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:Genome.InstanceFactoring.SimpleFactory`2">
            <summary>
            Simple generic factory with specified argument type
            </summary>
            <typeparam name="TResult">Type to reduce</typeparam>
            <typeparam name="TArg">argument type</typeparam>
        </member>
        <member name="M:Genome.InstanceFactoring.SimpleFactory`2.#ctor(System.Type)">
            <summary>
            Constructor
            </summary>
            <param name="targetType">factory type</param>
        </member>
        <member name="T:Genome.InterfaceAdapter">
            <summary>
            Provides connection inter interface and class with same member set
            </summary>
        </member>
        <member name="M:Genome.InterfaceAdapter.CreateProxy``1(System.Object)">
            <summary>
            Creates a proxy
            </summary>
        </member>
        <member name="M:Genome.InterfaceAdapter.#ctor(System.Object)">
            <summary>
            initializes a new instance of <see cref="T:Genome.InterfaceAdapter"/>
            </summary>
            <param name="innerObject"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Genome.InterfaceAdapter.Invoke(System.String,System.Object[])">
            <summary>
            Invokes target method
            </summary>
        </member>
        <member name="T:Genome.IUpdatable">
            <summary>
            Defines an updatable object
            </summary>
        </member>
        <member name="M:Genome.IUpdatable.Update">
            <summary>
            Updates an object
            </summary>
        </member>
        <member name="T:Genome.IUpdatable`1">
            <summary>
            Defines an updatable object
            </summary>
        </member>
        <member name="M:Genome.IUpdatable`1.Update(`0)">
            <summary>
            Updates an object by source
            </summary>
        </member>
        <member name="T:Genome.LifeTimeKeeper">
            <summary>
            Keeps associated objects until target object disposing
            </summary>
        </member>
        <member name="M:Genome.LifeTimeKeeper.AddToLifeTimeList(System.IDisposable,System.Object)">
            <summary>
            Add associated object to life-time list of target object
            </summary>
            <param name="associatedObject">associated object which will be disposed when target object will be disposed</param>
        </member>
        <member name="M:Genome.LifeTimeKeeper.ReleaseLifeTimeList(System.Object)">
            <summary>
            Disposes all associated objects of target object
            </summary>
        </member>
        <member name="T:Genome.ObjectProviding.DelegateObjectProvider`1">
            <summary>
            Provides a specified method result
            </summary>
            <typeparam name="T">provided object type</typeparam>
        </member>
        <member name="T:Genome.ObjectProviding.DelegateObjectProvider">
            <summary>
            Provides a specified method result
            </summary>
        </member>
        <member name="M:Genome.ObjectProviding.DelegateObjectProvider.#ctor(System.Func{System.Object})">
            <summary>
            Constructor
            </summary>
            <param name="getMethod">delegate which will be called every time that provides an object</param>
        </member>
        <member name="M:Genome.ObjectProviding.DelegateObjectProvider`1.#ctor(System.Func{System.Object})">
            <summary>
            Constructor
            </summary>
            <param name="getMethod">delegate which will be called every time that provides an object</param>
        </member>
        <member name="M:Genome.ObjectProviding.DelegateObjectProvider`1.#ctor(System.Func{`0})">
            <summary>
            Constructor
            </summary>
            <param name="getMethod">delegate which will be called every time that provides an object</param>
        </member>
        <member name="T:Genome.ObjectProviding.FactoryObjectProvider">
            <summary>
            Object provider which uses factory every time it provide the target
            </summary>
        </member>
        <member name="M:Genome.ObjectProviding.FactoryObjectProvider.#ctor(Genome.IInstanceFactory)">
            <summary>
            Constructor
            </summary>
            <param name="factory">factory for objects providing</param>
        </member>
        <member name="T:Genome.ObjectProviding.FactoryObjectProvider`1">
            <summary>
            Generic object provider which uses factory every time it provide the target
            </summary>
            <typeparam name="T">provided object type</typeparam>   
        </member>
        <member name="M:Genome.ObjectProviding.FactoryObjectProvider`1.#ctor(Genome.IInstanceFactory{`0})">
            <summary>
            Constructor
            </summary>
            <param name="factory">factory for objects providing</param>
        </member>
        <member name="T:Genome.ObjectProviding.RegistryObjectProvider`1">
            <summary>
            Provides object which getting from core registry
            </summary>
            <typeparam name="T">provided object type</typeparam>
        </member>
        <member name="T:Genome.ObjectProviding.RegistryObjectProvider">
            <summary>
            Provides object which getting from core registry
            </summary>
        </member>
        <member name="M:Genome.ObjectProviding.RegistryObjectProvider.#ctor(Genome.Registry.RegistryId)">
            <summary>
            Constructor
            </summary>
            <param name="id">provided object identifier</param>
        </member>
        <member name="M:Genome.ObjectProviding.RegistryObjectProvider`1.#ctor(Genome.Registry.RegistryId)">
            <summary>
            Constructor
            </summary>
            <param name="id">provided object identifier</param>
        </member>
        <member name="T:Genome.ObjectProviding.SimpleObjectProvider`1">
            <summary>
            Provides object which it received in constructor
            </summary>
            <typeparam name="T">provided object type</typeparam>
        </member>
        <member name="T:Genome.ObjectProviding.SimpleObjectProvider">
            <summary>
            Provides object which it received in constructor
            </summary>
        </member>
        <member name="M:Genome.ObjectProviding.SimpleObjectProvider.#ctor(System.Object)">
            <summary>
            Constructor
            </summary>
            <param name="target">provided object</param>
        </member>
        <member name="P:Genome.ObjectProviding.SimpleObjectProvider.Target">
            <summary>
            Provided object which was obtained in the constructor
            </summary>
        </member>
        <member name="M:Genome.ObjectProviding.SimpleObjectProvider`1.#ctor(`0)">
            <summary>
            Constructor
            </summary>
            <param name="target">provided object</param>
        </member>
        <member name="M:Genome.ObjectProviding.SimpleObjectProvider`1.op_Implicit(`0)~Genome.ObjectProviding.SimpleObjectProvider{`0}">
            <summary>
            Converts simple object to object provider which provides this object
            </summary>
        </member>
        <member name="T:Genome.ObjectProviding.SingletonProvider`1">
            <summary>
            Singleton provider
            </summary>
            <typeparam name="T">singleton type</typeparam>
        </member>
        <member name="M:Genome.ObjectProviding.SingletonProvider`1.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:Genome.ProcessingModel.ErrorOperationResult">
            <summary>
            Exception based negative operation result
            </summary>
        </member>
        <member name="T:Genome.ProcessingModel.OperationResult">
            <summary>
            Contains operation result parameters
            </summary>
        </member>
        <member name="F:Genome.ProcessingModel.OperationResult.Success">
            <summary>
            Default success result
            </summary>
        </member>
        <member name="F:Genome.ProcessingModel.OperationResult.Fail">
            <summary>
            Default fail result
            </summary>
        </member>
        <member name="M:Genome.ProcessingModel.OperationResult.#ctor(System.Boolean,System.String)">
            <summary>
            Creates a new instance of <see cref="T:Genome.ProcessingModel.OperationResult"/>
            </summary>
        </member>
        <member name="M:Genome.ProcessingModel.OperationResult.ThrowIfNegative">
            <summary>
            Throws a <see cref="T:Genome.ValidationException"/> based on current operation result if it is negative
            </summary>
        </member>
        <member name="P:Genome.ProcessingModel.OperationResult.Value">
            <summary>
            Result value
            </summary>
        </member>
        <member name="P:Genome.ProcessingModel.OperationResult.Reason">
            <summary>
            Result reason
            </summary>
        </member>
        <member name="M:Genome.ProcessingModel.ErrorOperationResult.#ctor(System.Exception,System.Boolean)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.ProcessingModel.ErrorOperationResult"/>
            </summary>
        </member>
        <member name="T:Genome.ProcessingModel.IOperationResult">
            <summary>
            Contains operation result parameters
            </summary>
        </member>
        <member name="P:Genome.ProcessingModel.IOperationResult.Value">
            <summary>
            Result value
            </summary>
        </member>
        <member name="P:Genome.ProcessingModel.IOperationResult.Reason">
            <summary>
            Result reason
            </summary>
        </member>
        <member name="T:Genome.Pair`2">
            <summary>
            Represents a pair
            </summary>
        </member>
        <member name="M:Genome.Pair`2.#ctor(`0,`1)">
            <summary>
            Initializes a new instnace of <see cref="T:Genome.Pair`2"/>
            </summary>
        </member>
        <member name="P:Genome.Pair`2.First">
            <summary>
            The first item
            </summary>
        </member>
        <member name="P:Genome.Pair`2.Second">
            <summary>
            The second item
            </summary>
        </member>
        <member name="T:Genome.Priority">
            <summary>
            Values of some priority (queue processing for example)
            </summary>
        </member>
        <member name="T:Genome.ProcessingModel.Progress">
            <summary>
            Provides an tread safe mechanisms for nested progress calls
            </summary>
        </member>
        <member name="M:Genome.ProcessingModel.Progress.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Genome.ProcessingModel.Progress"/>
            </summary>
        </member>
        <member name="M:Genome.ProcessingModel.Progress.AddWork(System.Double,System.String)">
            <summary>
            Add sub-progress work 
            </summary>
            <param name="max">max progress value</param>
            <param name="description">work description</param>
            <returns>rollback object</returns>
        </member>
        <member name="M:Genome.ProcessingModel.Progress.RemoveWork">
            <summary>
            Remove sub-progress work
            </summary>
        </member>
        <member name="M:Genome.ProcessingModel.Progress.Clear">
            <summary>
            Remove all progress works
            </summary>
        </member>
        <member name="M:Genome.ProcessingModel.Progress.IncrementWork">
            <summary>
            Increment current work progress
            </summary>
        </member>
        <member name="P:Genome.ProcessingModel.Progress.State">
            <summary>
            Current progress state
            </summary>
        </member>
        <member name="T:Genome.ProcessingModel.ProgressState">
            <summary>
            Contains processing progress state
            </summary>
        </member>
        <member name="P:Genome.ProcessingModel.ProgressState.Percents">
            <summary>
            Percent of process completion
            </summary>
        </member>
        <member name="P:Genome.ProcessingModel.ProgressState.Description">
            <summary>
            Work description
            </summary>
        </member>
        <member name="T:Genome.PropertyGetter">
            <summary>
            Provides access to properties by path
            </summary>
        </member>
        <member name="M:Genome.PropertyGetter.GetValue(System.String,System.Object)">
            <summary>
            get value by specified path
            </summary>
            <param name="path">property path</param>
            <param name="target">target object</param>
            <returns>fount property value or null</returns>
        </member>
        <member name="T:Genome.ReadWriteLocker">
            <summary>
            Represents a lock that is used to manage access to a resource, allowing multiple threads for reading or exclusive access for writing.
            </summary>
        </member>
        <member name="M:Genome.ReadWriteLocker.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Genome.ReadWriteLocker.Read">
            <summary>
            Enter the lock in read mode
            </summary>
            <returns>end read object</returns>
        </member>
        <member name="M:Genome.ReadWriteLocker.WrRead">
            <summary>
            Enter the lock in read mode with possibility to inner enter to write mode
            </summary>
            <returns>end read object</returns>
        </member>
        <member name="M:Genome.ReadWriteLocker.Write">
            <summary>
            Enter the lock in write mode
            </summary>
            <returns>end write object</returns>
        </member>
        <member name="T:Genome.Reflection.ReflectionUtils">
            <summary>
            Provides member utils
            </summary>
        </member>
        <member name="M:Genome.Reflection.ReflectionUtils.GetAllMembers``1(System.Type,System.Reflection.BindingFlags)">
            <summary>
            Returns full hierarchy members
            </summary>
        </member>
        <member name="M:Genome.Reflection.ReflectionUtils.GetFieldInfo``1(System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
            Gets field info
            </summary>
        </member>
        <member name="M:Genome.Reflection.ReflectionUtils.GetFieldInfo``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Gets field info
            </summary>
        </member>
        <member name="M:Genome.Reflection.ReflectionUtils.GetPropertyInfo``1(System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
            Gets property info
            </summary>
        </member>
        <member name="M:Genome.Reflection.ReflectionUtils.GetPropertyInfo``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Gets property info
            </summary>
        </member>
        <member name="M:Genome.Reflection.ReflectionUtils.GetActionInfo``1(System.Linq.Expressions.Expression{System.Func{``0,System.Action}})">
            <summary>
            Gets method info
            </summary>
        </member>
        <member name="M:Genome.Reflection.ReflectionUtils.GetActionInfo``2(System.Linq.Expressions.Expression{System.Func{``0,System.Action{``1}}})">
            <summary>
            Gets method info
            </summary>
        </member>
        <member name="M:Genome.Reflection.ReflectionUtils.GetActionInfo``3(System.Linq.Expressions.Expression{System.Func{``0,System.Action{``1,``2}}})">
            <summary>
            Gets method info
            </summary>
        </member>
        <member name="M:Genome.Reflection.ReflectionUtils.GetActionInfo``4(System.Linq.Expressions.Expression{System.Func{``0,System.Action{``1,``2,``3}}})">
            <summary>
            Gets method info
            </summary>
        </member>
        <member name="M:Genome.Reflection.ReflectionUtils.GetActionInfo``5(System.Linq.Expressions.Expression{System.Func{``0,System.Action{``1,``2,``3,``4}}})">
            <summary>
            Gets method info
            </summary>
        </member>
        <member name="M:Genome.Reflection.ReflectionUtils.GetFuncInfo``2(System.Linq.Expressions.Expression{System.Func{``0,System.Func{``1}}})">
            <summary>
            Gets method info
            </summary>
        </member>
        <member name="M:Genome.Reflection.ReflectionUtils.GetFuncInfo``3(System.Linq.Expressions.Expression{System.Func{``0,System.Func{``1,``2}}})">
            <summary>
            Gets method info
            </summary>
        </member>
        <member name="M:Genome.Reflection.ReflectionUtils.GetFuncInfo``4(System.Linq.Expressions.Expression{System.Func{``0,System.Func{``1,``2,``3}}})">
            <summary>
            Gets method info
            </summary>
        </member>
        <member name="M:Genome.Reflection.ReflectionUtils.GetFuncInfo``5(System.Linq.Expressions.Expression{System.Func{``0,System.Func{``1,``2,``3,``4}}})">
            <summary>
            Gets method info
            </summary>
        </member>
        <member name="M:Genome.Reflection.ReflectionUtils.GetFuncInfo``6(System.Linq.Expressions.Expression{System.Func{``0,System.Func{``1,``2,``3,``4,``5}}})">
            <summary>
            Gets method info
            </summary>
        </member>
        <member name="M:Genome.Reflection.ReflectionUtils.GetActionInfo(System.Linq.Expressions.Expression{System.Func{System.Action}})">
            <summary>
            Gets method info
            </summary>
        </member>
        <member name="M:Genome.Reflection.ReflectionUtils.GetActionInfo``1(System.Linq.Expressions.Expression{System.Func{System.Action{``0}}})">
            <summary>
            Gets method info
            </summary>
        </member>
        <member name="M:Genome.Reflection.ReflectionUtils.GetActionInfo``2(System.Linq.Expressions.Expression{System.Func{System.Action{``0,``1}}})">
            <summary>
            Gets method info
            </summary>
        </member>
        <member name="M:Genome.Reflection.ReflectionUtils.GetActionInfo``3(System.Linq.Expressions.Expression{System.Func{System.Action{``0,``1,``2}}})">
            <summary>
            Gets method info
            </summary>
        </member>
        <member name="M:Genome.Reflection.ReflectionUtils.GetActionInfo``4(System.Linq.Expressions.Expression{System.Func{System.Action{``0,``1,``2,``3}}})">
            <summary>
            Gets method info
            </summary>
        </member>
        <member name="M:Genome.Reflection.ReflectionUtils.GetFuncInfo``1(System.Linq.Expressions.Expression{System.Func{System.Func{``0}}})">
            <summary>
            Gets method info
            </summary>
        </member>
        <member name="M:Genome.Reflection.ReflectionUtils.GetFuncInfo``2(System.Linq.Expressions.Expression{System.Func{System.Func{``0,``1}}})">
            <summary>
            Gets method info
            </summary>
        </member>
        <member name="M:Genome.Reflection.ReflectionUtils.GetFuncInfo``3(System.Linq.Expressions.Expression{System.Func{System.Func{``0,``1,``2}}})">
            <summary>
            Gets method info
            </summary>
        </member>
        <member name="M:Genome.Reflection.ReflectionUtils.GetFuncInfo``4(System.Linq.Expressions.Expression{System.Func{System.Func{``0,``1,``2,``3}}})">
            <summary>
            Gets method info
            </summary>
        </member>
        <member name="M:Genome.Reflection.ReflectionUtils.GetFuncInfo``5(System.Linq.Expressions.Expression{System.Func{System.Func{``0,``1,``2,``3,``4}}})">
            <summary>
            Gets method info
            </summary>
        </member>
        <member name="P:Genome.Reflection.ReflectionUtils.EntryAssembly">
            <summary>
            Gets application entry assembly
            </summary>
        </member>
        <member name="P:Genome.Reflection.ReflectionUtils.GenomeAssembly">
            <summary>
            Gets Genome assembly
            </summary>
        </member>
        <member name="T:Genome.Reflection.TypeFactory">
            <summary>
            Presents a type factory
            </summary>
        </member>
        <member name="M:Genome.Reflection.TypeFactory.GetTypeName">
            <summary>
            Gets result type name
            </summary>
        </member>
        <member name="M:Genome.Reflection.TypeFactory.GetTypeId">
            <summary>
            Gets result type id
            </summary>
        </member>
        <member name="M:Genome.Reflection.TypeFactory.GetTypeAttributes">
            <summary>
            Gets a creating type attributes
            </summary>
        </member>
        <member name="M:Genome.Reflection.TypeFactory.PostProcessing(System.Reflection.Emit.TypeBuilder)">
            <summary>
            Processes a created type
            </summary>
        </member>
        <member name="P:Genome.Reflection.TypeFactory.InitiatorCode">
            <summary>
            Name of initiator code module
            </summary>
        </member>
        <member name="P:Genome.Reflection.TypeFactory.CreatingHandler">
            <summary>
            Hendles a created type
            </summary>
        </member>
        <member name="P:Genome.Reflection.TypeFactory.BaseType">
            <summary>
            Base class type
            </summary>
        </member>
        <member name="P:Genome.Reflection.TypeFactory.Interfaces">
            <summary>
            Interfaces for implementation
            </summary>
        </member>
        <member name="T:Genome.Reflection.ClassFactory">
            <summary>
            Сreates a class
            </summary>
        </member>
        <member name="M:Genome.Reflection.ClassFactory.#ctor(System.Type,System.String,System.Action{System.Reflection.Emit.TypeBuilder})">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Reflection.ClassFactory"/>
            </summary>
        </member>
        <member name="P:Genome.Reflection.ClassFactory.NotSerializable">
            <summary>
            Determines that created class will be marked by <see cref="T:System.SerializableAttribute"/>
            </summary>
        </member>
        <member name="P:Genome.Reflection.ClassFactory.DuplicateConstructors">
            <summary>
            Determines that created class must have same constructors that base class
            </summary>
        </member>
        <member name="T:Genome.Reflection.InterfaceFactory">
            <summary>
            Creates an interface
            </summary>
        </member>
        <member name="M:Genome.Reflection.InterfaceFactory.#ctor(System.Type,System.String,System.Action{System.Reflection.Emit.TypeBuilder})">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Reflection.InterfaceFactory"/>
            </summary>
        </member>
        <member name="T:Genome.Reflection.ClassKey">
            <summary>
            Runtime class key
            </summary>
        </member>
        <member name="P:Genome.Reflection.ClassKey.BaseType">
            <summary>
            Base type
            </summary>
        </member>
        <member name="P:Genome.Reflection.ClassKey.InitiatorCode">
            <summary>
            Unique code of initiator code
            </summary>
        </member>
        <member name="T:Genome.CategoryExtensions">
            <summary>
            Extensions for <see cref="T:Genome.Registry.Category`1"/>
            </summary>
        </member>
        <member name="M:Genome.CategoryExtensions.Register``1(Genome.Registry.Category{``0},``0,Genome.ObjectId)">
            <summary>
            Registers a target object in category
            </summary>
            <param name="category">target category </param>
            <param name="target">object for registering</param>
            <param name="id">registration identifier</param>
            <returns>rollback object</returns>
        </member>
        <member name="M:Genome.CategoryExtensions.Register``1(Genome.Registry.Category{``0},``0)">
            <summary>
            Registers a target object in category
            </summary>
            <param name="category">target category </param>
            <param name="target">object for registering</param>
            <returns>rollback object</returns>
        </member>
        <member name="M:Genome.CategoryExtensions.Unregister``1(Genome.Registry.Category{``0},Genome.ObjectId,``0)">
            <summary>
            Unregisters specified object
            </summary>
            <param name="category">target category </param>
            <param name="id">registration identifier</param>
            <param name="target">target for unregistering</param>
        </member>
        <member name="M:Genome.CategoryExtensions.Unregister``1(Genome.Registry.Category{``0},Genome.ObjectId)">
            <summary>
            Unregisters an object by identifier
            </summary>
            <param name="category">target category </param>
            <param name="id">registration identifier</param>
        </member>
        <member name="T:Genome.Registry.Cell`1">
            <summary>
            Represents a registry cell. Contains stored value 
            </summary>
            <typeparam name="T">Value type</typeparam>
        </member>
        <member name="M:Genome.Registry.Cell`1.#ctor(Genome.ObjectId,Genome.Registry.Category{`0})">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Registry.Cell`1"/>
            </summary>
        </member>
        <member name="P:Genome.Registry.Cell`1.Id">
            <summary>
            Registry cell identifier
            </summary>
        </member>
        <member name="P:Genome.Registry.Cell`1.Category">
            <summary>
            Registry cell identifier
            </summary>
        </member>
        <member name="P:Genome.Registry.Cell`1.Content">
            <summary>
            Stored content
            </summary>
        </member>
        <member name="P:Genome.Registry.Cell`1.IsEmpty">
            <summary>
            Determines that cell contains a value
            </summary>
        </member>
        <member name="E:Genome.Registry.Cell`1.ValueChanged">
            <summary>
            Occures when stored value changed
            </summary>
        </member>
        <member name="T:Genome.Registry.RegistryId">
            <summary>
            Contains full registry identifier
            </summary>
        </member>
        <member name="M:Genome.Registry.RegistryId.#ctor(Genome.ObjectId,Genome.Registry.CategoryId)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.Registry.RegistryId"/>
            </summary>
        </member>
        <member name="M:Genome.Registry.RegistryId.Get(System.Type)">
            <summary>
            Gets <see cref="T:Genome.Registry.RegistryId"/> for specified type
            </summary>
        </member>
        <member name="M:Genome.Registry.RegistryId.Get``1">
            <summary>
            Gets <see cref="T:Genome.Registry.RegistryId"/> for specified type
            </summary>
        </member>
        <member name="M:Genome.Registry.RegistryId.Get``1(Genome.ObjectId)">
            <summary>
            Gets <see cref="T:Genome.Registry.RegistryId"/> for specified type with 'objectId' object identifier
            </summary>
        </member>
        <member name="M:Genome.Registry.RegistryId.Get(System.Type,Genome.ObjectId)">
            <summary>
            Gets <see cref="T:Genome.Registry.RegistryId"/> for specified type with 'objectId' object identifier
            </summary>
        </member>
        <member name="P:Genome.Registry.RegistryId.ObjectId">
            <summary>
            Gets an object identidier
            </summary>
        </member>
        <member name="P:Genome.Registry.RegistryId.CategoryId">
            <summary>
            Gets a category identifier
            </summary>
        </member>
        <member name="T:Genome.Rollback">
            <summary>
            Performs specified action when disposing
            </summary>
        </member>
        <member name="M:Genome.Rollback.#ctor(System.Action)">
            <summary>
            Constructor
            </summary>
            <param name="action">delegate which will be performed when object will disposing</param>
        </member>
        <member name="T:Genome.CastManager">
            <summary>
            Manage object castings
            </summary>
        </member>
        <member name="F:Genome.CastManager.Instance">
            <summary>
            Singleton instance of <see cref="T:Genome.CastManager"/>
            </summary>
        </member>
        <member name="M:Genome.CastManager.CastSafly(System.Object,System.Type)">
            <summary>
            Casts a target object to specified type safly
            </summary>
        </member>
        <member name="M:Genome.CastManager.Cast(System.Object,System.Type)">
            <summary>
            Casts a target object to specified type 
            </summary>
        </member>
        <member name="M:Genome.CastManager.CanCast(System.Object,System.Type)">
            <summary>
            Can it cast target object to target type
            </summary>
        </member>
        <member name="M:Genome.CastManager.RegisterConverter(Genome.ICastConverter,Genome.Priority)">
            <summary>
            Registers cast converter
            </summary>
        </member>
        <member name="M:Genome.CastManager.RegisterExtractor(Genome.ICastExtractor,Genome.Priority)">
            <summary>
            Registers cast extractor
            </summary>
        </member>
        <member name="M:Genome.CastManager.RegisterProcessor(System.Type,Genome.ICastProcessor,Genome.Priority)">
            <summary>
            Registers cast processor
            </summary>
        </member>
        <member name="T:Genome.ContextId">
            <summary>
            <see cref="F:Genome.ContextId.Description"/>
            </summary>
            <remarks>Namespace: '<see cref="F:Genome.ContextId.IdNamespace"/>'</remarks>
        </member>
        <member name="F:Genome.ContextId.IdNamespace">
            <summary>
            Input namespace restriction
            </summary>
        </member>
        <member name="M:Genome.ContextId.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.ContextId"/>
            </summary>
        </member>
        <member name="M:Genome.ContextId.#ctor">
            <summary>
            Serialization constructor
            </summary>
        </member>
        <member name="M:Genome.ContextId.op_Implicit(System.String)~Genome.ContextId">
            <summary>
            Converts a <see cref="T:System.String"/> to <see cref="T:Genome.ContextId"/>
            </summary>
        </member>
        <member name="M:Genome.ContextId.Create(System.String)">
            <summary>
            Creates <see cref="T:Genome.ContextId"/> based on name
            </summary>
        </member>
        <member name="M:Genome.ContextId.Create(System.Guid)">
            <summary>
            Creates <see cref="T:Genome.ContextId"/> based on name
            </summary>
        </member>
        <member name="M:Genome.ContextId.Validate(System.String)">
            <summary>
            Validates identifier
            </summary>
        </member>
        <member name="T:Genome.ContextManager">
            <summary>
            Context manager. Sets and gets context values.
            </summary>
        </member>
        <member name="M:Genome.ContextManager.SetContext(Genome.ContextId,System.Object)">
            <summary>
            Sets a contexts value
            </summary>
            <param name="contextId">context identifier</param>
            <param name="value">context value</param>
            <returns>rollback object for reset value</returns>
        </member>
        <member name="M:Genome.ContextManager.ReleaseContext(Genome.ContextId)">
            <summary>
            Releases a context
            </summary>
            <param name="contextId">context identifier</param>
            <returns>old context</returns>
        </member>
        <member name="M:Genome.ContextManager.GetContext``1(Genome.ContextId)">
            <summary>
            Gets a context value
            </summary>
            <typeparam name="T">value type</typeparam>
            <param name="contextId">context identifier</param>
            <returns>current context value</returns>
        </member>
        <member name="M:Genome.ContextManager.GetContextOrDefault``1(Genome.ContextId,``0)">
            <summary>
            Gets a context value
            </summary>
            <typeparam name="T">value type</typeparam>
            <param name="contextId">context identifier</param>
            <param name="defaultValue">Value that returns if context is not set</param>
            <returns>current context value</returns>
        </member>
        <member name="M:Genome.ContextManager.GetContextStack``1(Genome.ContextId)">
            <summary>
            Gets full context value stack
            </summary>
            <param name="ctxId">context identifier</param>
            <typeparam name="T">context values type</typeparam>
            <returns>context stack</returns>
        </member>
        <member name="M:Genome.ContextManager.Subscribe(Genome.ContextId,System.EventHandler{Genome.ContextChangedArgs})">
            <summary>
            Subscribes for context changes
            </summary>
            <param name="contextId">target context identifier</param>
            <param name="handler">handler</param>
            <returns>unsubscribe control object</returns>
        </member>
        <member name="M:Genome.ContextManager.Unsubscribe(Genome.ContextId,System.EventHandler{Genome.ContextChangedArgs})">
            <summary>
            Unsubscribes for context changes
            </summary>
            <param name="contextId">subscribed context identifier</param>
            <param name="handler">handler</param>
        </member>
        <member name="P:Genome.ContextManager.Instance">
            <summary>
            Single instance
            </summary>
        </member>
        <member name="T:Genome.ContextChangedArgs">
            <summary>
            Contains Context changed event data
            </summary>
        </member>
        <member name="M:Genome.ContextChangedArgs.#ctor(Genome.ContextId,System.Object,System.Object)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.ContextChangedArgs"/>
            </summary>
            <param name="contextId">changed context identifier</param>
            <param name="oldVal">old context value</param>
            <param name="newVal">new context value</param>
        </member>
        <member name="P:Genome.ContextChangedArgs.ContextId">
            <summary>
            Changed context identifier
            </summary>
        </member>
        <member name="P:Genome.ContextChangedArgs.OldValue">
            <summary>
            Old context value
            </summary>
        </member>
        <member name="P:Genome.ContextChangedArgs.NewValue">
            <summary>
            New context value
            </summary>
        </member>
        <member name="T:Genome.SimpleSingletones.ContextIdAttribute">
            <summary>
            Determines context identifier for context class
            </summary>
        </member>
        <member name="M:Genome.SimpleSingletones.ContextIdAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.SimpleSingletones.ContextIdAttribute"/>
            </summary>
            <param name="id">context identifier</param>
        </member>
        <member name="T:Genome.SetConstantContextAspectHandler">
            <summary>
            Contains context set logic
            </summary>
        </member>
        <member name="M:Genome.SetConstantContextAspectHandler.#ctor(Genome.ContextId,System.Object)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.SetConstantContextAspectHandler"/>
            </summary>
        </member>
        <member name="T:Genome.SetObjectContextAttribute">
            <summary>
            Sets context object for marked method
            </summary>
        </member>
        <member name="M:Genome.SetObjectContextAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.SetObjectContextAttribute"/>
            </summary>
        </member>
        <member name="M:Genome.SetObjectContextAttribute.CreateHandler(Genome.ContextId,System.Func{System.Object})">
            <summary>
            Override to create custom handler
            </summary>
        </member>
        <member name="M:Genome.SetObjectContextAttribute.CreateContextValue">
            <summary>
            Override to define context value factoring
            </summary>
        </member>
        <member name="T:Genome.SetObjectContextAspectHandler">
            <summary>
            Contains context set logic
            </summary>
        </member>
        <member name="M:Genome.SetObjectContextAspectHandler.#ctor(Genome.ContextId,System.Func{System.Object})">
            <summary>
            Initializes a new instance of <see cref="T:Genome.SetObjectContextAspectHandler"/>
            </summary>
        </member>
        <member name="T:Genome.ThreadIdentifierManager">
            <summary>
            Provides identifiers for threads
            </summary>
        </member>
        <member name="F:Genome.ThreadIdentifierManager.Instance">
            <summary>
            Singleton instance
            </summary>
        </member>
        <member name="M:Genome.ThreadIdentifierManager.GetThreadId(System.Threading.Thread)">
            <summary>
            Gets identifier for specified thread or for current thread if null
            </summary>
        </member>
        <member name="T:Genome.Singleton">
            <summary>
            Provides singletone of specified type
            </summary>
        </member>
        <member name="M:Genome.Singleton.Get``1">
            <summary>
            Singleton instance
            </summary>
        </member>
        <member name="M:Genome.Singleton.GetOrDefault``1(``0)">
            <summary>
            Singleton instance
            </summary>
        </member>
        <member name="M:Genome.Singleton.Use``1(System.Action{``0})">
            <summary>
            Singleton instance
            </summary>
        </member>
        <member name="M:Genome.Singleton.Get(System.Type)">
            <summary>
            Singleton instance
            </summary>
        </member>
        <member name="T:Genome.StringExtensions">
            <summary>
            Extensions for <see cref="T:System.String"/>
            </summary>
        </member>
        <member name="M:Genome.StringExtensions.Put(System.String,System.Object[])">
            <summary>
            Puts string format arguments
            </summary>
            <param name="formatString">format string</param>
            <param name="args">format arguments</param>
        </member>
        <member name="T:Genome.SystemService.AdvServiceInstallerBase">
            <summary>
            Provides some features arount service installations
            <remarks>For example: takes service name from friendly application name init parameter <see cref="T:Ids.Application.Constants.FriendlyName"/></remarks>
            </summary>
        </member>
        <member name="T:Genome.SystemService.ServiceInstallerBase">
            <summary>
            Provides abilities for service installation
            </summary>
        </member>
        <member name="M:Genome.SystemService.AdvServiceInstallerBase.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Genome.SystemService.AdvServiceInstallerBase"/>
            </summary>
        </member>
        <member name="T:Genome.SystemService.SystemServiceControllerBase">
            <summary>
            Represent the base of block service controller
            </summary>
        </member>
        <member name="M:Genome.SystemService.SystemServiceControllerBase.#ctor(Genome.SystemService.ISystemServiceControllerStrategy)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.SystemService.SystemServiceControllerBase"/>
            </summary>
            <param name="strategy">block service controller strategy</param>
        </member>
        <member name="T:Genome.SystemService.ISystemServiceControllerStrategy">
            <summary>
            Represent strategy for block service controller
            </summary>
        </member>
        <member name="M:Genome.SystemService.ISystemServiceControllerStrategy.CreateServiceLogic">
            <summary>
            Gets service logic
            </summary>
        </member>
        <member name="T:Genome.SystemService.ISysService">
            <summary>
            Represent a service logic
            </summary>
        </member>
        <member name="M:Genome.SystemService.ISysService.Run">
            <summary>
            Runs a service logic
            </summary>
        </member>
        <member name="M:Genome.SystemService.ISysService.Shutdown">
            <summary>
            Stops a service logic
            </summary>
        </member>
        <member name="M:Genome.SystemService.ISysService.Suspend">
            <summary>
            Suspends a service logic
            </summary>
        </member>
        <member name="M:Genome.SystemService.ISysService.Resume">
            <summary>
            Resumes a service logic
            </summary>
        </member>
        <member name="T:Genome.SystemService.SysServiceAttribute">
            <summary>
            Specifies application servcie controller tartget
            </summary>
        </member>
        <member name="M:Genome.SystemService.SysServiceAttribute.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Genome.SystemService.SysServiceAttribute"/>
            </summary>
        </member>
        <member name="M:Genome.SystemService.SysServiceAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.SystemService.SysServiceAttribute"/>
            </summary>
        </member>
        <member name="T:Ids.SystemService.Component">
            <summary>
            <see cref="F:Ids.SystemService.Component.Description"/>
            </summary>
        </member>
        <member name="F:Ids.SystemService.Component.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.SystemService.Component.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.SystemService.AppController">
            <summary>
            <see cref="F:Ids.SystemService.AppController.Description"/>
            </summary>
        </member>
        <member name="F:Ids.SystemService.AppController.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.SystemService.AppController.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.SystemService.FactoryCategories.SystemServices">
            <summary>
            <see cref="F:Ids.SystemService.FactoryCategories.SystemServices.Description"/>
            </summary>
        </member>
        <member name="F:Ids.SystemService.FactoryCategories.SystemServices.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.SystemService.FactoryCategories.SystemServices.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Ids.AppStarting.Constants.SupportInteractive">
            <summary>
            <see cref="F:Ids.AppStarting.Constants.SupportInteractive.Description"/>
            </summary>
        </member>
        <member name="F:Ids.AppStarting.Constants.SupportInteractive.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.AppStarting.Constants.SupportInteractive.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Genome.SystemService.ServiceInitParameters">
            <summary>
            Contains parameters for service based application invocation
            </summary>
        </member>
        <member name="M:Genome.SystemService.ServiceInitParameters.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Genome.SystemService.ServiceInitParameters"/>
            </summary>
        </member>
        <member name="P:Genome.SystemService.ServiceInitParameters.SupportInteractive">
            <summary>
            Determines that service supports an interactive mode
            </summary>
        </member>
        <member name="T:Genome.The">
            <summary>
            Represents the key objects of the framework
            </summary>
        </member>
        <member name="P:Genome.The.Registry">
            <summary>
            The Core registry. Provides abilities for object catalogization
            </summary>
        </member>
        <member name="P:Genome.The.Factory">
            <summary>
            The Core factory. Allow to take a part in object creation
            </summary>
        </member>
        <member name="P:Genome.The.Logger">
            <summary>
            The Logger. Provide fast and easy access to log 
            </summary>
        </member>
        <member name="P:Genome.The.AppManager">
            <summary>
            The AppManager. Provides abilities for application management
            </summary>
        </member>
        <member name="T:Genome.ErrorValidationResult">
            <summary>
            Exception based negative validation result
            </summary>
        </member>
        <member name="T:Genome.ValidationResult">
            <summary>
            Represent a validation result
            </summary>
        </member>
        <member name="F:Genome.ValidationResult.Success">
            <summary>
            Desfault success validation result
            </summary>
        </member>
        <member name="F:Genome.ValidationResult.Fail">
            <summary>
            Desfault fail validation result
            </summary>
        </member>
        <member name="M:Genome.ValidationResult.#ctor(System.Boolean,System.String,Genome.Logging.ErrCodeId)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.ValidationResult"/>
            </summary>
        </member>
        <member name="M:Genome.ValidationResult.CreateException">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Genome.ValidationResult.op_Implicit(System.Boolean)~Genome.ValidationResult">
            <summary>
            Convert operator
            </summary>
        </member>
        <member name="P:Genome.ValidationResult.ErrCodeId">
            <summary>
            Error code
            </summary>
        </member>
        <member name="M:Genome.ErrorValidationResult.#ctor(System.Exception,System.Boolean)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.ErrorValidationResult"/>
            </summary>
        </member>
        <member name="T:Ids.Stuff.Strings.ValidationError">
            <summary>
            <see cref="F:Ids.Stuff.Strings.ValidationError.Description"/>
            </summary>
        </member>
        <member name="F:Ids.Stuff.Strings.ValidationError.Literal">
            <summary>
            A literal identifier value 
            </summary>
        </member>
        <member name="F:Ids.Stuff.Strings.ValidationError.Id">
            <summary>
            An object identifier value
            </summary>
        </member>
        <member name="T:Genome.Validation.ValidationResultBuilder">
            <summary>
            Builds a <see cref="T:Genome.ValidationResult"/>
            </summary>
        </member>
        <member name="M:Genome.Validation.ValidationResultBuilder.ReportError(System.String)">
            <summary>
            Adds validation error description
            </summary>
            <param name="errorDescription">error description</param>
        </member>
        <member name="M:Genome.Validation.ValidationResultBuilder.ReportError(Genome.ValidationResult)">
            <summary>
            Adds validation result report if validation result is fail
            </summary>
        </member>
        <member name="M:Genome.Validation.ValidationResultBuilder.AddAdditional(System.String)">
            <summary>
            Adds additional information about validation
            </summary>
        </member>
        <member name="M:Genome.Validation.ValidationResultBuilder.Build">
            <summary>
            Builds a <see cref="T:Genome.ValidationResult"/>
            </summary>
        </member>
        <member name="P:Genome.Validation.ValidationResultBuilder.IsFailResult">
            <summary>
            Gets 'true' when one o more errors has reported
            </summary>
        </member>
        <member name="T:Genome.Flag">
            <summary>
            Simple bool flag
            </summary>
        </member>
        <member name="T:Genome.WeakReference`1">
            <summary>
            Gets an indication whether the object referenced by the current <see cref="T:Genome.WeakReference`1"/> object is tracked after it is finalized.
            </summary>
            <typeparam name="T">target type</typeparam>
        </member>
        <member name="M:Genome.WeakReference`1.#ctor(`0)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.WeakReference`1"/>
            </summary>
            <param name="target">target object</param>
        </member>
        <member name="M:Genome.WeakReference`1.#ctor(`0,System.Boolean)">
            <summary>
            Initializes a new instance of <see cref="T:Genome.WeakReference`1"/>
            </summary>
            <param name="target">target object</param>
            <param name="trackResurrection">Indicates when to stop tracking the object. If true, the object is tracked after finalization; if false, the object is only tracked until finalization</param>
        </member>
        <member name="P:Genome.WeakReference`1.IsAlive">
            <summary>
            Gets an indication whether the object referenced by the current <see cref="T:Genome.WeakReference`1"/> object has been garbage collected.
            </summary>
        </member>
        <member name="P:Genome.WeakReference`1.TrackResurrection">
            <summary>
            Gets an indication whether the object referenced by the current <see cref="T:Genome.WeakReference`1"/> object is tracked after it is finalized.
            </summary>
        </member>
        <member name="P:Genome.WeakReference`1.Target">
            <summary>
            Gets or sets the object (the target) referenced by the current <see cref="T:Genome.WeakReference`1"/> object.
            </summary>
        </member>
        <member name="T:Genome.XmlNamespaceHolder">
            <summary>
            Holds common Genome namespaces
            </summary>
        </member>
        <member name="F:Genome.XmlNamespaceHolder.Settings">
            <summary>
            Configuration block namespace
            </summary>
        </member>
        <member name="F:Genome.XmlNamespaceHolder.Config">
            <summary>
            Configuration block namespace
            </summary>
        </member>
        <member name="F:Genome.XmlNamespaceHolder.Serialization">
            <summary>
            Serialization namespace
            </summary>
        </member>
    </members>
</doc>
